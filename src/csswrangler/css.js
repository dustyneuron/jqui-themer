module.exports = (function(){
  /* Generated by PEG.js 0.6.2 (http://pegjs.majda.cz/). */
  
  var result = {
    /*
     * Parses the input with a generated parser. If the parsing is successfull,
     * returns a value explicitly or implicitly specified by the grammar from
     * which the parser was generated (see |PEG.buildParser|). If the parsing is
     * unsuccessful, throws |PEG.parser.SyntaxError| describing the error.
     */
    parse: function(input, startRule) {
      var parseFunctions = {
        "A": parse_A,
        "ANGLE": parse_ANGLE,
        "C": parse_C,
        "CDC": parse_CDC,
        "CDO": parse_CDO,
        "CHARSET_SYM": parse_CHARSET_SYM,
        "D": parse_D,
        "DASHMATCH": parse_DASHMATCH,
        "DIMENSION": parse_DIMENSION,
        "E": parse_E,
        "EMS": parse_EMS,
        "EXS": parse_EXS,
        "FREQ": parse_FREQ,
        "FUNCIDENT": parse_FUNCIDENT,
        "FUNCTION": parse_FUNCTION,
        "G": parse_G,
        "H": parse_H,
        "HASH": parse_HASH,
        "I": parse_I,
        "IDENT": parse_IDENT,
        "IMPORTANT_SYM": parse_IMPORTANT_SYM,
        "IMPORT_SYM": parse_IMPORT_SYM,
        "INCLUDES": parse_INCLUDES,
        "K": parse_K,
        "L": parse_L,
        "LENGTH": parse_LENGTH,
        "M": parse_M,
        "MEDIA_SYM": parse_MEDIA_SYM,
        "N": parse_N,
        "NUMBER": parse_NUMBER,
        "O": parse_O,
        "P": parse_P,
        "PAGE_SYM": parse_PAGE_SYM,
        "PERCENTAGE": parse_PERCENTAGE,
        "R": parse_R,
        "S": parse_S,
        "STRING": parse_STRING,
        "S_": parse_S_,
        "T": parse_T,
        "TIME": parse_TIME,
        "U": parse_U,
        "URI": parse_URI,
        "X": parse_X,
        "Z": parse_Z,
        "attrib": parse_attrib,
        "class": parse_class,
        "combinator": parse_combinator,
        "comment": parse_comment,
        "declaration": parse_declaration,
        "element_name": parse_element_name,
        "escape": parse_escape,
        "expr": parse_expr,
        "float": parse_float,
        "function": parse_function,
        "h": parse_h,
        "hexcolor": parse_hexcolor,
        "ident": parse_ident,
        "import": parse_import,
        "integer": parse_integer,
        "media": parse_media,
        "media_list": parse_media_list,
        "medium": parse_medium,
        "name": parse_name,
        "nl": parse_nl,
        "nmchar": parse_nmchar,
        "nmcharfunc": parse_nmcharfunc,
        "nmstart": parse_nmstart,
        "nonascii": parse_nonascii,
        "num": parse_num,
        "operator": parse_operator,
        "page": parse_page,
        "prio": parse_prio,
        "property": parse_property,
        "pseudo": parse_pseudo,
        "pseudo_page": parse_pseudo_page,
        "ruleset": parse_ruleset,
        "s": parse_s,
        "selector": parse_selector,
        "simple_selector": parse_simple_selector,
        "start": parse_start,
        "string": parse_string,
        "string1": parse_string1,
        "string2": parse_string2,
        "stylesheet": parse_stylesheet,
        "term": parse_term,
        "unary_operator": parse_unary_operator,
        "unicode": parse_unicode,
        "url": parse_url,
        "w": parse_w,
        "whole_selector": parse_whole_selector
      };
      
      if (startRule !== undefined) {
        if (parseFunctions[startRule] === undefined) {
          throw new Error("Invalid rule name: " + quote(startRule) + ".");
        }
      } else {
        startRule = "start";
      }
      
      var pos = 0;
      var reportMatchFailures = true;
      var rightmostMatchFailuresPos = 0;
      var rightmostMatchFailuresExpected = [];
      var cache = {};
      
      function padLeft(input, padding, length) {
        var result = input;
        
        var padLength = length - input.length;
        for (var i = 0; i < padLength; i++) {
          result = padding + result;
        }
        
        return result;
      }
      
      function escape(ch) {
        var charCode = ch.charCodeAt(0);
        
        if (charCode <= 0xFF) {
          var escapeChar = 'x';
          var length = 2;
        } else {
          var escapeChar = 'u';
          var length = 4;
        }
        
        return '\\' + escapeChar + padLeft(charCode.toString(16).toUpperCase(), '0', length);
      }
      
      function quote(s) {
        /*
         * ECMA-262, 5th ed., 7.8.4: All characters may appear literally in a
         * string literal except for the closing quote character, backslash,
         * carriage return, line separator, paragraph separator, and line feed.
         * Any character may appear in the form of an escape sequence.
         */
        return '"' + s
          .replace(/\\/g, '\\\\')            // backslash
          .replace(/"/g, '\\"')              // closing quote character
          .replace(/\r/g, '\\r')             // carriage return
          .replace(/\n/g, '\\n')             // line feed
          .replace(/[\x80-\uFFFF]/g, escape) // non-ASCII characters
          + '"';
      }
      
      function matchFailed(failure) {
        if (pos < rightmostMatchFailuresPos) {
          return;
        }
        
        if (pos > rightmostMatchFailuresPos) {
          rightmostMatchFailuresPos = pos;
          rightmostMatchFailuresExpected = [];
        }
        
        rightmostMatchFailuresExpected.push(failure);
      }
      
      function parse_start() {
        var cacheKey = 'start@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var result1 = parse_stylesheet();
        var result2 = result1 !== null
          ? (function(stylesheet) { return stylesheet; })(result1)
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_stylesheet() {
        var cacheKey = 'stylesheet@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var savedPos1 = pos;
        var savedPos8 = pos;
        var result39 = parse_CHARSET_SYM();
        if (result39 !== null) {
          var result40 = parse_STRING();
          if (result40 !== null) {
            if (input.substr(pos, 1) === ";") {
              var result41 = ";";
              pos += 1;
            } else {
              var result41 = null;
              if (reportMatchFailures) {
                matchFailed("\";\"");
              }
            }
            if (result41 !== null) {
              var result38 = [result39, result40, result41];
            } else {
              var result38 = null;
              pos = savedPos8;
            }
          } else {
            var result38 = null;
            pos = savedPos8;
          }
        } else {
          var result38 = null;
          pos = savedPos8;
        }
        var result3 = result38 !== null ? result38 : '';
        if (result3 !== null) {
          var result4 = [];
          var result37 = parse_S();
          if (result37 !== null) {
            var result34 = result37;
          } else {
            var result36 = parse_CDO();
            if (result36 !== null) {
              var result34 = result36;
            } else {
              var result35 = parse_CDC();
              if (result35 !== null) {
                var result34 = result35;
              } else {
                var result34 = null;;
              };
            };
          }
          while (result34 !== null) {
            result4.push(result34);
            var result37 = parse_S();
            if (result37 !== null) {
              var result34 = result37;
            } else {
              var result36 = parse_CDO();
              if (result36 !== null) {
                var result34 = result36;
              } else {
                var result35 = parse_CDC();
                if (result35 !== null) {
                  var result34 = result35;
                } else {
                  var result34 = null;;
                };
              };
            }
          }
          if (result4 !== null) {
            var result5 = [];
            var savedPos5 = pos;
            var result23 = parse_import();
            if (result23 !== null) {
              var result24 = [];
              var savedPos7 = pos;
              var result31 = parse_CDO();
              if (result31 !== null) {
                var result32 = [];
                var result33 = parse_S();
                while (result33 !== null) {
                  result32.push(result33);
                  var result33 = parse_S();
                }
                if (result32 !== null) {
                  var result30 = [result31, result32];
                } else {
                  var result30 = null;
                  pos = savedPos7;
                }
              } else {
                var result30 = null;
                pos = savedPos7;
              }
              if (result30 !== null) {
                var result25 = result30;
              } else {
                var savedPos6 = pos;
                var result27 = parse_CDC();
                if (result27 !== null) {
                  var result28 = [];
                  var result29 = parse_S();
                  while (result29 !== null) {
                    result28.push(result29);
                    var result29 = parse_S();
                  }
                  if (result28 !== null) {
                    var result26 = [result27, result28];
                  } else {
                    var result26 = null;
                    pos = savedPos6;
                  }
                } else {
                  var result26 = null;
                  pos = savedPos6;
                }
                if (result26 !== null) {
                  var result25 = result26;
                } else {
                  var result25 = null;;
                };
              }
              while (result25 !== null) {
                result24.push(result25);
                var savedPos7 = pos;
                var result31 = parse_CDO();
                if (result31 !== null) {
                  var result32 = [];
                  var result33 = parse_S();
                  while (result33 !== null) {
                    result32.push(result33);
                    var result33 = parse_S();
                  }
                  if (result32 !== null) {
                    var result30 = [result31, result32];
                  } else {
                    var result30 = null;
                    pos = savedPos7;
                  }
                } else {
                  var result30 = null;
                  pos = savedPos7;
                }
                if (result30 !== null) {
                  var result25 = result30;
                } else {
                  var savedPos6 = pos;
                  var result27 = parse_CDC();
                  if (result27 !== null) {
                    var result28 = [];
                    var result29 = parse_S();
                    while (result29 !== null) {
                      result28.push(result29);
                      var result29 = parse_S();
                    }
                    if (result28 !== null) {
                      var result26 = [result27, result28];
                    } else {
                      var result26 = null;
                      pos = savedPos6;
                    }
                  } else {
                    var result26 = null;
                    pos = savedPos6;
                  }
                  if (result26 !== null) {
                    var result25 = result26;
                  } else {
                    var result25 = null;;
                  };
                }
              }
              if (result24 !== null) {
                var result22 = [result23, result24];
              } else {
                var result22 = null;
                pos = savedPos5;
              }
            } else {
              var result22 = null;
              pos = savedPos5;
            }
            while (result22 !== null) {
              result5.push(result22);
              var savedPos5 = pos;
              var result23 = parse_import();
              if (result23 !== null) {
                var result24 = [];
                var savedPos7 = pos;
                var result31 = parse_CDO();
                if (result31 !== null) {
                  var result32 = [];
                  var result33 = parse_S();
                  while (result33 !== null) {
                    result32.push(result33);
                    var result33 = parse_S();
                  }
                  if (result32 !== null) {
                    var result30 = [result31, result32];
                  } else {
                    var result30 = null;
                    pos = savedPos7;
                  }
                } else {
                  var result30 = null;
                  pos = savedPos7;
                }
                if (result30 !== null) {
                  var result25 = result30;
                } else {
                  var savedPos6 = pos;
                  var result27 = parse_CDC();
                  if (result27 !== null) {
                    var result28 = [];
                    var result29 = parse_S();
                    while (result29 !== null) {
                      result28.push(result29);
                      var result29 = parse_S();
                    }
                    if (result28 !== null) {
                      var result26 = [result27, result28];
                    } else {
                      var result26 = null;
                      pos = savedPos6;
                    }
                  } else {
                    var result26 = null;
                    pos = savedPos6;
                  }
                  if (result26 !== null) {
                    var result25 = result26;
                  } else {
                    var result25 = null;;
                  };
                }
                while (result25 !== null) {
                  result24.push(result25);
                  var savedPos7 = pos;
                  var result31 = parse_CDO();
                  if (result31 !== null) {
                    var result32 = [];
                    var result33 = parse_S();
                    while (result33 !== null) {
                      result32.push(result33);
                      var result33 = parse_S();
                    }
                    if (result32 !== null) {
                      var result30 = [result31, result32];
                    } else {
                      var result30 = null;
                      pos = savedPos7;
                    }
                  } else {
                    var result30 = null;
                    pos = savedPos7;
                  }
                  if (result30 !== null) {
                    var result25 = result30;
                  } else {
                    var savedPos6 = pos;
                    var result27 = parse_CDC();
                    if (result27 !== null) {
                      var result28 = [];
                      var result29 = parse_S();
                      while (result29 !== null) {
                        result28.push(result29);
                        var result29 = parse_S();
                      }
                      if (result28 !== null) {
                        var result26 = [result27, result28];
                      } else {
                        var result26 = null;
                        pos = savedPos6;
                      }
                    } else {
                      var result26 = null;
                      pos = savedPos6;
                    }
                    if (result26 !== null) {
                      var result25 = result26;
                    } else {
                      var result25 = null;;
                    };
                  }
                }
                if (result24 !== null) {
                  var result22 = [result23, result24];
                } else {
                  var result22 = null;
                  pos = savedPos5;
                }
              } else {
                var result22 = null;
                pos = savedPos5;
              }
            }
            if (result5 !== null) {
              var result6 = [];
              var savedPos2 = pos;
              var result21 = parse_ruleset();
              if (result21 !== null) {
                var result8 = result21;
              } else {
                var result20 = parse_media();
                if (result20 !== null) {
                  var result8 = result20;
                } else {
                  var result19 = parse_page();
                  if (result19 !== null) {
                    var result8 = result19;
                  } else {
                    var result8 = null;;
                  };
                };
              }
              if (result8 !== null) {
                var result9 = [];
                var savedPos4 = pos;
                var result16 = parse_CDO();
                if (result16 !== null) {
                  var result17 = [];
                  var result18 = parse_S();
                  while (result18 !== null) {
                    result17.push(result18);
                    var result18 = parse_S();
                  }
                  if (result17 !== null) {
                    var result15 = [result16, result17];
                  } else {
                    var result15 = null;
                    pos = savedPos4;
                  }
                } else {
                  var result15 = null;
                  pos = savedPos4;
                }
                if (result15 !== null) {
                  var result10 = result15;
                } else {
                  var savedPos3 = pos;
                  var result12 = parse_CDC();
                  if (result12 !== null) {
                    var result13 = [];
                    var result14 = parse_S();
                    while (result14 !== null) {
                      result13.push(result14);
                      var result14 = parse_S();
                    }
                    if (result13 !== null) {
                      var result11 = [result12, result13];
                    } else {
                      var result11 = null;
                      pos = savedPos3;
                    }
                  } else {
                    var result11 = null;
                    pos = savedPos3;
                  }
                  if (result11 !== null) {
                    var result10 = result11;
                  } else {
                    var result10 = null;;
                  };
                }
                while (result10 !== null) {
                  result9.push(result10);
                  var savedPos4 = pos;
                  var result16 = parse_CDO();
                  if (result16 !== null) {
                    var result17 = [];
                    var result18 = parse_S();
                    while (result18 !== null) {
                      result17.push(result18);
                      var result18 = parse_S();
                    }
                    if (result17 !== null) {
                      var result15 = [result16, result17];
                    } else {
                      var result15 = null;
                      pos = savedPos4;
                    }
                  } else {
                    var result15 = null;
                    pos = savedPos4;
                  }
                  if (result15 !== null) {
                    var result10 = result15;
                  } else {
                    var savedPos3 = pos;
                    var result12 = parse_CDC();
                    if (result12 !== null) {
                      var result13 = [];
                      var result14 = parse_S();
                      while (result14 !== null) {
                        result13.push(result14);
                        var result14 = parse_S();
                      }
                      if (result13 !== null) {
                        var result11 = [result12, result13];
                      } else {
                        var result11 = null;
                        pos = savedPos3;
                      }
                    } else {
                      var result11 = null;
                      pos = savedPos3;
                    }
                    if (result11 !== null) {
                      var result10 = result11;
                    } else {
                      var result10 = null;;
                    };
                  }
                }
                if (result9 !== null) {
                  var result7 = [result8, result9];
                } else {
                  var result7 = null;
                  pos = savedPos2;
                }
              } else {
                var result7 = null;
                pos = savedPos2;
              }
              while (result7 !== null) {
                result6.push(result7);
                var savedPos2 = pos;
                var result21 = parse_ruleset();
                if (result21 !== null) {
                  var result8 = result21;
                } else {
                  var result20 = parse_media();
                  if (result20 !== null) {
                    var result8 = result20;
                  } else {
                    var result19 = parse_page();
                    if (result19 !== null) {
                      var result8 = result19;
                    } else {
                      var result8 = null;;
                    };
                  };
                }
                if (result8 !== null) {
                  var result9 = [];
                  var savedPos4 = pos;
                  var result16 = parse_CDO();
                  if (result16 !== null) {
                    var result17 = [];
                    var result18 = parse_S();
                    while (result18 !== null) {
                      result17.push(result18);
                      var result18 = parse_S();
                    }
                    if (result17 !== null) {
                      var result15 = [result16, result17];
                    } else {
                      var result15 = null;
                      pos = savedPos4;
                    }
                  } else {
                    var result15 = null;
                    pos = savedPos4;
                  }
                  if (result15 !== null) {
                    var result10 = result15;
                  } else {
                    var savedPos3 = pos;
                    var result12 = parse_CDC();
                    if (result12 !== null) {
                      var result13 = [];
                      var result14 = parse_S();
                      while (result14 !== null) {
                        result13.push(result14);
                        var result14 = parse_S();
                      }
                      if (result13 !== null) {
                        var result11 = [result12, result13];
                      } else {
                        var result11 = null;
                        pos = savedPos3;
                      }
                    } else {
                      var result11 = null;
                      pos = savedPos3;
                    }
                    if (result11 !== null) {
                      var result10 = result11;
                    } else {
                      var result10 = null;;
                    };
                  }
                  while (result10 !== null) {
                    result9.push(result10);
                    var savedPos4 = pos;
                    var result16 = parse_CDO();
                    if (result16 !== null) {
                      var result17 = [];
                      var result18 = parse_S();
                      while (result18 !== null) {
                        result17.push(result18);
                        var result18 = parse_S();
                      }
                      if (result17 !== null) {
                        var result15 = [result16, result17];
                      } else {
                        var result15 = null;
                        pos = savedPos4;
                      }
                    } else {
                      var result15 = null;
                      pos = savedPos4;
                    }
                    if (result15 !== null) {
                      var result10 = result15;
                    } else {
                      var savedPos3 = pos;
                      var result12 = parse_CDC();
                      if (result12 !== null) {
                        var result13 = [];
                        var result14 = parse_S();
                        while (result14 !== null) {
                          result13.push(result14);
                          var result14 = parse_S();
                        }
                        if (result13 !== null) {
                          var result11 = [result12, result13];
                        } else {
                          var result11 = null;
                          pos = savedPos3;
                        }
                      } else {
                        var result11 = null;
                        pos = savedPos3;
                      }
                      if (result11 !== null) {
                        var result10 = result11;
                      } else {
                        var result10 = null;;
                      };
                    }
                  }
                  if (result9 !== null) {
                    var result7 = [result8, result9];
                  } else {
                    var result7 = null;
                    pos = savedPos2;
                  }
                } else {
                  var result7 = null;
                  pos = savedPos2;
                }
              }
              if (result6 !== null) {
                var result1 = [result3, result4, result5, result6];
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(elements) {
          
                return {
                  type:    "stylesheet",
                  elements: elements
                };
              })(result1)
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_import() {
        var cacheKey = 'import@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = parse_IMPORT_SYM();
        if (result3 !== null) {
          var result4 = [];
          var result15 = parse_S();
          while (result15 !== null) {
            result4.push(result15);
            var result15 = parse_S();
          }
          if (result4 !== null) {
            var result14 = parse_STRING();
            if (result14 !== null) {
              var result5 = result14;
            } else {
              var result13 = parse_URI();
              if (result13 !== null) {
                var result5 = result13;
              } else {
                var result5 = null;;
              };
            }
            if (result5 !== null) {
              var result6 = [];
              var result12 = parse_S();
              while (result12 !== null) {
                result6.push(result12);
                var result12 = parse_S();
              }
              if (result6 !== null) {
                var result11 = parse_media_list();
                var result7 = result11 !== null ? result11 : '';
                if (result7 !== null) {
                  if (input.substr(pos, 1) === ";") {
                    var result8 = ";";
                    pos += 1;
                  } else {
                    var result8 = null;
                    if (reportMatchFailures) {
                      matchFailed("\";\"");
                    }
                  }
                  if (result8 !== null) {
                    var result9 = [];
                    var result10 = parse_S();
                    while (result10 !== null) {
                      result9.push(result10);
                      var result10 = parse_S();
                    }
                    if (result9 !== null) {
                      var result1 = [result3, result4, result5, result6, result7, result8, result9];
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(elements) {
                return {
                  type:  "import_rule",
                  elements: elements,
                  href:  href,
                  media: media !== "" ? media : []
                };
              })(result1)
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_media() {
        var cacheKey = 'media@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = parse_MEDIA_SYM();
        if (result3 !== null) {
          var result4 = [];
          var result14 = parse_S();
          while (result14 !== null) {
            result4.push(result14);
            var result14 = parse_S();
          }
          if (result4 !== null) {
            var result5 = parse_media_list();
            if (result5 !== null) {
              if (input.substr(pos, 1) === "{") {
                var result6 = "{";
                pos += 1;
              } else {
                var result6 = null;
                if (reportMatchFailures) {
                  matchFailed("\"{\"");
                }
              }
              if (result6 !== null) {
                var result7 = [];
                var result13 = parse_S();
                while (result13 !== null) {
                  result7.push(result13);
                  var result13 = parse_S();
                }
                if (result7 !== null) {
                  var result8 = [];
                  var result12 = parse_ruleset();
                  while (result12 !== null) {
                    result8.push(result12);
                    var result12 = parse_ruleset();
                  }
                  if (result8 !== null) {
                    if (input.substr(pos, 1) === "}") {
                      var result9 = "}";
                      pos += 1;
                    } else {
                      var result9 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"}\"");
                      }
                    }
                    if (result9 !== null) {
                      var result10 = [];
                      var result11 = parse_S();
                      while (result11 !== null) {
                        result10.push(result11);
                        var result11 = parse_S();
                      }
                      if (result10 !== null) {
                        var result1 = [result3, result4, result5, result6, result7, result8, result9, result10];
                      } else {
                        var result1 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(elements) {
                return {
                  type:  "media_rule",
                  elements: elements,
                  media: media,
                  rules: rules
                };
              })(result1)
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_media_list() {
        var cacheKey = 'media_list@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = parse_medium();
        if (result3 !== null) {
          var result4 = [];
          var savedPos2 = pos;
          if (input.substr(pos, 1) === ",") {
            var result6 = ",";
            pos += 1;
          } else {
            var result6 = null;
            if (reportMatchFailures) {
              matchFailed("\",\"");
            }
          }
          if (result6 !== null) {
            var result7 = [];
            var result9 = parse_S();
            while (result9 !== null) {
              result7.push(result9);
              var result9 = parse_S();
            }
            if (result7 !== null) {
              var result8 = parse_medium();
              if (result8 !== null) {
                var result5 = [result6, result7, result8];
              } else {
                var result5 = null;
                pos = savedPos2;
              }
            } else {
              var result5 = null;
              pos = savedPos2;
            }
          } else {
            var result5 = null;
            pos = savedPos2;
          }
          while (result5 !== null) {
            result4.push(result5);
            var savedPos2 = pos;
            if (input.substr(pos, 1) === ",") {
              var result6 = ",";
              pos += 1;
            } else {
              var result6 = null;
              if (reportMatchFailures) {
                matchFailed("\",\"");
              }
            }
            if (result6 !== null) {
              var result7 = [];
              var result9 = parse_S();
              while (result9 !== null) {
                result7.push(result9);
                var result9 = parse_S();
              }
              if (result7 !== null) {
                var result8 = parse_medium();
                if (result8 !== null) {
                  var result5 = [result6, result7, result8];
                } else {
                  var result5 = null;
                  pos = savedPos2;
                }
              } else {
                var result5 = null;
                pos = savedPos2;
              }
            } else {
              var result5 = null;
              pos = savedPos2;
            }
          }
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(head, tail) {
                var result = [head];
                for (var i = 0; i < tail.length; i++) {
                  result.push(tail[i][2]);
                }
                return result;
              })(result1[0], result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_medium() {
        var cacheKey = 'medium@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = parse_IDENT();
        if (result3 !== null) {
          var result4 = [];
          var result5 = parse_S();
          while (result5 !== null) {
            result4.push(result5);
            var result5 = parse_S();
          }
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(ident) { return ident; })(result1[0])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_page() {
        var cacheKey = 'page@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = parse_PAGE_SYM();
        if (result3 !== null) {
          var result4 = [];
          var result22 = parse_S();
          while (result22 !== null) {
            result4.push(result22);
            var result22 = parse_S();
          }
          if (result4 !== null) {
            var result21 = parse_pseudo_page();
            var result5 = result21 !== null ? result21 : '';
            if (result5 !== null) {
              if (input.substr(pos, 1) === "{") {
                var result6 = "{";
                pos += 1;
              } else {
                var result6 = null;
                if (reportMatchFailures) {
                  matchFailed("\"{\"");
                }
              }
              if (result6 !== null) {
                var result7 = [];
                var result20 = parse_S();
                while (result20 !== null) {
                  result7.push(result20);
                  var result20 = parse_S();
                }
                if (result7 !== null) {
                  var result19 = parse_declaration();
                  var result8 = result19 !== null ? result19 : '';
                  if (result8 !== null) {
                    var result9 = [];
                    var savedPos2 = pos;
                    if (input.substr(pos, 1) === ";") {
                      var result14 = ";";
                      pos += 1;
                    } else {
                      var result14 = null;
                      if (reportMatchFailures) {
                        matchFailed("\";\"");
                      }
                    }
                    if (result14 !== null) {
                      var result15 = [];
                      var result18 = parse_S();
                      while (result18 !== null) {
                        result15.push(result18);
                        var result18 = parse_S();
                      }
                      if (result15 !== null) {
                        var result17 = parse_declaration();
                        var result16 = result17 !== null ? result17 : '';
                        if (result16 !== null) {
                          var result13 = [result14, result15, result16];
                        } else {
                          var result13 = null;
                          pos = savedPos2;
                        }
                      } else {
                        var result13 = null;
                        pos = savedPos2;
                      }
                    } else {
                      var result13 = null;
                      pos = savedPos2;
                    }
                    while (result13 !== null) {
                      result9.push(result13);
                      var savedPos2 = pos;
                      if (input.substr(pos, 1) === ";") {
                        var result14 = ";";
                        pos += 1;
                      } else {
                        var result14 = null;
                        if (reportMatchFailures) {
                          matchFailed("\";\"");
                        }
                      }
                      if (result14 !== null) {
                        var result15 = [];
                        var result18 = parse_S();
                        while (result18 !== null) {
                          result15.push(result18);
                          var result18 = parse_S();
                        }
                        if (result15 !== null) {
                          var result17 = parse_declaration();
                          var result16 = result17 !== null ? result17 : '';
                          if (result16 !== null) {
                            var result13 = [result14, result15, result16];
                          } else {
                            var result13 = null;
                            pos = savedPos2;
                          }
                        } else {
                          var result13 = null;
                          pos = savedPos2;
                        }
                      } else {
                        var result13 = null;
                        pos = savedPos2;
                      }
                    }
                    if (result9 !== null) {
                      if (input.substr(pos, 1) === "}") {
                        var result10 = "}";
                        pos += 1;
                      } else {
                        var result10 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"}\"");
                        }
                      }
                      if (result10 !== null) {
                        var result11 = [];
                        var result12 = parse_S();
                        while (result12 !== null) {
                          result11.push(result12);
                          var result12 = parse_S();
                        }
                        if (result11 !== null) {
                          var result1 = [result3, result4, result5, result6, result7, result8, result9, result10, result11];
                        } else {
                          var result1 = null;
                          pos = savedPos1;
                        }
                      } else {
                        var result1 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(elements) {
                var declarations = declarationsHead !== "" ? [declarationsHead] : [];
                for (var i = 0; i < declarationsTail.length; i++) {
                  if (declarationsTail[i][2] !== "") {
                    declarations.push(declarationsTail[i][2]);
                  }
                }
          
                return {
                  type:         "page_rule",
                  elements:     elements,
                  qualifier:    qualifier !== "" ? qualifier : null,
                  declarations: declarations
                };
              })(result1)
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_pseudo_page() {
        var cacheKey = 'pseudo_page@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === ":") {
          var result3 = ":";
          pos += 1;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("\":\"");
          }
        }
        if (result3 !== null) {
          var result4 = parse_IDENT();
          if (result4 !== null) {
            var result5 = [];
            var result6 = parse_S();
            while (result6 !== null) {
              result5.push(result6);
              var result6 = parse_S();
            }
            if (result5 !== null) {
              var result1 = [result3, result4, result5];
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(ident) { return ident; })(result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_operator() {
        var cacheKey = 'operator@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var result20 = parse_S();
        if (result20 !== null) {
          var result19 = [];
          while (result20 !== null) {
            result19.push(result20);
            var result20 = parse_S();
          }
        } else {
          var result19 = null;
        }
        if (result19 !== null) {
          var result0 = result19;
        } else {
          var savedPos4 = pos;
          var savedPos5 = pos;
          if (input.substr(pos, 1) === "/") {
            var result16 = "/";
            pos += 1;
          } else {
            var result16 = null;
            if (reportMatchFailures) {
              matchFailed("\"/\"");
            }
          }
          if (result16 !== null) {
            var result17 = [];
            var result18 = parse_S();
            while (result18 !== null) {
              result17.push(result18);
              var result18 = parse_S();
            }
            if (result17 !== null) {
              var result14 = [result16, result17];
            } else {
              var result14 = null;
              pos = savedPos5;
            }
          } else {
            var result14 = null;
            pos = savedPos5;
          }
          var result15 = result14 !== null
            ? (function() { return "/"; })()
            : null;
          if (result15 !== null) {
            var result13 = result15;
          } else {
            var result13 = null;
            pos = savedPos4;
          }
          if (result13 !== null) {
            var result0 = result13;
          } else {
            var savedPos2 = pos;
            var savedPos3 = pos;
            if (input.substr(pos, 1) === ",") {
              var result10 = ",";
              pos += 1;
            } else {
              var result10 = null;
              if (reportMatchFailures) {
                matchFailed("\",\"");
              }
            }
            if (result10 !== null) {
              var result11 = [];
              var result12 = parse_S();
              while (result12 !== null) {
                result11.push(result12);
                var result12 = parse_S();
              }
              if (result11 !== null) {
                var result8 = [result10, result11];
              } else {
                var result8 = null;
                pos = savedPos3;
              }
            } else {
              var result8 = null;
              pos = savedPos3;
            }
            var result9 = result8 !== null
              ? (function() { return ","; })()
              : null;
            if (result9 !== null) {
              var result7 = result9;
            } else {
              var result7 = null;
              pos = savedPos2;
            }
            if (result7 !== null) {
              var result0 = result7;
            } else {
              var savedPos0 = pos;
              var savedPos1 = pos;
              if (input.substr(pos, 1) === "=") {
                var result4 = "=";
                pos += 1;
              } else {
                var result4 = null;
                if (reportMatchFailures) {
                  matchFailed("\"=\"");
                }
              }
              if (result4 !== null) {
                var result5 = [];
                var result6 = parse_S();
                while (result6 !== null) {
                  result5.push(result6);
                  var result6 = parse_S();
                }
                if (result5 !== null) {
                  var result2 = [result4, result5];
                } else {
                  var result2 = null;
                  pos = savedPos1;
                }
              } else {
                var result2 = null;
                pos = savedPos1;
              }
              var result3 = result2 !== null
                ? (function() { return "="; })()
                : null;
              if (result3 !== null) {
                var result1 = result3;
              } else {
                var result1 = null;
                pos = savedPos0;
              }
              if (result1 !== null) {
                var result0 = result1;
              } else {
                var result0 = null;;
              };
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_combinator() {
        var cacheKey = 'combinator@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos2 = pos;
        var savedPos3 = pos;
        if (input.substr(pos, 1) === "+") {
          var result10 = "+";
          pos += 1;
        } else {
          var result10 = null;
          if (reportMatchFailures) {
            matchFailed("\"+\"");
          }
        }
        if (result10 !== null) {
          var result11 = [];
          var result12 = parse_S();
          while (result12 !== null) {
            result11.push(result12);
            var result12 = parse_S();
          }
          if (result11 !== null) {
            var result8 = [result10, result11];
          } else {
            var result8 = null;
            pos = savedPos3;
          }
        } else {
          var result8 = null;
          pos = savedPos3;
        }
        var result9 = result8 !== null
          ? (function() { return "+"; })()
          : null;
        if (result9 !== null) {
          var result7 = result9;
        } else {
          var result7 = null;
          pos = savedPos2;
        }
        if (result7 !== null) {
          var result0 = result7;
        } else {
          var savedPos0 = pos;
          var savedPos1 = pos;
          if (input.substr(pos, 1) === ">") {
            var result4 = ">";
            pos += 1;
          } else {
            var result4 = null;
            if (reportMatchFailures) {
              matchFailed("\">\"");
            }
          }
          if (result4 !== null) {
            var result5 = [];
            var result6 = parse_S();
            while (result6 !== null) {
              result5.push(result6);
              var result6 = parse_S();
            }
            if (result5 !== null) {
              var result2 = [result4, result5];
            } else {
              var result2 = null;
              pos = savedPos1;
            }
          } else {
            var result2 = null;
            pos = savedPos1;
          }
          var result3 = result2 !== null
            ? (function() { return ">"; })()
            : null;
          if (result3 !== null) {
            var result1 = result3;
          } else {
            var result1 = null;
            pos = savedPos0;
          }
          if (result1 !== null) {
            var result0 = result1;
          } else {
            var result0 = null;;
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_unary_operator() {
        var cacheKey = 'unary_operator@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        if (input.substr(pos, 1) === "+") {
          var result2 = "+";
          pos += 1;
        } else {
          var result2 = null;
          if (reportMatchFailures) {
            matchFailed("\"+\"");
          }
        }
        if (result2 !== null) {
          var result0 = result2;
        } else {
          if (input.substr(pos, 1) === "-") {
            var result1 = "-";
            pos += 1;
          } else {
            var result1 = null;
            if (reportMatchFailures) {
              matchFailed("\"-\"");
            }
          }
          if (result1 !== null) {
            var result0 = result1;
          } else {
            var result0 = null;;
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_property() {
        var cacheKey = 'property@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = parse_IDENT();
        if (result3 !== null) {
          var result4 = [];
          var result7 = parse_S();
          if (result7 !== null) {
            var result5 = result7;
          } else {
            var result6 = parse_comment();
            if (result6 !== null) {
              var result5 = result6;
            } else {
              var result5 = null;;
            };
          }
          while (result5 !== null) {
            result4.push(result5);
            var result7 = parse_S();
            if (result7 !== null) {
              var result5 = result7;
            } else {
              var result6 = parse_comment();
              if (result6 !== null) {
                var result5 = result6;
              } else {
                var result5 = null;;
              };
            }
          }
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(ident, other) {
              return {
                  type: 'property',
                  elements: [ident, other]
              };
            })(result1[0], result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_whole_selector() {
        var cacheKey = 'whole_selector@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var result1 = parse_selector();
        var result2 = result1 !== null
          ? (function(selector) {
              return {
                  type: 'whole_selector',
                  elements: [selector]
              };
            })(result1)
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_ruleset() {
        var cacheKey = 'ruleset@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = parse_whole_selector();
        if (result3 !== null) {
          var result4 = [];
          var savedPos3 = pos;
          if (input.substr(pos, 1) === ",") {
            var result21 = ",";
            pos += 1;
          } else {
            var result21 = null;
            if (reportMatchFailures) {
              matchFailed("\",\"");
            }
          }
          if (result21 !== null) {
            var result22 = [];
            var result24 = parse_S();
            while (result24 !== null) {
              result22.push(result24);
              var result24 = parse_S();
            }
            if (result22 !== null) {
              var result23 = parse_whole_selector();
              if (result23 !== null) {
                var result20 = [result21, result22, result23];
              } else {
                var result20 = null;
                pos = savedPos3;
              }
            } else {
              var result20 = null;
              pos = savedPos3;
            }
          } else {
            var result20 = null;
            pos = savedPos3;
          }
          while (result20 !== null) {
            result4.push(result20);
            var savedPos3 = pos;
            if (input.substr(pos, 1) === ",") {
              var result21 = ",";
              pos += 1;
            } else {
              var result21 = null;
              if (reportMatchFailures) {
                matchFailed("\",\"");
              }
            }
            if (result21 !== null) {
              var result22 = [];
              var result24 = parse_S();
              while (result24 !== null) {
                result22.push(result24);
                var result24 = parse_S();
              }
              if (result22 !== null) {
                var result23 = parse_whole_selector();
                if (result23 !== null) {
                  var result20 = [result21, result22, result23];
                } else {
                  var result20 = null;
                  pos = savedPos3;
                }
              } else {
                var result20 = null;
                pos = savedPos3;
              }
            } else {
              var result20 = null;
              pos = savedPos3;
            }
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === "{") {
              var result5 = "{";
              pos += 1;
            } else {
              var result5 = null;
              if (reportMatchFailures) {
                matchFailed("\"{\"");
              }
            }
            if (result5 !== null) {
              var result6 = [];
              var result19 = parse_S();
              while (result19 !== null) {
                result6.push(result19);
                var result19 = parse_S();
              }
              if (result6 !== null) {
                var result18 = parse_declaration();
                var result7 = result18 !== null ? result18 : '';
                if (result7 !== null) {
                  var result8 = [];
                  var savedPos2 = pos;
                  if (input.substr(pos, 1) === ";") {
                    var result13 = ";";
                    pos += 1;
                  } else {
                    var result13 = null;
                    if (reportMatchFailures) {
                      matchFailed("\";\"");
                    }
                  }
                  if (result13 !== null) {
                    var result14 = [];
                    var result17 = parse_S();
                    while (result17 !== null) {
                      result14.push(result17);
                      var result17 = parse_S();
                    }
                    if (result14 !== null) {
                      var result16 = parse_declaration();
                      var result15 = result16 !== null ? result16 : '';
                      if (result15 !== null) {
                        var result12 = [result13, result14, result15];
                      } else {
                        var result12 = null;
                        pos = savedPos2;
                      }
                    } else {
                      var result12 = null;
                      pos = savedPos2;
                    }
                  } else {
                    var result12 = null;
                    pos = savedPos2;
                  }
                  while (result12 !== null) {
                    result8.push(result12);
                    var savedPos2 = pos;
                    if (input.substr(pos, 1) === ";") {
                      var result13 = ";";
                      pos += 1;
                    } else {
                      var result13 = null;
                      if (reportMatchFailures) {
                        matchFailed("\";\"");
                      }
                    }
                    if (result13 !== null) {
                      var result14 = [];
                      var result17 = parse_S();
                      while (result17 !== null) {
                        result14.push(result17);
                        var result17 = parse_S();
                      }
                      if (result14 !== null) {
                        var result16 = parse_declaration();
                        var result15 = result16 !== null ? result16 : '';
                        if (result15 !== null) {
                          var result12 = [result13, result14, result15];
                        } else {
                          var result12 = null;
                          pos = savedPos2;
                        }
                      } else {
                        var result12 = null;
                        pos = savedPos2;
                      }
                    } else {
                      var result12 = null;
                      pos = savedPos2;
                    }
                  }
                  if (result8 !== null) {
                    if (input.substr(pos, 1) === "}") {
                      var result9 = "}";
                      pos += 1;
                    } else {
                      var result9 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"}\"");
                      }
                    }
                    if (result9 !== null) {
                      var result10 = [];
                      var result11 = parse_S();
                      while (result11 !== null) {
                        result10.push(result11);
                        var result11 = parse_S();
                      }
                      if (result10 !== null) {
                        var result1 = [result3, result4, result5, result6, result7, result8, result9, result10];
                      } else {
                        var result1 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(elements) {
                return {
                  type:         "ruleset",
                  elements:     elements
                };
              })(result1)
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_selector() {
        var cacheKey = 'selector@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos4 = pos;
        var savedPos5 = pos;
        var result17 = parse_simple_selector();
        if (result17 !== null) {
          var result18 = [];
          var result21 = parse_S();
          while (result21 !== null) {
            result18.push(result21);
            var result21 = parse_S();
          }
          if (result18 !== null) {
            var result19 = parse_combinator();
            if (result19 !== null) {
              var result20 = parse_selector();
              if (result20 !== null) {
                var result15 = [result17, result18, result19, result20];
              } else {
                var result15 = null;
                pos = savedPos5;
              }
            } else {
              var result15 = null;
              pos = savedPos5;
            }
          } else {
            var result15 = null;
            pos = savedPos5;
          }
        } else {
          var result15 = null;
          pos = savedPos5;
        }
        var result16 = result15 !== null
          ? (function(elements) {
                return {
                  type:       "selector",
                  elements:     elements
                };
              })(result15)
          : null;
        if (result16 !== null) {
          var result14 = result16;
        } else {
          var result14 = null;
          pos = savedPos4;
        }
        if (result14 !== null) {
          var result0 = result14;
        } else {
          var savedPos2 = pos;
          var savedPos3 = pos;
          var result10 = parse_simple_selector();
          if (result10 !== null) {
            var result13 = parse_S();
            if (result13 !== null) {
              var result11 = [];
              while (result13 !== null) {
                result11.push(result13);
                var result13 = parse_S();
              }
            } else {
              var result11 = null;
            }
            if (result11 !== null) {
              var result12 = parse_selector();
              if (result12 !== null) {
                var result8 = [result10, result11, result12];
              } else {
                var result8 = null;
                pos = savedPos3;
              }
            } else {
              var result8 = null;
              pos = savedPos3;
            }
          } else {
            var result8 = null;
            pos = savedPos3;
          }
          var result9 = result8 !== null
            ? (function(elements) {
                  return {
                    type:       "selector",
                    elements:     elements
                  };
                })(result8)
            : null;
          if (result9 !== null) {
            var result7 = result9;
          } else {
            var result7 = null;
            pos = savedPos2;
          }
          if (result7 !== null) {
            var result0 = result7;
          } else {
            var savedPos0 = pos;
            var savedPos1 = pos;
            var result4 = parse_simple_selector();
            if (result4 !== null) {
              var result5 = [];
              var result6 = parse_S();
              while (result6 !== null) {
                result5.push(result6);
                var result6 = parse_S();
              }
              if (result5 !== null) {
                var result2 = [result4, result5];
              } else {
                var result2 = null;
                pos = savedPos1;
              }
            } else {
              var result2 = null;
              pos = savedPos1;
            }
            var result3 = result2 !== null
              ? (function(elements) {
                    return {
                      type:       "selector",
                      elements:     elements
                    };
                  })(result2)
              : null;
            if (result3 !== null) {
              var result1 = result3;
            } else {
              var result1 = null;
              pos = savedPos0;
            }
            if (result1 !== null) {
              var result0 = result1;
            } else {
              var result0 = null;;
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_simple_selector() {
        var cacheKey = 'simple_selector@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos2 = pos;
        var savedPos3 = pos;
        var result14 = parse_element_name();
        if (result14 !== null) {
          var result15 = [];
          var savedPos4 = pos;
          var result21 = parse_HASH();
          var result22 = result21 !== null
            ? (function(id) { return { type: "ID selector", elements: [id] }; })(result21)
            : null;
          if (result22 !== null) {
            var result20 = result22;
          } else {
            var result20 = null;
            pos = savedPos4;
          }
          if (result20 !== null) {
            var result16 = result20;
          } else {
            var result19 = parse_class();
            if (result19 !== null) {
              var result16 = result19;
            } else {
              var result18 = parse_attrib();
              if (result18 !== null) {
                var result16 = result18;
              } else {
                var result17 = parse_pseudo();
                if (result17 !== null) {
                  var result16 = result17;
                } else {
                  var result16 = null;;
                };
              };
            };
          }
          while (result16 !== null) {
            result15.push(result16);
            var savedPos4 = pos;
            var result21 = parse_HASH();
            var result22 = result21 !== null
              ? (function(id) { return { type: "ID selector", elements: [id] }; })(result21)
              : null;
            if (result22 !== null) {
              var result20 = result22;
            } else {
              var result20 = null;
              pos = savedPos4;
            }
            if (result20 !== null) {
              var result16 = result20;
            } else {
              var result19 = parse_class();
              if (result19 !== null) {
                var result16 = result19;
              } else {
                var result18 = parse_attrib();
                if (result18 !== null) {
                  var result16 = result18;
                } else {
                  var result17 = parse_pseudo();
                  if (result17 !== null) {
                    var result16 = result17;
                  } else {
                    var result16 = null;;
                  };
                };
              };
            }
          }
          if (result15 !== null) {
            var result12 = [result14, result15];
          } else {
            var result12 = null;
            pos = savedPos3;
          }
        } else {
          var result12 = null;
          pos = savedPos3;
        }
        var result13 = result12 !== null
          ? (function(element, qualifiers) {
                return {
                  type:       "simple_selector",
                  elements: [
                      {
                          type:'element_selector',
                          elements:[element]
                      },
                      qualifiers
                  ]
                };
              })(result12[0], result12[1])
          : null;
        if (result13 !== null) {
          var result11 = result13;
        } else {
          var result11 = null;
          pos = savedPos2;
        }
        if (result11 !== null) {
          var result0 = result11;
        } else {
          var savedPos0 = pos;
          var savedPos1 = pos;
          var result9 = parse_HASH();
          var result10 = result9 !== null
            ? (function(id) { return { type: "ID selector", elements: [id] }; })(result9)
            : null;
          if (result10 !== null) {
            var result8 = result10;
          } else {
            var result8 = null;
            pos = savedPos1;
          }
          if (result8 !== null) {
            var result4 = result8;
          } else {
            var result7 = parse_class();
            if (result7 !== null) {
              var result4 = result7;
            } else {
              var result6 = parse_attrib();
              if (result6 !== null) {
                var result4 = result6;
              } else {
                var result5 = parse_pseudo();
                if (result5 !== null) {
                  var result4 = result5;
                } else {
                  var result4 = null;;
                };
              };
            };
          }
          if (result4 !== null) {
            var result2 = [];
            while (result4 !== null) {
              result2.push(result4);
              var savedPos1 = pos;
              var result9 = parse_HASH();
              var result10 = result9 !== null
                ? (function(id) { return { type: "ID selector", elements: [id] }; })(result9)
                : null;
              if (result10 !== null) {
                var result8 = result10;
              } else {
                var result8 = null;
                pos = savedPos1;
              }
              if (result8 !== null) {
                var result4 = result8;
              } else {
                var result7 = parse_class();
                if (result7 !== null) {
                  var result4 = result7;
                } else {
                  var result6 = parse_attrib();
                  if (result6 !== null) {
                    var result4 = result6;
                  } else {
                    var result5 = parse_pseudo();
                    if (result5 !== null) {
                      var result4 = result5;
                    } else {
                      var result4 = null;;
                    };
                  };
                };
              }
            }
          } else {
            var result2 = null;
          }
          var result3 = result2 !== null
            ? (function(qualifiers) {
                  return {
                    type:       "simple_selector",
                    elements: qualifiers
                  };
                })(result2)
            : null;
          if (result3 !== null) {
            var result1 = result3;
          } else {
            var result1 = null;
            pos = savedPos0;
          }
          if (result1 !== null) {
            var result0 = result1;
          } else {
            var result0 = null;;
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_class() {
        var cacheKey = 'class@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === ".") {
          var result3 = ".";
          pos += 1;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("\".\"");
          }
        }
        if (result3 !== null) {
          var result4 = parse_IDENT();
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(class_) {
                  return {
                      type: "class_selector",
                      elements: ['.', class_]
                  };
              })(result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_element_name() {
        var cacheKey = 'element_name@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var result2 = parse_IDENT();
        if (result2 !== null) {
          var result0 = result2;
        } else {
          if (input.substr(pos, 1) === "*") {
            var result1 = "*";
            pos += 1;
          } else {
            var result1 = null;
            if (reportMatchFailures) {
              matchFailed("\"*\"");
            }
          }
          if (result1 !== null) {
            var result0 = result1;
          } else {
            var result0 = null;;
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_attrib() {
        var cacheKey = 'attrib@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "[") {
          var result3 = "[";
          pos += 1;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("\"[\"");
          }
        }
        if (result3 !== null) {
          var result4 = [];
          var result22 = parse_S();
          while (result22 !== null) {
            result4.push(result22);
            var result22 = parse_S();
          }
          if (result4 !== null) {
            var result5 = parse_IDENT();
            if (result5 !== null) {
              var result6 = [];
              var result21 = parse_S();
              while (result21 !== null) {
                result6.push(result21);
                var result21 = parse_S();
              }
              if (result6 !== null) {
                var savedPos2 = pos;
                if (input.substr(pos, 1) === "=") {
                  var result20 = "=";
                  pos += 1;
                } else {
                  var result20 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"=\"");
                  }
                }
                if (result20 !== null) {
                  var result10 = result20;
                } else {
                  var result19 = parse_INCLUDES();
                  if (result19 !== null) {
                    var result10 = result19;
                  } else {
                    var result18 = parse_DASHMATCH();
                    if (result18 !== null) {
                      var result10 = result18;
                    } else {
                      var result10 = null;;
                    };
                  };
                }
                if (result10 !== null) {
                  var result11 = [];
                  var result17 = parse_S();
                  while (result17 !== null) {
                    result11.push(result17);
                    var result17 = parse_S();
                  }
                  if (result11 !== null) {
                    var result16 = parse_IDENT();
                    if (result16 !== null) {
                      var result12 = result16;
                    } else {
                      var result15 = parse_STRING();
                      if (result15 !== null) {
                        var result12 = result15;
                      } else {
                        var result12 = null;;
                      };
                    }
                    if (result12 !== null) {
                      var result13 = [];
                      var result14 = parse_S();
                      while (result14 !== null) {
                        result13.push(result14);
                        var result14 = parse_S();
                      }
                      if (result13 !== null) {
                        var result9 = [result10, result11, result12, result13];
                      } else {
                        var result9 = null;
                        pos = savedPos2;
                      }
                    } else {
                      var result9 = null;
                      pos = savedPos2;
                    }
                  } else {
                    var result9 = null;
                    pos = savedPos2;
                  }
                } else {
                  var result9 = null;
                  pos = savedPos2;
                }
                var result7 = result9 !== null ? result9 : '';
                if (result7 !== null) {
                  if (input.substr(pos, 1) === "]") {
                    var result8 = "]";
                    pos += 1;
                  } else {
                    var result8 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"]\"");
                    }
                  }
                  if (result8 !== null) {
                    var result1 = [result3, result4, result5, result6, result7, result8];
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(attribute, operatorAndValue) {
                return {
                  type:      "attribute_selector",
                  attribute: attribute,
                  operator:  operatorAndValue !== "" ? operatorAndValue[0] : null,
                  value:     operatorAndValue !== "" ? operatorAndValue[2] : null
                };
              })(result1[2], result1[4])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_pseudo() {
        var cacheKey = 'pseudo@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === ":") {
          var result3 = ":";
          pos += 1;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("\":\"");
          }
        }
        if (result3 !== null) {
          var savedPos3 = pos;
          var savedPos4 = pos;
          var result12 = parse_FUNCTION();
          if (result12 !== null) {
            var result13 = [];
            var result20 = parse_S();
            while (result20 !== null) {
              result13.push(result20);
              var result20 = parse_S();
            }
            if (result13 !== null) {
              var savedPos5 = pos;
              var result17 = parse_IDENT();
              if (result17 !== null) {
                var result18 = [];
                var result19 = parse_S();
                while (result19 !== null) {
                  result18.push(result19);
                  var result19 = parse_S();
                }
                if (result18 !== null) {
                  var result16 = [result17, result18];
                } else {
                  var result16 = null;
                  pos = savedPos5;
                }
              } else {
                var result16 = null;
                pos = savedPos5;
              }
              var result14 = result16 !== null ? result16 : '';
              if (result14 !== null) {
                if (input.substr(pos, 1) === ")") {
                  var result15 = ")";
                  pos += 1;
                } else {
                  var result15 = null;
                  if (reportMatchFailures) {
                    matchFailed("\")\"");
                  }
                }
                if (result15 !== null) {
                  var result10 = [result12, result13, result14, result15];
                } else {
                  var result10 = null;
                  pos = savedPos4;
                }
              } else {
                var result10 = null;
                pos = savedPos4;
              }
            } else {
              var result10 = null;
              pos = savedPos4;
            }
          } else {
            var result10 = null;
            pos = savedPos4;
          }
          var result11 = result10 !== null
            ? (function(name, params) {
                      return {
                        type:   "function",
                        name:   name,
                        params: params !== "" ? [params[0]] : []
                      };
                    })(result10[0], result10[2])
            : null;
          if (result11 !== null) {
            var result9 = result11;
          } else {
            var result9 = null;
            pos = savedPos3;
          }
          if (result9 !== null) {
            var result4 = result9;
          } else {
            var result8 = parse_IDENT();
            if (result8 !== null) {
              var result4 = result8;
            } else {
              var savedPos2 = pos;
              if (input.substr(pos, 1) === ":") {
                var result6 = ":";
                pos += 1;
              } else {
                var result6 = null;
                if (reportMatchFailures) {
                  matchFailed("\":\"");
                }
              }
              if (result6 !== null) {
                var result7 = parse_IDENT();
                if (result7 !== null) {
                  var result5 = [result6, result7];
                } else {
                  var result5 = null;
                  pos = savedPos2;
                }
              } else {
                var result5 = null;
                pos = savedPos2;
              }
              if (result5 !== null) {
                var result4 = result5;
              } else {
                var result4 = null;;
              };
            };
          }
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(value) {
                /*
                 * The returned object has somewhat vague property names and values because
                 * the rule matches both pseudo-classes and pseudo-elements (they look the
                 * same at the syntactic level).
                 */
                return {
                  type:  "pseudo_selector",
                  value: value,
                  elements: [':', value]
                };
              })(result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_declaration() {
        var cacheKey = 'declaration@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = parse_property();
        if (result3 !== null) {
          if (input.substr(pos, 1) === ":") {
            var result4 = ":";
            pos += 1;
          } else {
            var result4 = null;
            if (reportMatchFailures) {
              matchFailed("\":\"");
            }
          }
          if (result4 !== null) {
            var result5 = [];
            var result11 = parse_S();
            while (result11 !== null) {
              result5.push(result11);
              var result11 = parse_S();
            }
            if (result5 !== null) {
              var result6 = parse_expr();
              if (result6 !== null) {
                var result10 = parse_prio();
                var result7 = result10 !== null ? result10 : '';
                if (result7 !== null) {
                  var result9 = parse_comment();
                  var result8 = result9 !== null ? result9 : '';
                  if (result8 !== null) {
                    var result1 = [result3, result4, result5, result6, result7, result8];
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(elements) {
                return {
                  type:       "declaration",
                  elements:   elements
                };
              })(result1)
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_prio() {
        var cacheKey = 'prio@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var result1 = [];
        var result5 = parse_S();
        while (result5 !== null) {
          result1.push(result5);
          var result5 = parse_S();
        }
        if (result1 !== null) {
          var result2 = parse_IMPORTANT_SYM();
          if (result2 !== null) {
            var result3 = [];
            var result4 = parse_S();
            while (result4 !== null) {
              result3.push(result4);
              var result4 = parse_S();
            }
            if (result3 !== null) {
              var result0 = [result1, result2, result3];
            } else {
              var result0 = null;
              pos = savedPos0;
            }
          } else {
            var result0 = null;
            pos = savedPos0;
          }
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_expr() {
        var cacheKey = 'expr@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = parse_term();
        if (result3 !== null) {
          var result4 = [];
          var savedPos2 = pos;
          var result8 = parse_operator();
          var result6 = result8 !== null ? result8 : '';
          if (result6 !== null) {
            var result7 = parse_term();
            if (result7 !== null) {
              var result5 = [result6, result7];
            } else {
              var result5 = null;
              pos = savedPos2;
            }
          } else {
            var result5 = null;
            pos = savedPos2;
          }
          while (result5 !== null) {
            result4.push(result5);
            var savedPos2 = pos;
            var result8 = parse_operator();
            var result6 = result8 !== null ? result8 : '';
            if (result6 !== null) {
              var result7 = parse_term();
              if (result7 !== null) {
                var result5 = [result6, result7];
              } else {
                var result5 = null;
                pos = savedPos2;
              }
            } else {
              var result5 = null;
              pos = savedPos2;
            }
          }
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(head, tail) {
                return {
                    type:     "expression",
                    elements: [head, tail]
                };
              })(result1[0], result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_term() {
        var cacheKey = 'term@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos7 = pos;
        if (input.substr(pos, 7) === "progid:") {
          var result31 = "progid:";
          pos += 7;
        } else {
          var result31 = null;
          if (reportMatchFailures) {
            matchFailed("\"progid:\"");
          }
        }
        if (result31 !== null) {
          var result32 = [];
          var result34 = parse_S();
          while (result34 !== null) {
            result32.push(result34);
            var result34 = parse_S();
          }
          if (result32 !== null) {
            var result33 = parse_term();
            if (result33 !== null) {
              var result30 = [result31, result32, result33];
            } else {
              var result30 = null;
              pos = savedPos7;
            }
          } else {
            var result30 = null;
            pos = savedPos7;
          }
        } else {
          var result30 = null;
          pos = savedPos7;
        }
        if (result30 !== null) {
          var result0 = result30;
        } else {
          var savedPos5 = pos;
          var savedPos6 = pos;
          var result29 = parse_unary_operator();
          var result19 = result29 !== null ? result29 : '';
          if (result19 !== null) {
            var result28 = parse_EMS();
            if (result28 !== null) {
              var result20 = result28;
            } else {
              var result27 = parse_EXS();
              if (result27 !== null) {
                var result20 = result27;
              } else {
                var result26 = parse_LENGTH();
                if (result26 !== null) {
                  var result20 = result26;
                } else {
                  var result25 = parse_ANGLE();
                  if (result25 !== null) {
                    var result20 = result25;
                  } else {
                    var result24 = parse_TIME();
                    if (result24 !== null) {
                      var result20 = result24;
                    } else {
                      var result23 = parse_FREQ();
                      if (result23 !== null) {
                        var result20 = result23;
                      } else {
                        var result22 = parse_PERCENTAGE();
                        if (result22 !== null) {
                          var result20 = result22;
                        } else {
                          var result21 = parse_NUMBER();
                          if (result21 !== null) {
                            var result20 = result21;
                          } else {
                            var result20 = null;;
                          };
                        };
                      };
                    };
                  };
                };
              };
            }
            if (result20 !== null) {
              var result17 = [result19, result20];
            } else {
              var result17 = null;
              pos = savedPos6;
            }
          } else {
            var result17 = null;
            pos = savedPos6;
          }
          var result18 = result17 !== null
            ? (function(operator, value) { return { type: "term", elements: [operator, value] }; })(result17[0], result17[1])
            : null;
          if (result18 !== null) {
            var result16 = result18;
          } else {
            var result16 = null;
            pos = savedPos5;
          }
          if (result16 !== null) {
            var result0 = result16;
          } else {
            var savedPos4 = pos;
            var result14 = parse_URI();
            var result15 = result14 !== null
              ? (function(value) { return { type: "term", elements: [value] }; })(result14)
              : null;
            if (result15 !== null) {
              var result13 = result15;
            } else {
              var result13 = null;
              pos = savedPos4;
            }
            if (result13 !== null) {
              var result0 = result13;
            } else {
              var savedPos3 = pos;
              var result11 = parse_function();
              var result12 = result11 !== null
                ? (function(func) { return { type: "term", elements: [func] }; })(result11)
                : null;
              if (result12 !== null) {
                var result10 = result12;
              } else {
                var result10 = null;
                pos = savedPos3;
              }
              if (result10 !== null) {
                var result0 = result10;
              } else {
                var savedPos2 = pos;
                var result8 = parse_hexcolor();
                var result9 = result8 !== null
                  ? (function(col) { return { type: "term", elements: [col] }; })(result8)
                  : null;
                if (result9 !== null) {
                  var result7 = result9;
                } else {
                  var result7 = null;
                  pos = savedPos2;
                }
                if (result7 !== null) {
                  var result0 = result7;
                } else {
                  var savedPos1 = pos;
                  var result5 = parse_STRING();
                  var result6 = result5 !== null
                    ? (function(value) { return { type: "term", elements: [value] }; })(result5)
                    : null;
                  if (result6 !== null) {
                    var result4 = result6;
                  } else {
                    var result4 = null;
                    pos = savedPos1;
                  }
                  if (result4 !== null) {
                    var result0 = result4;
                  } else {
                    var savedPos0 = pos;
                    var result2 = parse_IDENT();
                    var result3 = result2 !== null
                      ? (function(value) { return { type: "term", elements: [value] }; })(result2)
                      : null;
                    if (result3 !== null) {
                      var result1 = result3;
                    } else {
                      var result1 = null;
                      pos = savedPos0;
                    }
                    if (result1 !== null) {
                      var result0 = result1;
                    } else {
                      var result0 = null;;
                    };
                  };
                };
              };
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_function() {
        var cacheKey = 'function@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = parse_FUNCTION();
        if (result3 !== null) {
          var result4 = [];
          var result8 = parse_S();
          while (result8 !== null) {
            result4.push(result8);
            var result8 = parse_S();
          }
          if (result4 !== null) {
            var result7 = parse_expr();
            var result5 = result7 !== null ? result7 : '';
            if (result5 !== null) {
              if (input.substr(pos, 1) === ")") {
                var result6 = ")";
                pos += 1;
              } else {
                var result6 = null;
                if (reportMatchFailures) {
                  matchFailed("\")\"");
                }
              }
              if (result6 !== null) {
                var result1 = [result3, result4, result5, result6];
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(name, space1, params) {
                return {
                  type:   "term",
                  elements: [name, space1, params, ')']
                };
              })(result1[0], result1[1], result1[2])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_hexcolor() {
        var cacheKey = 'hexcolor@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var result1 = parse_HASH();
        var result2 = result1 !== null
          ? (function(value) { return { type: "hexcolor", elements: [value]}; })(result1)
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_h() {
        var cacheKey = 'h@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        if (input.substr(pos).match(/^[0-9a-fA-F]/) !== null) {
          var result0 = input.charAt(pos);
          pos++;
        } else {
          var result0 = null;
          if (reportMatchFailures) {
            matchFailed("[0-9a-fA-F]");
          }
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_nonascii() {
        var cacheKey = 'nonascii@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        if (input.substr(pos).match(/^[\x80-\xFF]/) !== null) {
          var result0 = input.charAt(pos);
          pos++;
        } else {
          var result0 = null;
          if (reportMatchFailures) {
            matchFailed("[\\x80-\\xFF]");
          }
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_unicode() {
        var cacheKey = 'unicode@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "\\") {
          var result3 = "\\";
          pos += 1;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("\"\\\\\"");
          }
        }
        if (result3 !== null) {
          var result4 = parse_h();
          if (result4 !== null) {
            var result18 = parse_h();
            var result5 = result18 !== null ? result18 : '';
            if (result5 !== null) {
              var result17 = parse_h();
              var result6 = result17 !== null ? result17 : '';
              if (result6 !== null) {
                var result16 = parse_h();
                var result7 = result16 !== null ? result16 : '';
                if (result7 !== null) {
                  var result15 = parse_h();
                  var result8 = result15 !== null ? result15 : '';
                  if (result8 !== null) {
                    var result14 = parse_h();
                    var result9 = result14 !== null ? result14 : '';
                    if (result9 !== null) {
                      if (input.substr(pos, 2) === "\r\n") {
                        var result13 = "\r\n";
                        pos += 2;
                      } else {
                        var result13 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"\\r\\n\"");
                        }
                      }
                      if (result13 !== null) {
                        var result11 = result13;
                      } else {
                        if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                          var result12 = input.charAt(pos);
                          pos++;
                        } else {
                          var result12 = null;
                          if (reportMatchFailures) {
                            matchFailed("[ 	\\r\\n]");
                          }
                        }
                        if (result12 !== null) {
                          var result11 = result12;
                        } else {
                          var result11 = null;;
                        };
                      }
                      var result10 = result11 !== null ? result11 : '';
                      if (result10 !== null) {
                        var result1 = [result3, result4, result5, result6, result7, result8, result9, result10];
                      } else {
                        var result1 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(h1, h2, h3, h4, h5, h6) {
                return String.fromCharCode(parseInt("0x" + h1 + h2 + h3 + h4 + h5 + h6));
              })(result1[1], result1[2], result1[3], result1[4], result1[5], result1[6])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_escape() {
        var cacheKey = 'escape@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var result6 = parse_unicode();
        if (result6 !== null) {
          var result0 = result6;
        } else {
          var savedPos0 = pos;
          var savedPos1 = pos;
          if (input.substr(pos, 1) === "\\") {
            var result4 = "\\";
            pos += 1;
          } else {
            var result4 = null;
            if (reportMatchFailures) {
              matchFailed("\"\\\\\"");
            }
          }
          if (result4 !== null) {
            if (input.substr(pos).match(/^[^\r\n0-9a-fA-F]/) !== null) {
              var result5 = input.charAt(pos);
              pos++;
            } else {
              var result5 = null;
              if (reportMatchFailures) {
                matchFailed("[^\\r\\n0-9a-fA-F]");
              }
            }
            if (result5 !== null) {
              var result2 = [result4, result5];
            } else {
              var result2 = null;
              pos = savedPos1;
            }
          } else {
            var result2 = null;
            pos = savedPos1;
          }
          var result3 = result2 !== null
            ? (function(char_) { return char_; })(result2[1])
            : null;
          if (result3 !== null) {
            var result1 = result3;
          } else {
            var result1 = null;
            pos = savedPos0;
          }
          if (result1 !== null) {
            var result0 = result1;
          } else {
            var result0 = null;;
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_nmstart() {
        var cacheKey = 'nmstart@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        if (input.substr(pos).match(/^[_a-zA-Z]/) !== null) {
          var result3 = input.charAt(pos);
          pos++;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("[_a-zA-Z]");
          }
        }
        if (result3 !== null) {
          var result0 = result3;
        } else {
          var result2 = parse_nonascii();
          if (result2 !== null) {
            var result0 = result2;
          } else {
            var result1 = parse_escape();
            if (result1 !== null) {
              var result0 = result1;
            } else {
              var result0 = null;;
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_nmchar() {
        var cacheKey = 'nmchar@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        if (input.substr(pos).match(/^[_a-zA-Z0-9\-]/) !== null) {
          var result3 = input.charAt(pos);
          pos++;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("[_a-zA-Z0-9\\-]");
          }
        }
        if (result3 !== null) {
          var result0 = result3;
        } else {
          var result2 = parse_nonascii();
          if (result2 !== null) {
            var result0 = result2;
          } else {
            var result1 = parse_escape();
            if (result1 !== null) {
              var result0 = result1;
            } else {
              var result0 = null;;
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_integer() {
        var cacheKey = 'integer@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        if (input.substr(pos).match(/^[0-9]/) !== null) {
          var result3 = input.charAt(pos);
          pos++;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("[0-9]");
          }
        }
        if (result3 !== null) {
          var result1 = [];
          while (result3 !== null) {
            result1.push(result3);
            if (input.substr(pos).match(/^[0-9]/) !== null) {
              var result3 = input.charAt(pos);
              pos++;
            } else {
              var result3 = null;
              if (reportMatchFailures) {
                matchFailed("[0-9]");
              }
            }
          }
        } else {
          var result1 = null;
        }
        var result2 = result1 !== null
          ? (function(digits) { return parseInt(digits.join("")); })(result1)
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_float() {
        var cacheKey = 'float@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = [];
        if (input.substr(pos).match(/^[0-9]/) !== null) {
          var result7 = input.charAt(pos);
          pos++;
        } else {
          var result7 = null;
          if (reportMatchFailures) {
            matchFailed("[0-9]");
          }
        }
        while (result7 !== null) {
          result3.push(result7);
          if (input.substr(pos).match(/^[0-9]/) !== null) {
            var result7 = input.charAt(pos);
            pos++;
          } else {
            var result7 = null;
            if (reportMatchFailures) {
              matchFailed("[0-9]");
            }
          }
        }
        if (result3 !== null) {
          if (input.substr(pos, 1) === ".") {
            var result4 = ".";
            pos += 1;
          } else {
            var result4 = null;
            if (reportMatchFailures) {
              matchFailed("\".\"");
            }
          }
          if (result4 !== null) {
            if (input.substr(pos).match(/^[0-9]/) !== null) {
              var result6 = input.charAt(pos);
              pos++;
            } else {
              var result6 = null;
              if (reportMatchFailures) {
                matchFailed("[0-9]");
              }
            }
            if (result6 !== null) {
              var result5 = [];
              while (result6 !== null) {
                result5.push(result6);
                if (input.substr(pos).match(/^[0-9]/) !== null) {
                  var result6 = input.charAt(pos);
                  pos++;
                } else {
                  var result6 = null;
                  if (reportMatchFailures) {
                    matchFailed("[0-9]");
                  }
                }
              }
            } else {
              var result5 = null;
            }
            if (result5 !== null) {
              var result1 = [result3, result4, result5];
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(before, after) {
                return parseFloat(before.join("") + "." + after.join(""));
              })(result1[0], result1[2])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_string1() {
        var cacheKey = 'string1@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "\"") {
          var result3 = "\"";
          pos += 1;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("\"\\\"\"");
          }
        }
        if (result3 !== null) {
          var result4 = [];
          if (input.substr(pos).match(/^[^\n\r\\"]/) !== null) {
            var result13 = input.charAt(pos);
            pos++;
          } else {
            var result13 = null;
            if (reportMatchFailures) {
              matchFailed("[^\\n\\r\\\\\"]");
            }
          }
          if (result13 !== null) {
            var result6 = result13;
          } else {
            var savedPos2 = pos;
            var savedPos3 = pos;
            if (input.substr(pos, 1) === "\\") {
              var result11 = "\\";
              pos += 1;
            } else {
              var result11 = null;
              if (reportMatchFailures) {
                matchFailed("\"\\\\\"");
              }
            }
            if (result11 !== null) {
              var result12 = parse_nl();
              if (result12 !== null) {
                var result9 = [result11, result12];
              } else {
                var result9 = null;
                pos = savedPos3;
              }
            } else {
              var result9 = null;
              pos = savedPos3;
            }
            var result10 = result9 !== null
              ? (function(nl) { return nl })(result9[1])
              : null;
            if (result10 !== null) {
              var result8 = result10;
            } else {
              var result8 = null;
              pos = savedPos2;
            }
            if (result8 !== null) {
              var result6 = result8;
            } else {
              var result7 = parse_escape();
              if (result7 !== null) {
                var result6 = result7;
              } else {
                var result6 = null;;
              };
            };
          }
          while (result6 !== null) {
            result4.push(result6);
            if (input.substr(pos).match(/^[^\n\r\\"]/) !== null) {
              var result13 = input.charAt(pos);
              pos++;
            } else {
              var result13 = null;
              if (reportMatchFailures) {
                matchFailed("[^\\n\\r\\\\\"]");
              }
            }
            if (result13 !== null) {
              var result6 = result13;
            } else {
              var savedPos2 = pos;
              var savedPos3 = pos;
              if (input.substr(pos, 1) === "\\") {
                var result11 = "\\";
                pos += 1;
              } else {
                var result11 = null;
                if (reportMatchFailures) {
                  matchFailed("\"\\\\\"");
                }
              }
              if (result11 !== null) {
                var result12 = parse_nl();
                if (result12 !== null) {
                  var result9 = [result11, result12];
                } else {
                  var result9 = null;
                  pos = savedPos3;
                }
              } else {
                var result9 = null;
                pos = savedPos3;
              }
              var result10 = result9 !== null
                ? (function(nl) { return nl })(result9[1])
                : null;
              if (result10 !== null) {
                var result8 = result10;
              } else {
                var result8 = null;
                pos = savedPos2;
              }
              if (result8 !== null) {
                var result6 = result8;
              } else {
                var result7 = parse_escape();
                if (result7 !== null) {
                  var result6 = result7;
                } else {
                  var result6 = null;;
                };
              };
            }
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === "\"") {
              var result5 = "\"";
              pos += 1;
            } else {
              var result5 = null;
              if (reportMatchFailures) {
                matchFailed("\"\\\"\"");
              }
            }
            if (result5 !== null) {
              var result1 = [result3, result4, result5];
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(chars) {
                return '"' + chars.join("") + '"';
              })(result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_string2() {
        var cacheKey = 'string2@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "'") {
          var result3 = "'";
          pos += 1;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("\"'\"");
          }
        }
        if (result3 !== null) {
          var result4 = [];
          if (input.substr(pos).match(/^[^\n\r\\']/) !== null) {
            var result13 = input.charAt(pos);
            pos++;
          } else {
            var result13 = null;
            if (reportMatchFailures) {
              matchFailed("[^\\n\\r\\\\']");
            }
          }
          if (result13 !== null) {
            var result6 = result13;
          } else {
            var savedPos2 = pos;
            var savedPos3 = pos;
            if (input.substr(pos, 1) === "\\") {
              var result11 = "\\";
              pos += 1;
            } else {
              var result11 = null;
              if (reportMatchFailures) {
                matchFailed("\"\\\\\"");
              }
            }
            if (result11 !== null) {
              var result12 = parse_nl();
              if (result12 !== null) {
                var result9 = [result11, result12];
              } else {
                var result9 = null;
                pos = savedPos3;
              }
            } else {
              var result9 = null;
              pos = savedPos3;
            }
            var result10 = result9 !== null
              ? (function(nl) { return nl })(result9[1])
              : null;
            if (result10 !== null) {
              var result8 = result10;
            } else {
              var result8 = null;
              pos = savedPos2;
            }
            if (result8 !== null) {
              var result6 = result8;
            } else {
              var result7 = parse_escape();
              if (result7 !== null) {
                var result6 = result7;
              } else {
                var result6 = null;;
              };
            };
          }
          while (result6 !== null) {
            result4.push(result6);
            if (input.substr(pos).match(/^[^\n\r\\']/) !== null) {
              var result13 = input.charAt(pos);
              pos++;
            } else {
              var result13 = null;
              if (reportMatchFailures) {
                matchFailed("[^\\n\\r\\\\']");
              }
            }
            if (result13 !== null) {
              var result6 = result13;
            } else {
              var savedPos2 = pos;
              var savedPos3 = pos;
              if (input.substr(pos, 1) === "\\") {
                var result11 = "\\";
                pos += 1;
              } else {
                var result11 = null;
                if (reportMatchFailures) {
                  matchFailed("\"\\\\\"");
                }
              }
              if (result11 !== null) {
                var result12 = parse_nl();
                if (result12 !== null) {
                  var result9 = [result11, result12];
                } else {
                  var result9 = null;
                  pos = savedPos3;
                }
              } else {
                var result9 = null;
                pos = savedPos3;
              }
              var result10 = result9 !== null
                ? (function(nl) { return nl })(result9[1])
                : null;
              if (result10 !== null) {
                var result8 = result10;
              } else {
                var result8 = null;
                pos = savedPos2;
              }
              if (result8 !== null) {
                var result6 = result8;
              } else {
                var result7 = parse_escape();
                if (result7 !== null) {
                  var result6 = result7;
                } else {
                  var result6 = null;;
                };
              };
            }
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === "'") {
              var result5 = "'";
              pos += 1;
            } else {
              var result5 = null;
              if (reportMatchFailures) {
                matchFailed("\"'\"");
              }
            }
            if (result5 !== null) {
              var result1 = [result3, result4, result5];
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(chars) {
                return "'" + chars.join("") + "'";
              })(result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_comment() {
        var cacheKey = 'comment@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 2) === "/*") {
          var result3 = "/*";
          pos += 2;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("\"/*\"");
          }
        }
        if (result3 !== null) {
          var result4 = [];
          if (input.substr(pos).match(/^[^*]/) !== null) {
            var result15 = input.charAt(pos);
            pos++;
          } else {
            var result15 = null;
            if (reportMatchFailures) {
              matchFailed("[^*]");
            }
          }
          while (result15 !== null) {
            result4.push(result15);
            if (input.substr(pos).match(/^[^*]/) !== null) {
              var result15 = input.charAt(pos);
              pos++;
            } else {
              var result15 = null;
              if (reportMatchFailures) {
                matchFailed("[^*]");
              }
            }
          }
          if (result4 !== null) {
            if (input.substr(pos, 1) === "*") {
              var result14 = "*";
              pos += 1;
            } else {
              var result14 = null;
              if (reportMatchFailures) {
                matchFailed("\"*\"");
              }
            }
            if (result14 !== null) {
              var result5 = [];
              while (result14 !== null) {
                result5.push(result14);
                if (input.substr(pos, 1) === "*") {
                  var result14 = "*";
                  pos += 1;
                } else {
                  var result14 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"*\"");
                  }
                }
              }
            } else {
              var result5 = null;
            }
            if (result5 !== null) {
              var result6 = [];
              var savedPos2 = pos;
              if (input.substr(pos).match(/^[^\/*]/) !== null) {
                var result9 = input.charAt(pos);
                pos++;
              } else {
                var result9 = null;
                if (reportMatchFailures) {
                  matchFailed("[^\\/*]");
                }
              }
              if (result9 !== null) {
                var result10 = [];
                if (input.substr(pos).match(/^[^*]/) !== null) {
                  var result13 = input.charAt(pos);
                  pos++;
                } else {
                  var result13 = null;
                  if (reportMatchFailures) {
                    matchFailed("[^*]");
                  }
                }
                while (result13 !== null) {
                  result10.push(result13);
                  if (input.substr(pos).match(/^[^*]/) !== null) {
                    var result13 = input.charAt(pos);
                    pos++;
                  } else {
                    var result13 = null;
                    if (reportMatchFailures) {
                      matchFailed("[^*]");
                    }
                  }
                }
                if (result10 !== null) {
                  if (input.substr(pos, 1) === "*") {
                    var result12 = "*";
                    pos += 1;
                  } else {
                    var result12 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"*\"");
                    }
                  }
                  if (result12 !== null) {
                    var result11 = [];
                    while (result12 !== null) {
                      result11.push(result12);
                      if (input.substr(pos, 1) === "*") {
                        var result12 = "*";
                        pos += 1;
                      } else {
                        var result12 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"*\"");
                        }
                      }
                    }
                  } else {
                    var result11 = null;
                  }
                  if (result11 !== null) {
                    var result8 = [result9, result10, result11];
                  } else {
                    var result8 = null;
                    pos = savedPos2;
                  }
                } else {
                  var result8 = null;
                  pos = savedPos2;
                }
              } else {
                var result8 = null;
                pos = savedPos2;
              }
              while (result8 !== null) {
                result6.push(result8);
                var savedPos2 = pos;
                if (input.substr(pos).match(/^[^\/*]/) !== null) {
                  var result9 = input.charAt(pos);
                  pos++;
                } else {
                  var result9 = null;
                  if (reportMatchFailures) {
                    matchFailed("[^\\/*]");
                  }
                }
                if (result9 !== null) {
                  var result10 = [];
                  if (input.substr(pos).match(/^[^*]/) !== null) {
                    var result13 = input.charAt(pos);
                    pos++;
                  } else {
                    var result13 = null;
                    if (reportMatchFailures) {
                      matchFailed("[^*]");
                    }
                  }
                  while (result13 !== null) {
                    result10.push(result13);
                    if (input.substr(pos).match(/^[^*]/) !== null) {
                      var result13 = input.charAt(pos);
                      pos++;
                    } else {
                      var result13 = null;
                      if (reportMatchFailures) {
                        matchFailed("[^*]");
                      }
                    }
                  }
                  if (result10 !== null) {
                    if (input.substr(pos, 1) === "*") {
                      var result12 = "*";
                      pos += 1;
                    } else {
                      var result12 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"*\"");
                      }
                    }
                    if (result12 !== null) {
                      var result11 = [];
                      while (result12 !== null) {
                        result11.push(result12);
                        if (input.substr(pos, 1) === "*") {
                          var result12 = "*";
                          pos += 1;
                        } else {
                          var result12 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"*\"");
                          }
                        }
                      }
                    } else {
                      var result11 = null;
                    }
                    if (result11 !== null) {
                      var result8 = [result9, result10, result11];
                    } else {
                      var result8 = null;
                      pos = savedPos2;
                    }
                  } else {
                    var result8 = null;
                    pos = savedPos2;
                  }
                } else {
                  var result8 = null;
                  pos = savedPos2;
                }
              }
              if (result6 !== null) {
                if (input.substr(pos, 1) === "/") {
                  var result7 = "/";
                  pos += 1;
                } else {
                  var result7 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"/\"");
                  }
                }
                if (result7 !== null) {
                  var result1 = [result3, result4, result5, result6, result7];
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(head, middle, tail) {
                  var str = head.concat(middle).join("");
                  tail.forEach(function (e) {
                      str += e[0] + e[1].join("") + e[2].join("");
                  });
                  str = str.slice(0, str.length - 1);
                  
                  if ((str[0] === '{') && (str[str.length-1] === '}')) {
                      str = str.slice(1, str.length - 1);
                      return {
                          type: "comment", elements: ['/*{', {
                              type: "commentTag",
                              elements: str
                          }, '}*/']
                      };
                  }
                  else
                  {
                      return {
                          type: "comment", elements: '/*' + str + '*/'
                      };
                  }
              })(result1[1], result1[2], result1[3])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_ident() {
        var cacheKey = 'ident@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "-") {
          var result7 = "-";
          pos += 1;
        } else {
          var result7 = null;
          if (reportMatchFailures) {
            matchFailed("\"-\"");
          }
        }
        var result3 = result7 !== null ? result7 : '';
        if (result3 !== null) {
          var result4 = parse_nmstart();
          if (result4 !== null) {
            var result5 = [];
            var result6 = parse_nmchar();
            while (result6 !== null) {
              result5.push(result6);
              var result6 = parse_nmchar();
            }
            if (result5 !== null) {
              var result1 = [result3, result4, result5];
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(dash, nmstart, nmchars) {
                return dash + nmstart + nmchars.join("");
              })(result1[0], result1[1], result1[2])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_name() {
        var cacheKey = 'name@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var result3 = parse_nmchar();
        if (result3 !== null) {
          var result1 = [];
          while (result3 !== null) {
            result1.push(result3);
            var result3 = parse_nmchar();
          }
        } else {
          var result1 = null;
        }
        var result2 = result1 !== null
          ? (function(nmchars) { return nmchars.join(""); })(result1)
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_num() {
        var cacheKey = 'num@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var result2 = parse_float();
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result1 = parse_integer();
          if (result1 !== null) {
            var result0 = result1;
          } else {
            var result0 = null;;
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_string() {
        var cacheKey = 'string@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var result2 = parse_string1();
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result1 = parse_string2();
          if (result1 !== null) {
            var result0 = result1;
          } else {
            var result0 = null;;
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_url() {
        var cacheKey = 'url@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var result1 = [];
        if (input.substr(pos).match(/^[!#$%&*-~]/) !== null) {
          var result6 = input.charAt(pos);
          pos++;
        } else {
          var result6 = null;
          if (reportMatchFailures) {
            matchFailed("[!#$%&*-~]");
          }
        }
        if (result6 !== null) {
          var result3 = result6;
        } else {
          var result5 = parse_nonascii();
          if (result5 !== null) {
            var result3 = result5;
          } else {
            var result4 = parse_escape();
            if (result4 !== null) {
              var result3 = result4;
            } else {
              var result3 = null;;
            };
          };
        }
        while (result3 !== null) {
          result1.push(result3);
          if (input.substr(pos).match(/^[!#$%&*-~]/) !== null) {
            var result6 = input.charAt(pos);
            pos++;
          } else {
            var result6 = null;
            if (reportMatchFailures) {
              matchFailed("[!#$%&*-~]");
            }
          }
          if (result6 !== null) {
            var result3 = result6;
          } else {
            var result5 = parse_nonascii();
            if (result5 !== null) {
              var result3 = result5;
            } else {
              var result4 = parse_escape();
              if (result4 !== null) {
                var result3 = result4;
              } else {
                var result3 = null;;
              };
            };
          }
        }
        var result2 = result1 !== null
          ? (function(chars) { return chars.join(""); })(result1)
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_s() {
        var cacheKey = 's@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
          var result1 = input.charAt(pos);
          pos++;
        } else {
          var result1 = null;
          if (reportMatchFailures) {
            matchFailed("[ 	\\r\\n]");
          }
        }
        if (result1 !== null) {
          var result0 = [];
          while (result1 !== null) {
            result0.push(result1);
            if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
              var result1 = input.charAt(pos);
              pos++;
            } else {
              var result1 = null;
              if (reportMatchFailures) {
                matchFailed("[ 	\\r\\n]");
              }
            }
          }
        } else {
          var result0 = null;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_w() {
        var cacheKey = 'w@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var result1 = parse_s();
        var result0 = result1 !== null ? result1 : '';
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_nl() {
        var cacheKey = 'nl@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        if (input.substr(pos, 1) === "\n") {
          var result4 = "\n";
          pos += 1;
        } else {
          var result4 = null;
          if (reportMatchFailures) {
            matchFailed("\"\\n\"");
          }
        }
        if (result4 !== null) {
          var result0 = result4;
        } else {
          if (input.substr(pos, 2) === "\r\n") {
            var result3 = "\r\n";
            pos += 2;
          } else {
            var result3 = null;
            if (reportMatchFailures) {
              matchFailed("\"\\r\\n\"");
            }
          }
          if (result3 !== null) {
            var result0 = result3;
          } else {
            if (input.substr(pos, 1) === "\r") {
              var result2 = "\r";
              pos += 1;
            } else {
              var result2 = null;
              if (reportMatchFailures) {
                matchFailed("\"\\r\"");
              }
            }
            if (result2 !== null) {
              var result0 = result2;
            } else {
              if (input.substr(pos, 1) === "") {
                var result1 = "";
                pos += 1;
              } else {
                var result1 = null;
                if (reportMatchFailures) {
                  matchFailed("\"\"");
                }
              }
              if (result1 !== null) {
                var result0 = result1;
              } else {
                var result0 = null;;
              };
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_A() {
        var cacheKey = 'A@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        if (input.substr(pos).match(/^[aA]/) !== null) {
          var result35 = input.charAt(pos);
          pos++;
        } else {
          var result35 = null;
          if (reportMatchFailures) {
            matchFailed("[aA]");
          }
        }
        if (result35 !== null) {
          var result0 = result35;
        } else {
          var savedPos2 = pos;
          var savedPos3 = pos;
          if (input.substr(pos, 1) === "\\") {
            var result21 = "\\";
            pos += 1;
          } else {
            var result21 = null;
            if (reportMatchFailures) {
              matchFailed("\"\\\\\"");
            }
          }
          if (result21 !== null) {
            if (input.substr(pos, 1) === "0") {
              var result34 = "0";
              pos += 1;
            } else {
              var result34 = null;
              if (reportMatchFailures) {
                matchFailed("\"0\"");
              }
            }
            var result22 = result34 !== null ? result34 : '';
            if (result22 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result33 = "0";
                pos += 1;
              } else {
                var result33 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result23 = result33 !== null ? result33 : '';
              if (result23 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result32 = "0";
                  pos += 1;
                } else {
                  var result32 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result24 = result32 !== null ? result32 : '';
                if (result24 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result31 = "0";
                    pos += 1;
                  } else {
                    var result31 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result25 = result31 !== null ? result31 : '';
                  if (result25 !== null) {
                    if (input.substr(pos, 2) === "41") {
                      var result26 = "41";
                      pos += 2;
                    } else {
                      var result26 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"41\"");
                      }
                    }
                    if (result26 !== null) {
                      if (input.substr(pos, 2) === "\r\n") {
                        var result30 = "\r\n";
                        pos += 2;
                      } else {
                        var result30 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"\\r\\n\"");
                        }
                      }
                      if (result30 !== null) {
                        var result28 = result30;
                      } else {
                        if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                          var result29 = input.charAt(pos);
                          pos++;
                        } else {
                          var result29 = null;
                          if (reportMatchFailures) {
                            matchFailed("[ 	\\r\\n]");
                          }
                        }
                        if (result29 !== null) {
                          var result28 = result29;
                        } else {
                          var result28 = null;;
                        };
                      }
                      var result27 = result28 !== null ? result28 : '';
                      if (result27 !== null) {
                        var result19 = [result21, result22, result23, result24, result25, result26, result27];
                      } else {
                        var result19 = null;
                        pos = savedPos3;
                      }
                    } else {
                      var result19 = null;
                      pos = savedPos3;
                    }
                  } else {
                    var result19 = null;
                    pos = savedPos3;
                  }
                } else {
                  var result19 = null;
                  pos = savedPos3;
                }
              } else {
                var result19 = null;
                pos = savedPos3;
              }
            } else {
              var result19 = null;
              pos = savedPos3;
            }
          } else {
            var result19 = null;
            pos = savedPos3;
          }
          var result20 = result19 !== null
            ? (function() { return "A"; })()
            : null;
          if (result20 !== null) {
            var result18 = result20;
          } else {
            var result18 = null;
            pos = savedPos2;
          }
          if (result18 !== null) {
            var result0 = result18;
          } else {
            var savedPos0 = pos;
            var savedPos1 = pos;
            if (input.substr(pos, 1) === "\\") {
              var result4 = "\\";
              pos += 1;
            } else {
              var result4 = null;
              if (reportMatchFailures) {
                matchFailed("\"\\\\\"");
              }
            }
            if (result4 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result17 = "0";
                pos += 1;
              } else {
                var result17 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result5 = result17 !== null ? result17 : '';
              if (result5 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result16 = "0";
                  pos += 1;
                } else {
                  var result16 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result6 = result16 !== null ? result16 : '';
                if (result6 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result15 = "0";
                    pos += 1;
                  } else {
                    var result15 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result7 = result15 !== null ? result15 : '';
                  if (result7 !== null) {
                    if (input.substr(pos, 1) === "0") {
                      var result14 = "0";
                      pos += 1;
                    } else {
                      var result14 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"0\"");
                      }
                    }
                    var result8 = result14 !== null ? result14 : '';
                    if (result8 !== null) {
                      if (input.substr(pos, 2) === "61") {
                        var result9 = "61";
                        pos += 2;
                      } else {
                        var result9 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"61\"");
                        }
                      }
                      if (result9 !== null) {
                        if (input.substr(pos, 2) === "\r\n") {
                          var result13 = "\r\n";
                          pos += 2;
                        } else {
                          var result13 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"\\r\\n\"");
                          }
                        }
                        if (result13 !== null) {
                          var result11 = result13;
                        } else {
                          if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                            var result12 = input.charAt(pos);
                            pos++;
                          } else {
                            var result12 = null;
                            if (reportMatchFailures) {
                              matchFailed("[ 	\\r\\n]");
                            }
                          }
                          if (result12 !== null) {
                            var result11 = result12;
                          } else {
                            var result11 = null;;
                          };
                        }
                        var result10 = result11 !== null ? result11 : '';
                        if (result10 !== null) {
                          var result2 = [result4, result5, result6, result7, result8, result9, result10];
                        } else {
                          var result2 = null;
                          pos = savedPos1;
                        }
                      } else {
                        var result2 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result2 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result2 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result2 = null;
                  pos = savedPos1;
                }
              } else {
                var result2 = null;
                pos = savedPos1;
              }
            } else {
              var result2 = null;
              pos = savedPos1;
            }
            var result3 = result2 !== null
              ? (function() { return "a"; })()
              : null;
            if (result3 !== null) {
              var result1 = result3;
            } else {
              var result1 = null;
              pos = savedPos0;
            }
            if (result1 !== null) {
              var result0 = result1;
            } else {
              var result0 = null;;
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_C() {
        var cacheKey = 'C@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        if (input.substr(pos).match(/^[cC]/) !== null) {
          var result35 = input.charAt(pos);
          pos++;
        } else {
          var result35 = null;
          if (reportMatchFailures) {
            matchFailed("[cC]");
          }
        }
        if (result35 !== null) {
          var result0 = result35;
        } else {
          var savedPos2 = pos;
          var savedPos3 = pos;
          if (input.substr(pos, 1) === "\\") {
            var result21 = "\\";
            pos += 1;
          } else {
            var result21 = null;
            if (reportMatchFailures) {
              matchFailed("\"\\\\\"");
            }
          }
          if (result21 !== null) {
            if (input.substr(pos, 1) === "0") {
              var result34 = "0";
              pos += 1;
            } else {
              var result34 = null;
              if (reportMatchFailures) {
                matchFailed("\"0\"");
              }
            }
            var result22 = result34 !== null ? result34 : '';
            if (result22 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result33 = "0";
                pos += 1;
              } else {
                var result33 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result23 = result33 !== null ? result33 : '';
              if (result23 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result32 = "0";
                  pos += 1;
                } else {
                  var result32 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result24 = result32 !== null ? result32 : '';
                if (result24 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result31 = "0";
                    pos += 1;
                  } else {
                    var result31 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result25 = result31 !== null ? result31 : '';
                  if (result25 !== null) {
                    if (input.substr(pos, 2) === "43") {
                      var result26 = "43";
                      pos += 2;
                    } else {
                      var result26 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"43\"");
                      }
                    }
                    if (result26 !== null) {
                      if (input.substr(pos, 2) === "\r\n") {
                        var result30 = "\r\n";
                        pos += 2;
                      } else {
                        var result30 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"\\r\\n\"");
                        }
                      }
                      if (result30 !== null) {
                        var result28 = result30;
                      } else {
                        if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                          var result29 = input.charAt(pos);
                          pos++;
                        } else {
                          var result29 = null;
                          if (reportMatchFailures) {
                            matchFailed("[ 	\\r\\n]");
                          }
                        }
                        if (result29 !== null) {
                          var result28 = result29;
                        } else {
                          var result28 = null;;
                        };
                      }
                      var result27 = result28 !== null ? result28 : '';
                      if (result27 !== null) {
                        var result19 = [result21, result22, result23, result24, result25, result26, result27];
                      } else {
                        var result19 = null;
                        pos = savedPos3;
                      }
                    } else {
                      var result19 = null;
                      pos = savedPos3;
                    }
                  } else {
                    var result19 = null;
                    pos = savedPos3;
                  }
                } else {
                  var result19 = null;
                  pos = savedPos3;
                }
              } else {
                var result19 = null;
                pos = savedPos3;
              }
            } else {
              var result19 = null;
              pos = savedPos3;
            }
          } else {
            var result19 = null;
            pos = savedPos3;
          }
          var result20 = result19 !== null
            ? (function() { return "C"; })()
            : null;
          if (result20 !== null) {
            var result18 = result20;
          } else {
            var result18 = null;
            pos = savedPos2;
          }
          if (result18 !== null) {
            var result0 = result18;
          } else {
            var savedPos0 = pos;
            var savedPos1 = pos;
            if (input.substr(pos, 1) === "\\") {
              var result4 = "\\";
              pos += 1;
            } else {
              var result4 = null;
              if (reportMatchFailures) {
                matchFailed("\"\\\\\"");
              }
            }
            if (result4 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result17 = "0";
                pos += 1;
              } else {
                var result17 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result5 = result17 !== null ? result17 : '';
              if (result5 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result16 = "0";
                  pos += 1;
                } else {
                  var result16 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result6 = result16 !== null ? result16 : '';
                if (result6 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result15 = "0";
                    pos += 1;
                  } else {
                    var result15 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result7 = result15 !== null ? result15 : '';
                  if (result7 !== null) {
                    if (input.substr(pos, 1) === "0") {
                      var result14 = "0";
                      pos += 1;
                    } else {
                      var result14 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"0\"");
                      }
                    }
                    var result8 = result14 !== null ? result14 : '';
                    if (result8 !== null) {
                      if (input.substr(pos, 2) === "63") {
                        var result9 = "63";
                        pos += 2;
                      } else {
                        var result9 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"63\"");
                        }
                      }
                      if (result9 !== null) {
                        if (input.substr(pos, 2) === "\r\n") {
                          var result13 = "\r\n";
                          pos += 2;
                        } else {
                          var result13 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"\\r\\n\"");
                          }
                        }
                        if (result13 !== null) {
                          var result11 = result13;
                        } else {
                          if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                            var result12 = input.charAt(pos);
                            pos++;
                          } else {
                            var result12 = null;
                            if (reportMatchFailures) {
                              matchFailed("[ 	\\r\\n]");
                            }
                          }
                          if (result12 !== null) {
                            var result11 = result12;
                          } else {
                            var result11 = null;;
                          };
                        }
                        var result10 = result11 !== null ? result11 : '';
                        if (result10 !== null) {
                          var result2 = [result4, result5, result6, result7, result8, result9, result10];
                        } else {
                          var result2 = null;
                          pos = savedPos1;
                        }
                      } else {
                        var result2 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result2 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result2 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result2 = null;
                  pos = savedPos1;
                }
              } else {
                var result2 = null;
                pos = savedPos1;
              }
            } else {
              var result2 = null;
              pos = savedPos1;
            }
            var result3 = result2 !== null
              ? (function() { return "c"; })()
              : null;
            if (result3 !== null) {
              var result1 = result3;
            } else {
              var result1 = null;
              pos = savedPos0;
            }
            if (result1 !== null) {
              var result0 = result1;
            } else {
              var result0 = null;;
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_D() {
        var cacheKey = 'D@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        if (input.substr(pos).match(/^[dD]/) !== null) {
          var result35 = input.charAt(pos);
          pos++;
        } else {
          var result35 = null;
          if (reportMatchFailures) {
            matchFailed("[dD]");
          }
        }
        if (result35 !== null) {
          var result0 = result35;
        } else {
          var savedPos2 = pos;
          var savedPos3 = pos;
          if (input.substr(pos, 1) === "\\") {
            var result21 = "\\";
            pos += 1;
          } else {
            var result21 = null;
            if (reportMatchFailures) {
              matchFailed("\"\\\\\"");
            }
          }
          if (result21 !== null) {
            if (input.substr(pos, 1) === "0") {
              var result34 = "0";
              pos += 1;
            } else {
              var result34 = null;
              if (reportMatchFailures) {
                matchFailed("\"0\"");
              }
            }
            var result22 = result34 !== null ? result34 : '';
            if (result22 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result33 = "0";
                pos += 1;
              } else {
                var result33 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result23 = result33 !== null ? result33 : '';
              if (result23 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result32 = "0";
                  pos += 1;
                } else {
                  var result32 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result24 = result32 !== null ? result32 : '';
                if (result24 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result31 = "0";
                    pos += 1;
                  } else {
                    var result31 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result25 = result31 !== null ? result31 : '';
                  if (result25 !== null) {
                    if (input.substr(pos, 2) === "44") {
                      var result26 = "44";
                      pos += 2;
                    } else {
                      var result26 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"44\"");
                      }
                    }
                    if (result26 !== null) {
                      if (input.substr(pos, 2) === "\r\n") {
                        var result30 = "\r\n";
                        pos += 2;
                      } else {
                        var result30 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"\\r\\n\"");
                        }
                      }
                      if (result30 !== null) {
                        var result28 = result30;
                      } else {
                        if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                          var result29 = input.charAt(pos);
                          pos++;
                        } else {
                          var result29 = null;
                          if (reportMatchFailures) {
                            matchFailed("[ 	\\r\\n]");
                          }
                        }
                        if (result29 !== null) {
                          var result28 = result29;
                        } else {
                          var result28 = null;;
                        };
                      }
                      var result27 = result28 !== null ? result28 : '';
                      if (result27 !== null) {
                        var result19 = [result21, result22, result23, result24, result25, result26, result27];
                      } else {
                        var result19 = null;
                        pos = savedPos3;
                      }
                    } else {
                      var result19 = null;
                      pos = savedPos3;
                    }
                  } else {
                    var result19 = null;
                    pos = savedPos3;
                  }
                } else {
                  var result19 = null;
                  pos = savedPos3;
                }
              } else {
                var result19 = null;
                pos = savedPos3;
              }
            } else {
              var result19 = null;
              pos = savedPos3;
            }
          } else {
            var result19 = null;
            pos = savedPos3;
          }
          var result20 = result19 !== null
            ? (function() { return "D"; })()
            : null;
          if (result20 !== null) {
            var result18 = result20;
          } else {
            var result18 = null;
            pos = savedPos2;
          }
          if (result18 !== null) {
            var result0 = result18;
          } else {
            var savedPos0 = pos;
            var savedPos1 = pos;
            if (input.substr(pos, 1) === "\\") {
              var result4 = "\\";
              pos += 1;
            } else {
              var result4 = null;
              if (reportMatchFailures) {
                matchFailed("\"\\\\\"");
              }
            }
            if (result4 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result17 = "0";
                pos += 1;
              } else {
                var result17 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result5 = result17 !== null ? result17 : '';
              if (result5 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result16 = "0";
                  pos += 1;
                } else {
                  var result16 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result6 = result16 !== null ? result16 : '';
                if (result6 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result15 = "0";
                    pos += 1;
                  } else {
                    var result15 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result7 = result15 !== null ? result15 : '';
                  if (result7 !== null) {
                    if (input.substr(pos, 1) === "0") {
                      var result14 = "0";
                      pos += 1;
                    } else {
                      var result14 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"0\"");
                      }
                    }
                    var result8 = result14 !== null ? result14 : '';
                    if (result8 !== null) {
                      if (input.substr(pos, 2) === "64") {
                        var result9 = "64";
                        pos += 2;
                      } else {
                        var result9 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"64\"");
                        }
                      }
                      if (result9 !== null) {
                        if (input.substr(pos, 2) === "\r\n") {
                          var result13 = "\r\n";
                          pos += 2;
                        } else {
                          var result13 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"\\r\\n\"");
                          }
                        }
                        if (result13 !== null) {
                          var result11 = result13;
                        } else {
                          if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                            var result12 = input.charAt(pos);
                            pos++;
                          } else {
                            var result12 = null;
                            if (reportMatchFailures) {
                              matchFailed("[ 	\\r\\n]");
                            }
                          }
                          if (result12 !== null) {
                            var result11 = result12;
                          } else {
                            var result11 = null;;
                          };
                        }
                        var result10 = result11 !== null ? result11 : '';
                        if (result10 !== null) {
                          var result2 = [result4, result5, result6, result7, result8, result9, result10];
                        } else {
                          var result2 = null;
                          pos = savedPos1;
                        }
                      } else {
                        var result2 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result2 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result2 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result2 = null;
                  pos = savedPos1;
                }
              } else {
                var result2 = null;
                pos = savedPos1;
              }
            } else {
              var result2 = null;
              pos = savedPos1;
            }
            var result3 = result2 !== null
              ? (function() { return "d"; })()
              : null;
            if (result3 !== null) {
              var result1 = result3;
            } else {
              var result1 = null;
              pos = savedPos0;
            }
            if (result1 !== null) {
              var result0 = result1;
            } else {
              var result0 = null;;
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_E() {
        var cacheKey = 'E@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        if (input.substr(pos).match(/^[eE]/) !== null) {
          var result35 = input.charAt(pos);
          pos++;
        } else {
          var result35 = null;
          if (reportMatchFailures) {
            matchFailed("[eE]");
          }
        }
        if (result35 !== null) {
          var result0 = result35;
        } else {
          var savedPos2 = pos;
          var savedPos3 = pos;
          if (input.substr(pos, 1) === "\\") {
            var result21 = "\\";
            pos += 1;
          } else {
            var result21 = null;
            if (reportMatchFailures) {
              matchFailed("\"\\\\\"");
            }
          }
          if (result21 !== null) {
            if (input.substr(pos, 1) === "0") {
              var result34 = "0";
              pos += 1;
            } else {
              var result34 = null;
              if (reportMatchFailures) {
                matchFailed("\"0\"");
              }
            }
            var result22 = result34 !== null ? result34 : '';
            if (result22 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result33 = "0";
                pos += 1;
              } else {
                var result33 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result23 = result33 !== null ? result33 : '';
              if (result23 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result32 = "0";
                  pos += 1;
                } else {
                  var result32 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result24 = result32 !== null ? result32 : '';
                if (result24 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result31 = "0";
                    pos += 1;
                  } else {
                    var result31 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result25 = result31 !== null ? result31 : '';
                  if (result25 !== null) {
                    if (input.substr(pos, 2) === "45") {
                      var result26 = "45";
                      pos += 2;
                    } else {
                      var result26 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"45\"");
                      }
                    }
                    if (result26 !== null) {
                      if (input.substr(pos, 2) === "\r\n") {
                        var result30 = "\r\n";
                        pos += 2;
                      } else {
                        var result30 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"\\r\\n\"");
                        }
                      }
                      if (result30 !== null) {
                        var result28 = result30;
                      } else {
                        if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                          var result29 = input.charAt(pos);
                          pos++;
                        } else {
                          var result29 = null;
                          if (reportMatchFailures) {
                            matchFailed("[ 	\\r\\n]");
                          }
                        }
                        if (result29 !== null) {
                          var result28 = result29;
                        } else {
                          var result28 = null;;
                        };
                      }
                      var result27 = result28 !== null ? result28 : '';
                      if (result27 !== null) {
                        var result19 = [result21, result22, result23, result24, result25, result26, result27];
                      } else {
                        var result19 = null;
                        pos = savedPos3;
                      }
                    } else {
                      var result19 = null;
                      pos = savedPos3;
                    }
                  } else {
                    var result19 = null;
                    pos = savedPos3;
                  }
                } else {
                  var result19 = null;
                  pos = savedPos3;
                }
              } else {
                var result19 = null;
                pos = savedPos3;
              }
            } else {
              var result19 = null;
              pos = savedPos3;
            }
          } else {
            var result19 = null;
            pos = savedPos3;
          }
          var result20 = result19 !== null
            ? (function() { return "E"; })()
            : null;
          if (result20 !== null) {
            var result18 = result20;
          } else {
            var result18 = null;
            pos = savedPos2;
          }
          if (result18 !== null) {
            var result0 = result18;
          } else {
            var savedPos0 = pos;
            var savedPos1 = pos;
            if (input.substr(pos, 1) === "\\") {
              var result4 = "\\";
              pos += 1;
            } else {
              var result4 = null;
              if (reportMatchFailures) {
                matchFailed("\"\\\\\"");
              }
            }
            if (result4 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result17 = "0";
                pos += 1;
              } else {
                var result17 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result5 = result17 !== null ? result17 : '';
              if (result5 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result16 = "0";
                  pos += 1;
                } else {
                  var result16 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result6 = result16 !== null ? result16 : '';
                if (result6 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result15 = "0";
                    pos += 1;
                  } else {
                    var result15 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result7 = result15 !== null ? result15 : '';
                  if (result7 !== null) {
                    if (input.substr(pos, 1) === "0") {
                      var result14 = "0";
                      pos += 1;
                    } else {
                      var result14 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"0\"");
                      }
                    }
                    var result8 = result14 !== null ? result14 : '';
                    if (result8 !== null) {
                      if (input.substr(pos, 2) === "65") {
                        var result9 = "65";
                        pos += 2;
                      } else {
                        var result9 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"65\"");
                        }
                      }
                      if (result9 !== null) {
                        if (input.substr(pos, 2) === "\r\n") {
                          var result13 = "\r\n";
                          pos += 2;
                        } else {
                          var result13 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"\\r\\n\"");
                          }
                        }
                        if (result13 !== null) {
                          var result11 = result13;
                        } else {
                          if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                            var result12 = input.charAt(pos);
                            pos++;
                          } else {
                            var result12 = null;
                            if (reportMatchFailures) {
                              matchFailed("[ 	\\r\\n]");
                            }
                          }
                          if (result12 !== null) {
                            var result11 = result12;
                          } else {
                            var result11 = null;;
                          };
                        }
                        var result10 = result11 !== null ? result11 : '';
                        if (result10 !== null) {
                          var result2 = [result4, result5, result6, result7, result8, result9, result10];
                        } else {
                          var result2 = null;
                          pos = savedPos1;
                        }
                      } else {
                        var result2 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result2 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result2 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result2 = null;
                  pos = savedPos1;
                }
              } else {
                var result2 = null;
                pos = savedPos1;
              }
            } else {
              var result2 = null;
              pos = savedPos1;
            }
            var result3 = result2 !== null
              ? (function() { return "e"; })()
              : null;
            if (result3 !== null) {
              var result1 = result3;
            } else {
              var result1 = null;
              pos = savedPos0;
            }
            if (result1 !== null) {
              var result0 = result1;
            } else {
              var result0 = null;;
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_G() {
        var cacheKey = 'G@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        if (input.substr(pos).match(/^[gG]/) !== null) {
          var result40 = input.charAt(pos);
          pos++;
        } else {
          var result40 = null;
          if (reportMatchFailures) {
            matchFailed("[gG]");
          }
        }
        if (result40 !== null) {
          var result0 = result40;
        } else {
          var savedPos4 = pos;
          var savedPos5 = pos;
          if (input.substr(pos, 1) === "\\") {
            var result26 = "\\";
            pos += 1;
          } else {
            var result26 = null;
            if (reportMatchFailures) {
              matchFailed("\"\\\\\"");
            }
          }
          if (result26 !== null) {
            if (input.substr(pos, 1) === "0") {
              var result39 = "0";
              pos += 1;
            } else {
              var result39 = null;
              if (reportMatchFailures) {
                matchFailed("\"0\"");
              }
            }
            var result27 = result39 !== null ? result39 : '';
            if (result27 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result38 = "0";
                pos += 1;
              } else {
                var result38 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result28 = result38 !== null ? result38 : '';
              if (result28 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result37 = "0";
                  pos += 1;
                } else {
                  var result37 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result29 = result37 !== null ? result37 : '';
                if (result29 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result36 = "0";
                    pos += 1;
                  } else {
                    var result36 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result30 = result36 !== null ? result36 : '';
                  if (result30 !== null) {
                    if (input.substr(pos, 2) === "47") {
                      var result31 = "47";
                      pos += 2;
                    } else {
                      var result31 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"47\"");
                      }
                    }
                    if (result31 !== null) {
                      if (input.substr(pos, 2) === "\r\n") {
                        var result35 = "\r\n";
                        pos += 2;
                      } else {
                        var result35 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"\\r\\n\"");
                        }
                      }
                      if (result35 !== null) {
                        var result33 = result35;
                      } else {
                        if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                          var result34 = input.charAt(pos);
                          pos++;
                        } else {
                          var result34 = null;
                          if (reportMatchFailures) {
                            matchFailed("[ 	\\r\\n]");
                          }
                        }
                        if (result34 !== null) {
                          var result33 = result34;
                        } else {
                          var result33 = null;;
                        };
                      }
                      var result32 = result33 !== null ? result33 : '';
                      if (result32 !== null) {
                        var result24 = [result26, result27, result28, result29, result30, result31, result32];
                      } else {
                        var result24 = null;
                        pos = savedPos5;
                      }
                    } else {
                      var result24 = null;
                      pos = savedPos5;
                    }
                  } else {
                    var result24 = null;
                    pos = savedPos5;
                  }
                } else {
                  var result24 = null;
                  pos = savedPos5;
                }
              } else {
                var result24 = null;
                pos = savedPos5;
              }
            } else {
              var result24 = null;
              pos = savedPos5;
            }
          } else {
            var result24 = null;
            pos = savedPos5;
          }
          var result25 = result24 !== null
            ? (function() { return "G"; })()
            : null;
          if (result25 !== null) {
            var result23 = result25;
          } else {
            var result23 = null;
            pos = savedPos4;
          }
          if (result23 !== null) {
            var result0 = result23;
          } else {
            var savedPos2 = pos;
            var savedPos3 = pos;
            if (input.substr(pos, 1) === "\\") {
              var result9 = "\\";
              pos += 1;
            } else {
              var result9 = null;
              if (reportMatchFailures) {
                matchFailed("\"\\\\\"");
              }
            }
            if (result9 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result22 = "0";
                pos += 1;
              } else {
                var result22 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result10 = result22 !== null ? result22 : '';
              if (result10 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result21 = "0";
                  pos += 1;
                } else {
                  var result21 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result11 = result21 !== null ? result21 : '';
                if (result11 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result20 = "0";
                    pos += 1;
                  } else {
                    var result20 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result12 = result20 !== null ? result20 : '';
                  if (result12 !== null) {
                    if (input.substr(pos, 1) === "0") {
                      var result19 = "0";
                      pos += 1;
                    } else {
                      var result19 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"0\"");
                      }
                    }
                    var result13 = result19 !== null ? result19 : '';
                    if (result13 !== null) {
                      if (input.substr(pos, 2) === "67") {
                        var result14 = "67";
                        pos += 2;
                      } else {
                        var result14 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"67\"");
                        }
                      }
                      if (result14 !== null) {
                        if (input.substr(pos, 2) === "\r\n") {
                          var result18 = "\r\n";
                          pos += 2;
                        } else {
                          var result18 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"\\r\\n\"");
                          }
                        }
                        if (result18 !== null) {
                          var result16 = result18;
                        } else {
                          if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                            var result17 = input.charAt(pos);
                            pos++;
                          } else {
                            var result17 = null;
                            if (reportMatchFailures) {
                              matchFailed("[ 	\\r\\n]");
                            }
                          }
                          if (result17 !== null) {
                            var result16 = result17;
                          } else {
                            var result16 = null;;
                          };
                        }
                        var result15 = result16 !== null ? result16 : '';
                        if (result15 !== null) {
                          var result7 = [result9, result10, result11, result12, result13, result14, result15];
                        } else {
                          var result7 = null;
                          pos = savedPos3;
                        }
                      } else {
                        var result7 = null;
                        pos = savedPos3;
                      }
                    } else {
                      var result7 = null;
                      pos = savedPos3;
                    }
                  } else {
                    var result7 = null;
                    pos = savedPos3;
                  }
                } else {
                  var result7 = null;
                  pos = savedPos3;
                }
              } else {
                var result7 = null;
                pos = savedPos3;
              }
            } else {
              var result7 = null;
              pos = savedPos3;
            }
            var result8 = result7 !== null
              ? (function() { return "g"; })()
              : null;
            if (result8 !== null) {
              var result6 = result8;
            } else {
              var result6 = null;
              pos = savedPos2;
            }
            if (result6 !== null) {
              var result0 = result6;
            } else {
              var savedPos0 = pos;
              var savedPos1 = pos;
              if (input.substr(pos, 1) === "\\") {
                var result4 = "\\";
                pos += 1;
              } else {
                var result4 = null;
                if (reportMatchFailures) {
                  matchFailed("\"\\\\\"");
                }
              }
              if (result4 !== null) {
                if (input.substr(pos).match(/^[gG]/) !== null) {
                  var result5 = input.charAt(pos);
                  pos++;
                } else {
                  var result5 = null;
                  if (reportMatchFailures) {
                    matchFailed("[gG]");
                  }
                }
                if (result5 !== null) {
                  var result2 = [result4, result5];
                } else {
                  var result2 = null;
                  pos = savedPos1;
                }
              } else {
                var result2 = null;
                pos = savedPos1;
              }
              var result3 = result2 !== null
                ? (function(char_) { return char_; })(result2[1])
                : null;
              if (result3 !== null) {
                var result1 = result3;
              } else {
                var result1 = null;
                pos = savedPos0;
              }
              if (result1 !== null) {
                var result0 = result1;
              } else {
                var result0 = null;;
              };
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_H() {
        var cacheKey = 'H@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        if (input.substr(pos).match(/^[hH]/) !== null) {
          var result40 = input.charAt(pos);
          pos++;
        } else {
          var result40 = null;
          if (reportMatchFailures) {
            matchFailed("[hH]");
          }
        }
        if (result40 !== null) {
          var result0 = result40;
        } else {
          var savedPos4 = pos;
          var savedPos5 = pos;
          if (input.substr(pos, 1) === "\\") {
            var result26 = "\\";
            pos += 1;
          } else {
            var result26 = null;
            if (reportMatchFailures) {
              matchFailed("\"\\\\\"");
            }
          }
          if (result26 !== null) {
            if (input.substr(pos, 1) === "0") {
              var result39 = "0";
              pos += 1;
            } else {
              var result39 = null;
              if (reportMatchFailures) {
                matchFailed("\"0\"");
              }
            }
            var result27 = result39 !== null ? result39 : '';
            if (result27 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result38 = "0";
                pos += 1;
              } else {
                var result38 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result28 = result38 !== null ? result38 : '';
              if (result28 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result37 = "0";
                  pos += 1;
                } else {
                  var result37 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result29 = result37 !== null ? result37 : '';
                if (result29 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result36 = "0";
                    pos += 1;
                  } else {
                    var result36 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result30 = result36 !== null ? result36 : '';
                  if (result30 !== null) {
                    if (input.substr(pos, 2) === "48") {
                      var result31 = "48";
                      pos += 2;
                    } else {
                      var result31 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"48\"");
                      }
                    }
                    if (result31 !== null) {
                      if (input.substr(pos, 2) === "\r\n") {
                        var result35 = "\r\n";
                        pos += 2;
                      } else {
                        var result35 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"\\r\\n\"");
                        }
                      }
                      if (result35 !== null) {
                        var result33 = result35;
                      } else {
                        if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                          var result34 = input.charAt(pos);
                          pos++;
                        } else {
                          var result34 = null;
                          if (reportMatchFailures) {
                            matchFailed("[ 	\\r\\n]");
                          }
                        }
                        if (result34 !== null) {
                          var result33 = result34;
                        } else {
                          var result33 = null;;
                        };
                      }
                      var result32 = result33 !== null ? result33 : '';
                      if (result32 !== null) {
                        var result24 = [result26, result27, result28, result29, result30, result31, result32];
                      } else {
                        var result24 = null;
                        pos = savedPos5;
                      }
                    } else {
                      var result24 = null;
                      pos = savedPos5;
                    }
                  } else {
                    var result24 = null;
                    pos = savedPos5;
                  }
                } else {
                  var result24 = null;
                  pos = savedPos5;
                }
              } else {
                var result24 = null;
                pos = savedPos5;
              }
            } else {
              var result24 = null;
              pos = savedPos5;
            }
          } else {
            var result24 = null;
            pos = savedPos5;
          }
          var result25 = result24 !== null
            ? (function() { return "H"; })()
            : null;
          if (result25 !== null) {
            var result23 = result25;
          } else {
            var result23 = null;
            pos = savedPos4;
          }
          if (result23 !== null) {
            var result0 = result23;
          } else {
            var savedPos2 = pos;
            var savedPos3 = pos;
            if (input.substr(pos, 1) === "\\") {
              var result9 = "\\";
              pos += 1;
            } else {
              var result9 = null;
              if (reportMatchFailures) {
                matchFailed("\"\\\\\"");
              }
            }
            if (result9 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result22 = "0";
                pos += 1;
              } else {
                var result22 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result10 = result22 !== null ? result22 : '';
              if (result10 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result21 = "0";
                  pos += 1;
                } else {
                  var result21 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result11 = result21 !== null ? result21 : '';
                if (result11 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result20 = "0";
                    pos += 1;
                  } else {
                    var result20 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result12 = result20 !== null ? result20 : '';
                  if (result12 !== null) {
                    if (input.substr(pos, 1) === "0") {
                      var result19 = "0";
                      pos += 1;
                    } else {
                      var result19 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"0\"");
                      }
                    }
                    var result13 = result19 !== null ? result19 : '';
                    if (result13 !== null) {
                      if (input.substr(pos, 2) === "68") {
                        var result14 = "68";
                        pos += 2;
                      } else {
                        var result14 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"68\"");
                        }
                      }
                      if (result14 !== null) {
                        if (input.substr(pos, 2) === "\r\n") {
                          var result18 = "\r\n";
                          pos += 2;
                        } else {
                          var result18 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"\\r\\n\"");
                          }
                        }
                        if (result18 !== null) {
                          var result16 = result18;
                        } else {
                          if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                            var result17 = input.charAt(pos);
                            pos++;
                          } else {
                            var result17 = null;
                            if (reportMatchFailures) {
                              matchFailed("[ 	\\r\\n]");
                            }
                          }
                          if (result17 !== null) {
                            var result16 = result17;
                          } else {
                            var result16 = null;;
                          };
                        }
                        var result15 = result16 !== null ? result16 : '';
                        if (result15 !== null) {
                          var result7 = [result9, result10, result11, result12, result13, result14, result15];
                        } else {
                          var result7 = null;
                          pos = savedPos3;
                        }
                      } else {
                        var result7 = null;
                        pos = savedPos3;
                      }
                    } else {
                      var result7 = null;
                      pos = savedPos3;
                    }
                  } else {
                    var result7 = null;
                    pos = savedPos3;
                  }
                } else {
                  var result7 = null;
                  pos = savedPos3;
                }
              } else {
                var result7 = null;
                pos = savedPos3;
              }
            } else {
              var result7 = null;
              pos = savedPos3;
            }
            var result8 = result7 !== null
              ? (function() { return "h"; })()
              : null;
            if (result8 !== null) {
              var result6 = result8;
            } else {
              var result6 = null;
              pos = savedPos2;
            }
            if (result6 !== null) {
              var result0 = result6;
            } else {
              var savedPos0 = pos;
              var savedPos1 = pos;
              if (input.substr(pos, 1) === "\\") {
                var result4 = "\\";
                pos += 1;
              } else {
                var result4 = null;
                if (reportMatchFailures) {
                  matchFailed("\"\\\\\"");
                }
              }
              if (result4 !== null) {
                if (input.substr(pos).match(/^[hH]/) !== null) {
                  var result5 = input.charAt(pos);
                  pos++;
                } else {
                  var result5 = null;
                  if (reportMatchFailures) {
                    matchFailed("[hH]");
                  }
                }
                if (result5 !== null) {
                  var result2 = [result4, result5];
                } else {
                  var result2 = null;
                  pos = savedPos1;
                }
              } else {
                var result2 = null;
                pos = savedPos1;
              }
              var result3 = result2 !== null
                ? (function(char_) { return char_; })(result2[1])
                : null;
              if (result3 !== null) {
                var result1 = result3;
              } else {
                var result1 = null;
                pos = savedPos0;
              }
              if (result1 !== null) {
                var result0 = result1;
              } else {
                var result0 = null;;
              };
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_I() {
        var cacheKey = 'I@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        if (input.substr(pos).match(/^[iI]/) !== null) {
          var result40 = input.charAt(pos);
          pos++;
        } else {
          var result40 = null;
          if (reportMatchFailures) {
            matchFailed("[iI]");
          }
        }
        if (result40 !== null) {
          var result0 = result40;
        } else {
          var savedPos4 = pos;
          var savedPos5 = pos;
          if (input.substr(pos, 1) === "\\") {
            var result26 = "\\";
            pos += 1;
          } else {
            var result26 = null;
            if (reportMatchFailures) {
              matchFailed("\"\\\\\"");
            }
          }
          if (result26 !== null) {
            if (input.substr(pos, 1) === "0") {
              var result39 = "0";
              pos += 1;
            } else {
              var result39 = null;
              if (reportMatchFailures) {
                matchFailed("\"0\"");
              }
            }
            var result27 = result39 !== null ? result39 : '';
            if (result27 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result38 = "0";
                pos += 1;
              } else {
                var result38 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result28 = result38 !== null ? result38 : '';
              if (result28 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result37 = "0";
                  pos += 1;
                } else {
                  var result37 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result29 = result37 !== null ? result37 : '';
                if (result29 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result36 = "0";
                    pos += 1;
                  } else {
                    var result36 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result30 = result36 !== null ? result36 : '';
                  if (result30 !== null) {
                    if (input.substr(pos, 2) === "49") {
                      var result31 = "49";
                      pos += 2;
                    } else {
                      var result31 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"49\"");
                      }
                    }
                    if (result31 !== null) {
                      if (input.substr(pos, 2) === "\r\n") {
                        var result35 = "\r\n";
                        pos += 2;
                      } else {
                        var result35 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"\\r\\n\"");
                        }
                      }
                      if (result35 !== null) {
                        var result33 = result35;
                      } else {
                        if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                          var result34 = input.charAt(pos);
                          pos++;
                        } else {
                          var result34 = null;
                          if (reportMatchFailures) {
                            matchFailed("[ 	\\r\\n]");
                          }
                        }
                        if (result34 !== null) {
                          var result33 = result34;
                        } else {
                          var result33 = null;;
                        };
                      }
                      var result32 = result33 !== null ? result33 : '';
                      if (result32 !== null) {
                        var result24 = [result26, result27, result28, result29, result30, result31, result32];
                      } else {
                        var result24 = null;
                        pos = savedPos5;
                      }
                    } else {
                      var result24 = null;
                      pos = savedPos5;
                    }
                  } else {
                    var result24 = null;
                    pos = savedPos5;
                  }
                } else {
                  var result24 = null;
                  pos = savedPos5;
                }
              } else {
                var result24 = null;
                pos = savedPos5;
              }
            } else {
              var result24 = null;
              pos = savedPos5;
            }
          } else {
            var result24 = null;
            pos = savedPos5;
          }
          var result25 = result24 !== null
            ? (function() { return "I"; })()
            : null;
          if (result25 !== null) {
            var result23 = result25;
          } else {
            var result23 = null;
            pos = savedPos4;
          }
          if (result23 !== null) {
            var result0 = result23;
          } else {
            var savedPos2 = pos;
            var savedPos3 = pos;
            if (input.substr(pos, 1) === "\\") {
              var result9 = "\\";
              pos += 1;
            } else {
              var result9 = null;
              if (reportMatchFailures) {
                matchFailed("\"\\\\\"");
              }
            }
            if (result9 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result22 = "0";
                pos += 1;
              } else {
                var result22 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result10 = result22 !== null ? result22 : '';
              if (result10 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result21 = "0";
                  pos += 1;
                } else {
                  var result21 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result11 = result21 !== null ? result21 : '';
                if (result11 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result20 = "0";
                    pos += 1;
                  } else {
                    var result20 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result12 = result20 !== null ? result20 : '';
                  if (result12 !== null) {
                    if (input.substr(pos, 1) === "0") {
                      var result19 = "0";
                      pos += 1;
                    } else {
                      var result19 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"0\"");
                      }
                    }
                    var result13 = result19 !== null ? result19 : '';
                    if (result13 !== null) {
                      if (input.substr(pos, 2) === "69") {
                        var result14 = "69";
                        pos += 2;
                      } else {
                        var result14 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"69\"");
                        }
                      }
                      if (result14 !== null) {
                        if (input.substr(pos, 2) === "\r\n") {
                          var result18 = "\r\n";
                          pos += 2;
                        } else {
                          var result18 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"\\r\\n\"");
                          }
                        }
                        if (result18 !== null) {
                          var result16 = result18;
                        } else {
                          if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                            var result17 = input.charAt(pos);
                            pos++;
                          } else {
                            var result17 = null;
                            if (reportMatchFailures) {
                              matchFailed("[ 	\\r\\n]");
                            }
                          }
                          if (result17 !== null) {
                            var result16 = result17;
                          } else {
                            var result16 = null;;
                          };
                        }
                        var result15 = result16 !== null ? result16 : '';
                        if (result15 !== null) {
                          var result7 = [result9, result10, result11, result12, result13, result14, result15];
                        } else {
                          var result7 = null;
                          pos = savedPos3;
                        }
                      } else {
                        var result7 = null;
                        pos = savedPos3;
                      }
                    } else {
                      var result7 = null;
                      pos = savedPos3;
                    }
                  } else {
                    var result7 = null;
                    pos = savedPos3;
                  }
                } else {
                  var result7 = null;
                  pos = savedPos3;
                }
              } else {
                var result7 = null;
                pos = savedPos3;
              }
            } else {
              var result7 = null;
              pos = savedPos3;
            }
            var result8 = result7 !== null
              ? (function() { return "i"; })()
              : null;
            if (result8 !== null) {
              var result6 = result8;
            } else {
              var result6 = null;
              pos = savedPos2;
            }
            if (result6 !== null) {
              var result0 = result6;
            } else {
              var savedPos0 = pos;
              var savedPos1 = pos;
              if (input.substr(pos, 1) === "\\") {
                var result4 = "\\";
                pos += 1;
              } else {
                var result4 = null;
                if (reportMatchFailures) {
                  matchFailed("\"\\\\\"");
                }
              }
              if (result4 !== null) {
                if (input.substr(pos).match(/^[iI]/) !== null) {
                  var result5 = input.charAt(pos);
                  pos++;
                } else {
                  var result5 = null;
                  if (reportMatchFailures) {
                    matchFailed("[iI]");
                  }
                }
                if (result5 !== null) {
                  var result2 = [result4, result5];
                } else {
                  var result2 = null;
                  pos = savedPos1;
                }
              } else {
                var result2 = null;
                pos = savedPos1;
              }
              var result3 = result2 !== null
                ? (function(char_) { return char_; })(result2[1])
                : null;
              if (result3 !== null) {
                var result1 = result3;
              } else {
                var result1 = null;
                pos = savedPos0;
              }
              if (result1 !== null) {
                var result0 = result1;
              } else {
                var result0 = null;;
              };
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_K() {
        var cacheKey = 'K@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        if (input.substr(pos).match(/^[kK]/) !== null) {
          var result42 = input.charAt(pos);
          pos++;
        } else {
          var result42 = null;
          if (reportMatchFailures) {
            matchFailed("[kK]");
          }
        }
        if (result42 !== null) {
          var result0 = result42;
        } else {
          var savedPos4 = pos;
          var savedPos5 = pos;
          if (input.substr(pos, 1) === "\\") {
            var result27 = "\\";
            pos += 1;
          } else {
            var result27 = null;
            if (reportMatchFailures) {
              matchFailed("\"\\\\\"");
            }
          }
          if (result27 !== null) {
            if (input.substr(pos, 1) === "0") {
              var result41 = "0";
              pos += 1;
            } else {
              var result41 = null;
              if (reportMatchFailures) {
                matchFailed("\"0\"");
              }
            }
            var result28 = result41 !== null ? result41 : '';
            if (result28 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result40 = "0";
                pos += 1;
              } else {
                var result40 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result29 = result40 !== null ? result40 : '';
              if (result29 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result39 = "0";
                  pos += 1;
                } else {
                  var result39 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result30 = result39 !== null ? result39 : '';
                if (result30 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result38 = "0";
                    pos += 1;
                  } else {
                    var result38 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result31 = result38 !== null ? result38 : '';
                  if (result31 !== null) {
                    if (input.substr(pos, 1) === "4") {
                      var result32 = "4";
                      pos += 1;
                    } else {
                      var result32 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"4\"");
                      }
                    }
                    if (result32 !== null) {
                      if (input.substr(pos).match(/^[bB]/) !== null) {
                        var result33 = input.charAt(pos);
                        pos++;
                      } else {
                        var result33 = null;
                        if (reportMatchFailures) {
                          matchFailed("[bB]");
                        }
                      }
                      if (result33 !== null) {
                        if (input.substr(pos, 2) === "\r\n") {
                          var result37 = "\r\n";
                          pos += 2;
                        } else {
                          var result37 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"\\r\\n\"");
                          }
                        }
                        if (result37 !== null) {
                          var result35 = result37;
                        } else {
                          if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                            var result36 = input.charAt(pos);
                            pos++;
                          } else {
                            var result36 = null;
                            if (reportMatchFailures) {
                              matchFailed("[ 	\\r\\n]");
                            }
                          }
                          if (result36 !== null) {
                            var result35 = result36;
                          } else {
                            var result35 = null;;
                          };
                        }
                        var result34 = result35 !== null ? result35 : '';
                        if (result34 !== null) {
                          var result25 = [result27, result28, result29, result30, result31, result32, result33, result34];
                        } else {
                          var result25 = null;
                          pos = savedPos5;
                        }
                      } else {
                        var result25 = null;
                        pos = savedPos5;
                      }
                    } else {
                      var result25 = null;
                      pos = savedPos5;
                    }
                  } else {
                    var result25 = null;
                    pos = savedPos5;
                  }
                } else {
                  var result25 = null;
                  pos = savedPos5;
                }
              } else {
                var result25 = null;
                pos = savedPos5;
              }
            } else {
              var result25 = null;
              pos = savedPos5;
            }
          } else {
            var result25 = null;
            pos = savedPos5;
          }
          var result26 = result25 !== null
            ? (function() { return "K"; })()
            : null;
          if (result26 !== null) {
            var result24 = result26;
          } else {
            var result24 = null;
            pos = savedPos4;
          }
          if (result24 !== null) {
            var result0 = result24;
          } else {
            var savedPos2 = pos;
            var savedPos3 = pos;
            if (input.substr(pos, 1) === "\\") {
              var result9 = "\\";
              pos += 1;
            } else {
              var result9 = null;
              if (reportMatchFailures) {
                matchFailed("\"\\\\\"");
              }
            }
            if (result9 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result23 = "0";
                pos += 1;
              } else {
                var result23 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result10 = result23 !== null ? result23 : '';
              if (result10 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result22 = "0";
                  pos += 1;
                } else {
                  var result22 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result11 = result22 !== null ? result22 : '';
                if (result11 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result21 = "0";
                    pos += 1;
                  } else {
                    var result21 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result12 = result21 !== null ? result21 : '';
                  if (result12 !== null) {
                    if (input.substr(pos, 1) === "0") {
                      var result20 = "0";
                      pos += 1;
                    } else {
                      var result20 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"0\"");
                      }
                    }
                    var result13 = result20 !== null ? result20 : '';
                    if (result13 !== null) {
                      if (input.substr(pos, 1) === "6") {
                        var result14 = "6";
                        pos += 1;
                      } else {
                        var result14 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"6\"");
                        }
                      }
                      if (result14 !== null) {
                        if (input.substr(pos).match(/^[bB]/) !== null) {
                          var result15 = input.charAt(pos);
                          pos++;
                        } else {
                          var result15 = null;
                          if (reportMatchFailures) {
                            matchFailed("[bB]");
                          }
                        }
                        if (result15 !== null) {
                          if (input.substr(pos, 2) === "\r\n") {
                            var result19 = "\r\n";
                            pos += 2;
                          } else {
                            var result19 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"\\r\\n\"");
                            }
                          }
                          if (result19 !== null) {
                            var result17 = result19;
                          } else {
                            if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                              var result18 = input.charAt(pos);
                              pos++;
                            } else {
                              var result18 = null;
                              if (reportMatchFailures) {
                                matchFailed("[ 	\\r\\n]");
                              }
                            }
                            if (result18 !== null) {
                              var result17 = result18;
                            } else {
                              var result17 = null;;
                            };
                          }
                          var result16 = result17 !== null ? result17 : '';
                          if (result16 !== null) {
                            var result7 = [result9, result10, result11, result12, result13, result14, result15, result16];
                          } else {
                            var result7 = null;
                            pos = savedPos3;
                          }
                        } else {
                          var result7 = null;
                          pos = savedPos3;
                        }
                      } else {
                        var result7 = null;
                        pos = savedPos3;
                      }
                    } else {
                      var result7 = null;
                      pos = savedPos3;
                    }
                  } else {
                    var result7 = null;
                    pos = savedPos3;
                  }
                } else {
                  var result7 = null;
                  pos = savedPos3;
                }
              } else {
                var result7 = null;
                pos = savedPos3;
              }
            } else {
              var result7 = null;
              pos = savedPos3;
            }
            var result8 = result7 !== null
              ? (function() { return "k"; })()
              : null;
            if (result8 !== null) {
              var result6 = result8;
            } else {
              var result6 = null;
              pos = savedPos2;
            }
            if (result6 !== null) {
              var result0 = result6;
            } else {
              var savedPos0 = pos;
              var savedPos1 = pos;
              if (input.substr(pos, 1) === "\\") {
                var result4 = "\\";
                pos += 1;
              } else {
                var result4 = null;
                if (reportMatchFailures) {
                  matchFailed("\"\\\\\"");
                }
              }
              if (result4 !== null) {
                if (input.substr(pos).match(/^[kK]/) !== null) {
                  var result5 = input.charAt(pos);
                  pos++;
                } else {
                  var result5 = null;
                  if (reportMatchFailures) {
                    matchFailed("[kK]");
                  }
                }
                if (result5 !== null) {
                  var result2 = [result4, result5];
                } else {
                  var result2 = null;
                  pos = savedPos1;
                }
              } else {
                var result2 = null;
                pos = savedPos1;
              }
              var result3 = result2 !== null
                ? (function(char_) { return char_; })(result2[1])
                : null;
              if (result3 !== null) {
                var result1 = result3;
              } else {
                var result1 = null;
                pos = savedPos0;
              }
              if (result1 !== null) {
                var result0 = result1;
              } else {
                var result0 = null;;
              };
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_L() {
        var cacheKey = 'L@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        if (input.substr(pos).match(/^[lL]/) !== null) {
          var result42 = input.charAt(pos);
          pos++;
        } else {
          var result42 = null;
          if (reportMatchFailures) {
            matchFailed("[lL]");
          }
        }
        if (result42 !== null) {
          var result0 = result42;
        } else {
          var savedPos4 = pos;
          var savedPos5 = pos;
          if (input.substr(pos, 1) === "\\") {
            var result27 = "\\";
            pos += 1;
          } else {
            var result27 = null;
            if (reportMatchFailures) {
              matchFailed("\"\\\\\"");
            }
          }
          if (result27 !== null) {
            if (input.substr(pos, 1) === "0") {
              var result41 = "0";
              pos += 1;
            } else {
              var result41 = null;
              if (reportMatchFailures) {
                matchFailed("\"0\"");
              }
            }
            var result28 = result41 !== null ? result41 : '';
            if (result28 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result40 = "0";
                pos += 1;
              } else {
                var result40 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result29 = result40 !== null ? result40 : '';
              if (result29 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result39 = "0";
                  pos += 1;
                } else {
                  var result39 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result30 = result39 !== null ? result39 : '';
                if (result30 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result38 = "0";
                    pos += 1;
                  } else {
                    var result38 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result31 = result38 !== null ? result38 : '';
                  if (result31 !== null) {
                    if (input.substr(pos, 1) === "4") {
                      var result32 = "4";
                      pos += 1;
                    } else {
                      var result32 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"4\"");
                      }
                    }
                    if (result32 !== null) {
                      if (input.substr(pos).match(/^[cC]/) !== null) {
                        var result33 = input.charAt(pos);
                        pos++;
                      } else {
                        var result33 = null;
                        if (reportMatchFailures) {
                          matchFailed("[cC]");
                        }
                      }
                      if (result33 !== null) {
                        if (input.substr(pos, 2) === "\r\n") {
                          var result37 = "\r\n";
                          pos += 2;
                        } else {
                          var result37 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"\\r\\n\"");
                          }
                        }
                        if (result37 !== null) {
                          var result35 = result37;
                        } else {
                          if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                            var result36 = input.charAt(pos);
                            pos++;
                          } else {
                            var result36 = null;
                            if (reportMatchFailures) {
                              matchFailed("[ 	\\r\\n]");
                            }
                          }
                          if (result36 !== null) {
                            var result35 = result36;
                          } else {
                            var result35 = null;;
                          };
                        }
                        var result34 = result35 !== null ? result35 : '';
                        if (result34 !== null) {
                          var result25 = [result27, result28, result29, result30, result31, result32, result33, result34];
                        } else {
                          var result25 = null;
                          pos = savedPos5;
                        }
                      } else {
                        var result25 = null;
                        pos = savedPos5;
                      }
                    } else {
                      var result25 = null;
                      pos = savedPos5;
                    }
                  } else {
                    var result25 = null;
                    pos = savedPos5;
                  }
                } else {
                  var result25 = null;
                  pos = savedPos5;
                }
              } else {
                var result25 = null;
                pos = savedPos5;
              }
            } else {
              var result25 = null;
              pos = savedPos5;
            }
          } else {
            var result25 = null;
            pos = savedPos5;
          }
          var result26 = result25 !== null
            ? (function() { return "L"; })()
            : null;
          if (result26 !== null) {
            var result24 = result26;
          } else {
            var result24 = null;
            pos = savedPos4;
          }
          if (result24 !== null) {
            var result0 = result24;
          } else {
            var savedPos2 = pos;
            var savedPos3 = pos;
            if (input.substr(pos, 1) === "\\") {
              var result9 = "\\";
              pos += 1;
            } else {
              var result9 = null;
              if (reportMatchFailures) {
                matchFailed("\"\\\\\"");
              }
            }
            if (result9 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result23 = "0";
                pos += 1;
              } else {
                var result23 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result10 = result23 !== null ? result23 : '';
              if (result10 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result22 = "0";
                  pos += 1;
                } else {
                  var result22 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result11 = result22 !== null ? result22 : '';
                if (result11 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result21 = "0";
                    pos += 1;
                  } else {
                    var result21 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result12 = result21 !== null ? result21 : '';
                  if (result12 !== null) {
                    if (input.substr(pos, 1) === "0") {
                      var result20 = "0";
                      pos += 1;
                    } else {
                      var result20 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"0\"");
                      }
                    }
                    var result13 = result20 !== null ? result20 : '';
                    if (result13 !== null) {
                      if (input.substr(pos, 1) === "6") {
                        var result14 = "6";
                        pos += 1;
                      } else {
                        var result14 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"6\"");
                        }
                      }
                      if (result14 !== null) {
                        if (input.substr(pos).match(/^[cC]/) !== null) {
                          var result15 = input.charAt(pos);
                          pos++;
                        } else {
                          var result15 = null;
                          if (reportMatchFailures) {
                            matchFailed("[cC]");
                          }
                        }
                        if (result15 !== null) {
                          if (input.substr(pos, 2) === "\r\n") {
                            var result19 = "\r\n";
                            pos += 2;
                          } else {
                            var result19 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"\\r\\n\"");
                            }
                          }
                          if (result19 !== null) {
                            var result17 = result19;
                          } else {
                            if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                              var result18 = input.charAt(pos);
                              pos++;
                            } else {
                              var result18 = null;
                              if (reportMatchFailures) {
                                matchFailed("[ 	\\r\\n]");
                              }
                            }
                            if (result18 !== null) {
                              var result17 = result18;
                            } else {
                              var result17 = null;;
                            };
                          }
                          var result16 = result17 !== null ? result17 : '';
                          if (result16 !== null) {
                            var result7 = [result9, result10, result11, result12, result13, result14, result15, result16];
                          } else {
                            var result7 = null;
                            pos = savedPos3;
                          }
                        } else {
                          var result7 = null;
                          pos = savedPos3;
                        }
                      } else {
                        var result7 = null;
                        pos = savedPos3;
                      }
                    } else {
                      var result7 = null;
                      pos = savedPos3;
                    }
                  } else {
                    var result7 = null;
                    pos = savedPos3;
                  }
                } else {
                  var result7 = null;
                  pos = savedPos3;
                }
              } else {
                var result7 = null;
                pos = savedPos3;
              }
            } else {
              var result7 = null;
              pos = savedPos3;
            }
            var result8 = result7 !== null
              ? (function() { return "l"; })()
              : null;
            if (result8 !== null) {
              var result6 = result8;
            } else {
              var result6 = null;
              pos = savedPos2;
            }
            if (result6 !== null) {
              var result0 = result6;
            } else {
              var savedPos0 = pos;
              var savedPos1 = pos;
              if (input.substr(pos, 1) === "\\") {
                var result4 = "\\";
                pos += 1;
              } else {
                var result4 = null;
                if (reportMatchFailures) {
                  matchFailed("\"\\\\\"");
                }
              }
              if (result4 !== null) {
                if (input.substr(pos).match(/^[lL]/) !== null) {
                  var result5 = input.charAt(pos);
                  pos++;
                } else {
                  var result5 = null;
                  if (reportMatchFailures) {
                    matchFailed("[lL]");
                  }
                }
                if (result5 !== null) {
                  var result2 = [result4, result5];
                } else {
                  var result2 = null;
                  pos = savedPos1;
                }
              } else {
                var result2 = null;
                pos = savedPos1;
              }
              var result3 = result2 !== null
                ? (function(char_) { return char_; })(result2[1])
                : null;
              if (result3 !== null) {
                var result1 = result3;
              } else {
                var result1 = null;
                pos = savedPos0;
              }
              if (result1 !== null) {
                var result0 = result1;
              } else {
                var result0 = null;;
              };
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_M() {
        var cacheKey = 'M@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        if (input.substr(pos).match(/^[mM]/) !== null) {
          var result42 = input.charAt(pos);
          pos++;
        } else {
          var result42 = null;
          if (reportMatchFailures) {
            matchFailed("[mM]");
          }
        }
        if (result42 !== null) {
          var result0 = result42;
        } else {
          var savedPos4 = pos;
          var savedPos5 = pos;
          if (input.substr(pos, 1) === "\\") {
            var result27 = "\\";
            pos += 1;
          } else {
            var result27 = null;
            if (reportMatchFailures) {
              matchFailed("\"\\\\\"");
            }
          }
          if (result27 !== null) {
            if (input.substr(pos, 1) === "0") {
              var result41 = "0";
              pos += 1;
            } else {
              var result41 = null;
              if (reportMatchFailures) {
                matchFailed("\"0\"");
              }
            }
            var result28 = result41 !== null ? result41 : '';
            if (result28 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result40 = "0";
                pos += 1;
              } else {
                var result40 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result29 = result40 !== null ? result40 : '';
              if (result29 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result39 = "0";
                  pos += 1;
                } else {
                  var result39 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result30 = result39 !== null ? result39 : '';
                if (result30 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result38 = "0";
                    pos += 1;
                  } else {
                    var result38 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result31 = result38 !== null ? result38 : '';
                  if (result31 !== null) {
                    if (input.substr(pos, 1) === "4") {
                      var result32 = "4";
                      pos += 1;
                    } else {
                      var result32 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"4\"");
                      }
                    }
                    if (result32 !== null) {
                      if (input.substr(pos).match(/^[dD]/) !== null) {
                        var result33 = input.charAt(pos);
                        pos++;
                      } else {
                        var result33 = null;
                        if (reportMatchFailures) {
                          matchFailed("[dD]");
                        }
                      }
                      if (result33 !== null) {
                        if (input.substr(pos, 2) === "\r\n") {
                          var result37 = "\r\n";
                          pos += 2;
                        } else {
                          var result37 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"\\r\\n\"");
                          }
                        }
                        if (result37 !== null) {
                          var result35 = result37;
                        } else {
                          if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                            var result36 = input.charAt(pos);
                            pos++;
                          } else {
                            var result36 = null;
                            if (reportMatchFailures) {
                              matchFailed("[ 	\\r\\n]");
                            }
                          }
                          if (result36 !== null) {
                            var result35 = result36;
                          } else {
                            var result35 = null;;
                          };
                        }
                        var result34 = result35 !== null ? result35 : '';
                        if (result34 !== null) {
                          var result25 = [result27, result28, result29, result30, result31, result32, result33, result34];
                        } else {
                          var result25 = null;
                          pos = savedPos5;
                        }
                      } else {
                        var result25 = null;
                        pos = savedPos5;
                      }
                    } else {
                      var result25 = null;
                      pos = savedPos5;
                    }
                  } else {
                    var result25 = null;
                    pos = savedPos5;
                  }
                } else {
                  var result25 = null;
                  pos = savedPos5;
                }
              } else {
                var result25 = null;
                pos = savedPos5;
              }
            } else {
              var result25 = null;
              pos = savedPos5;
            }
          } else {
            var result25 = null;
            pos = savedPos5;
          }
          var result26 = result25 !== null
            ? (function() { return "M"; })()
            : null;
          if (result26 !== null) {
            var result24 = result26;
          } else {
            var result24 = null;
            pos = savedPos4;
          }
          if (result24 !== null) {
            var result0 = result24;
          } else {
            var savedPos2 = pos;
            var savedPos3 = pos;
            if (input.substr(pos, 1) === "\\") {
              var result9 = "\\";
              pos += 1;
            } else {
              var result9 = null;
              if (reportMatchFailures) {
                matchFailed("\"\\\\\"");
              }
            }
            if (result9 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result23 = "0";
                pos += 1;
              } else {
                var result23 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result10 = result23 !== null ? result23 : '';
              if (result10 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result22 = "0";
                  pos += 1;
                } else {
                  var result22 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result11 = result22 !== null ? result22 : '';
                if (result11 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result21 = "0";
                    pos += 1;
                  } else {
                    var result21 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result12 = result21 !== null ? result21 : '';
                  if (result12 !== null) {
                    if (input.substr(pos, 1) === "0") {
                      var result20 = "0";
                      pos += 1;
                    } else {
                      var result20 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"0\"");
                      }
                    }
                    var result13 = result20 !== null ? result20 : '';
                    if (result13 !== null) {
                      if (input.substr(pos, 1) === "6") {
                        var result14 = "6";
                        pos += 1;
                      } else {
                        var result14 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"6\"");
                        }
                      }
                      if (result14 !== null) {
                        if (input.substr(pos).match(/^[dD]/) !== null) {
                          var result15 = input.charAt(pos);
                          pos++;
                        } else {
                          var result15 = null;
                          if (reportMatchFailures) {
                            matchFailed("[dD]");
                          }
                        }
                        if (result15 !== null) {
                          if (input.substr(pos, 2) === "\r\n") {
                            var result19 = "\r\n";
                            pos += 2;
                          } else {
                            var result19 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"\\r\\n\"");
                            }
                          }
                          if (result19 !== null) {
                            var result17 = result19;
                          } else {
                            if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                              var result18 = input.charAt(pos);
                              pos++;
                            } else {
                              var result18 = null;
                              if (reportMatchFailures) {
                                matchFailed("[ 	\\r\\n]");
                              }
                            }
                            if (result18 !== null) {
                              var result17 = result18;
                            } else {
                              var result17 = null;;
                            };
                          }
                          var result16 = result17 !== null ? result17 : '';
                          if (result16 !== null) {
                            var result7 = [result9, result10, result11, result12, result13, result14, result15, result16];
                          } else {
                            var result7 = null;
                            pos = savedPos3;
                          }
                        } else {
                          var result7 = null;
                          pos = savedPos3;
                        }
                      } else {
                        var result7 = null;
                        pos = savedPos3;
                      }
                    } else {
                      var result7 = null;
                      pos = savedPos3;
                    }
                  } else {
                    var result7 = null;
                    pos = savedPos3;
                  }
                } else {
                  var result7 = null;
                  pos = savedPos3;
                }
              } else {
                var result7 = null;
                pos = savedPos3;
              }
            } else {
              var result7 = null;
              pos = savedPos3;
            }
            var result8 = result7 !== null
              ? (function() { return "m"; })()
              : null;
            if (result8 !== null) {
              var result6 = result8;
            } else {
              var result6 = null;
              pos = savedPos2;
            }
            if (result6 !== null) {
              var result0 = result6;
            } else {
              var savedPos0 = pos;
              var savedPos1 = pos;
              if (input.substr(pos, 1) === "\\") {
                var result4 = "\\";
                pos += 1;
              } else {
                var result4 = null;
                if (reportMatchFailures) {
                  matchFailed("\"\\\\\"");
                }
              }
              if (result4 !== null) {
                if (input.substr(pos).match(/^[mM]/) !== null) {
                  var result5 = input.charAt(pos);
                  pos++;
                } else {
                  var result5 = null;
                  if (reportMatchFailures) {
                    matchFailed("[mM]");
                  }
                }
                if (result5 !== null) {
                  var result2 = [result4, result5];
                } else {
                  var result2 = null;
                  pos = savedPos1;
                }
              } else {
                var result2 = null;
                pos = savedPos1;
              }
              var result3 = result2 !== null
                ? (function(char_) { return char_; })(result2[1])
                : null;
              if (result3 !== null) {
                var result1 = result3;
              } else {
                var result1 = null;
                pos = savedPos0;
              }
              if (result1 !== null) {
                var result0 = result1;
              } else {
                var result0 = null;;
              };
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_N() {
        var cacheKey = 'N@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        if (input.substr(pos).match(/^[nN]/) !== null) {
          var result42 = input.charAt(pos);
          pos++;
        } else {
          var result42 = null;
          if (reportMatchFailures) {
            matchFailed("[nN]");
          }
        }
        if (result42 !== null) {
          var result0 = result42;
        } else {
          var savedPos4 = pos;
          var savedPos5 = pos;
          if (input.substr(pos, 1) === "\\") {
            var result27 = "\\";
            pos += 1;
          } else {
            var result27 = null;
            if (reportMatchFailures) {
              matchFailed("\"\\\\\"");
            }
          }
          if (result27 !== null) {
            if (input.substr(pos, 1) === "0") {
              var result41 = "0";
              pos += 1;
            } else {
              var result41 = null;
              if (reportMatchFailures) {
                matchFailed("\"0\"");
              }
            }
            var result28 = result41 !== null ? result41 : '';
            if (result28 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result40 = "0";
                pos += 1;
              } else {
                var result40 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result29 = result40 !== null ? result40 : '';
              if (result29 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result39 = "0";
                  pos += 1;
                } else {
                  var result39 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result30 = result39 !== null ? result39 : '';
                if (result30 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result38 = "0";
                    pos += 1;
                  } else {
                    var result38 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result31 = result38 !== null ? result38 : '';
                  if (result31 !== null) {
                    if (input.substr(pos, 1) === "4") {
                      var result32 = "4";
                      pos += 1;
                    } else {
                      var result32 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"4\"");
                      }
                    }
                    if (result32 !== null) {
                      if (input.substr(pos).match(/^[eE]/) !== null) {
                        var result33 = input.charAt(pos);
                        pos++;
                      } else {
                        var result33 = null;
                        if (reportMatchFailures) {
                          matchFailed("[eE]");
                        }
                      }
                      if (result33 !== null) {
                        if (input.substr(pos, 2) === "\r\n") {
                          var result37 = "\r\n";
                          pos += 2;
                        } else {
                          var result37 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"\\r\\n\"");
                          }
                        }
                        if (result37 !== null) {
                          var result35 = result37;
                        } else {
                          if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                            var result36 = input.charAt(pos);
                            pos++;
                          } else {
                            var result36 = null;
                            if (reportMatchFailures) {
                              matchFailed("[ 	\\r\\n]");
                            }
                          }
                          if (result36 !== null) {
                            var result35 = result36;
                          } else {
                            var result35 = null;;
                          };
                        }
                        var result34 = result35 !== null ? result35 : '';
                        if (result34 !== null) {
                          var result25 = [result27, result28, result29, result30, result31, result32, result33, result34];
                        } else {
                          var result25 = null;
                          pos = savedPos5;
                        }
                      } else {
                        var result25 = null;
                        pos = savedPos5;
                      }
                    } else {
                      var result25 = null;
                      pos = savedPos5;
                    }
                  } else {
                    var result25 = null;
                    pos = savedPos5;
                  }
                } else {
                  var result25 = null;
                  pos = savedPos5;
                }
              } else {
                var result25 = null;
                pos = savedPos5;
              }
            } else {
              var result25 = null;
              pos = savedPos5;
            }
          } else {
            var result25 = null;
            pos = savedPos5;
          }
          var result26 = result25 !== null
            ? (function() { return "N"; })()
            : null;
          if (result26 !== null) {
            var result24 = result26;
          } else {
            var result24 = null;
            pos = savedPos4;
          }
          if (result24 !== null) {
            var result0 = result24;
          } else {
            var savedPos2 = pos;
            var savedPos3 = pos;
            if (input.substr(pos, 1) === "\\") {
              var result9 = "\\";
              pos += 1;
            } else {
              var result9 = null;
              if (reportMatchFailures) {
                matchFailed("\"\\\\\"");
              }
            }
            if (result9 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result23 = "0";
                pos += 1;
              } else {
                var result23 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result10 = result23 !== null ? result23 : '';
              if (result10 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result22 = "0";
                  pos += 1;
                } else {
                  var result22 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result11 = result22 !== null ? result22 : '';
                if (result11 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result21 = "0";
                    pos += 1;
                  } else {
                    var result21 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result12 = result21 !== null ? result21 : '';
                  if (result12 !== null) {
                    if (input.substr(pos, 1) === "0") {
                      var result20 = "0";
                      pos += 1;
                    } else {
                      var result20 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"0\"");
                      }
                    }
                    var result13 = result20 !== null ? result20 : '';
                    if (result13 !== null) {
                      if (input.substr(pos, 1) === "6") {
                        var result14 = "6";
                        pos += 1;
                      } else {
                        var result14 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"6\"");
                        }
                      }
                      if (result14 !== null) {
                        if (input.substr(pos).match(/^[eE]/) !== null) {
                          var result15 = input.charAt(pos);
                          pos++;
                        } else {
                          var result15 = null;
                          if (reportMatchFailures) {
                            matchFailed("[eE]");
                          }
                        }
                        if (result15 !== null) {
                          if (input.substr(pos, 2) === "\r\n") {
                            var result19 = "\r\n";
                            pos += 2;
                          } else {
                            var result19 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"\\r\\n\"");
                            }
                          }
                          if (result19 !== null) {
                            var result17 = result19;
                          } else {
                            if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                              var result18 = input.charAt(pos);
                              pos++;
                            } else {
                              var result18 = null;
                              if (reportMatchFailures) {
                                matchFailed("[ 	\\r\\n]");
                              }
                            }
                            if (result18 !== null) {
                              var result17 = result18;
                            } else {
                              var result17 = null;;
                            };
                          }
                          var result16 = result17 !== null ? result17 : '';
                          if (result16 !== null) {
                            var result7 = [result9, result10, result11, result12, result13, result14, result15, result16];
                          } else {
                            var result7 = null;
                            pos = savedPos3;
                          }
                        } else {
                          var result7 = null;
                          pos = savedPos3;
                        }
                      } else {
                        var result7 = null;
                        pos = savedPos3;
                      }
                    } else {
                      var result7 = null;
                      pos = savedPos3;
                    }
                  } else {
                    var result7 = null;
                    pos = savedPos3;
                  }
                } else {
                  var result7 = null;
                  pos = savedPos3;
                }
              } else {
                var result7 = null;
                pos = savedPos3;
              }
            } else {
              var result7 = null;
              pos = savedPos3;
            }
            var result8 = result7 !== null
              ? (function() { return "n"; })()
              : null;
            if (result8 !== null) {
              var result6 = result8;
            } else {
              var result6 = null;
              pos = savedPos2;
            }
            if (result6 !== null) {
              var result0 = result6;
            } else {
              var savedPos0 = pos;
              var savedPos1 = pos;
              if (input.substr(pos, 1) === "\\") {
                var result4 = "\\";
                pos += 1;
              } else {
                var result4 = null;
                if (reportMatchFailures) {
                  matchFailed("\"\\\\\"");
                }
              }
              if (result4 !== null) {
                if (input.substr(pos).match(/^[nN]/) !== null) {
                  var result5 = input.charAt(pos);
                  pos++;
                } else {
                  var result5 = null;
                  if (reportMatchFailures) {
                    matchFailed("[nN]");
                  }
                }
                if (result5 !== null) {
                  var result2 = [result4, result5];
                } else {
                  var result2 = null;
                  pos = savedPos1;
                }
              } else {
                var result2 = null;
                pos = savedPos1;
              }
              var result3 = result2 !== null
                ? (function(char_) { return char_; })(result2[1])
                : null;
              if (result3 !== null) {
                var result1 = result3;
              } else {
                var result1 = null;
                pos = savedPos0;
              }
              if (result1 !== null) {
                var result0 = result1;
              } else {
                var result0 = null;;
              };
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_O() {
        var cacheKey = 'O@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        if (input.substr(pos).match(/^[oO]/) !== null) {
          var result42 = input.charAt(pos);
          pos++;
        } else {
          var result42 = null;
          if (reportMatchFailures) {
            matchFailed("[oO]");
          }
        }
        if (result42 !== null) {
          var result0 = result42;
        } else {
          var savedPos4 = pos;
          var savedPos5 = pos;
          if (input.substr(pos, 1) === "\\") {
            var result27 = "\\";
            pos += 1;
          } else {
            var result27 = null;
            if (reportMatchFailures) {
              matchFailed("\"\\\\\"");
            }
          }
          if (result27 !== null) {
            if (input.substr(pos, 1) === "0") {
              var result41 = "0";
              pos += 1;
            } else {
              var result41 = null;
              if (reportMatchFailures) {
                matchFailed("\"0\"");
              }
            }
            var result28 = result41 !== null ? result41 : '';
            if (result28 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result40 = "0";
                pos += 1;
              } else {
                var result40 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result29 = result40 !== null ? result40 : '';
              if (result29 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result39 = "0";
                  pos += 1;
                } else {
                  var result39 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result30 = result39 !== null ? result39 : '';
                if (result30 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result38 = "0";
                    pos += 1;
                  } else {
                    var result38 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result31 = result38 !== null ? result38 : '';
                  if (result31 !== null) {
                    if (input.substr(pos, 1) === "4") {
                      var result32 = "4";
                      pos += 1;
                    } else {
                      var result32 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"4\"");
                      }
                    }
                    if (result32 !== null) {
                      if (input.substr(pos).match(/^[fF]/) !== null) {
                        var result33 = input.charAt(pos);
                        pos++;
                      } else {
                        var result33 = null;
                        if (reportMatchFailures) {
                          matchFailed("[fF]");
                        }
                      }
                      if (result33 !== null) {
                        if (input.substr(pos, 2) === "\r\n") {
                          var result37 = "\r\n";
                          pos += 2;
                        } else {
                          var result37 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"\\r\\n\"");
                          }
                        }
                        if (result37 !== null) {
                          var result35 = result37;
                        } else {
                          if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                            var result36 = input.charAt(pos);
                            pos++;
                          } else {
                            var result36 = null;
                            if (reportMatchFailures) {
                              matchFailed("[ 	\\r\\n]");
                            }
                          }
                          if (result36 !== null) {
                            var result35 = result36;
                          } else {
                            var result35 = null;;
                          };
                        }
                        var result34 = result35 !== null ? result35 : '';
                        if (result34 !== null) {
                          var result25 = [result27, result28, result29, result30, result31, result32, result33, result34];
                        } else {
                          var result25 = null;
                          pos = savedPos5;
                        }
                      } else {
                        var result25 = null;
                        pos = savedPos5;
                      }
                    } else {
                      var result25 = null;
                      pos = savedPos5;
                    }
                  } else {
                    var result25 = null;
                    pos = savedPos5;
                  }
                } else {
                  var result25 = null;
                  pos = savedPos5;
                }
              } else {
                var result25 = null;
                pos = savedPos5;
              }
            } else {
              var result25 = null;
              pos = savedPos5;
            }
          } else {
            var result25 = null;
            pos = savedPos5;
          }
          var result26 = result25 !== null
            ? (function() { return "O"; })()
            : null;
          if (result26 !== null) {
            var result24 = result26;
          } else {
            var result24 = null;
            pos = savedPos4;
          }
          if (result24 !== null) {
            var result0 = result24;
          } else {
            var savedPos2 = pos;
            var savedPos3 = pos;
            if (input.substr(pos, 1) === "\\") {
              var result9 = "\\";
              pos += 1;
            } else {
              var result9 = null;
              if (reportMatchFailures) {
                matchFailed("\"\\\\\"");
              }
            }
            if (result9 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result23 = "0";
                pos += 1;
              } else {
                var result23 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result10 = result23 !== null ? result23 : '';
              if (result10 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result22 = "0";
                  pos += 1;
                } else {
                  var result22 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result11 = result22 !== null ? result22 : '';
                if (result11 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result21 = "0";
                    pos += 1;
                  } else {
                    var result21 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result12 = result21 !== null ? result21 : '';
                  if (result12 !== null) {
                    if (input.substr(pos, 1) === "0") {
                      var result20 = "0";
                      pos += 1;
                    } else {
                      var result20 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"0\"");
                      }
                    }
                    var result13 = result20 !== null ? result20 : '';
                    if (result13 !== null) {
                      if (input.substr(pos, 1) === "6") {
                        var result14 = "6";
                        pos += 1;
                      } else {
                        var result14 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"6\"");
                        }
                      }
                      if (result14 !== null) {
                        if (input.substr(pos).match(/^[fF]/) !== null) {
                          var result15 = input.charAt(pos);
                          pos++;
                        } else {
                          var result15 = null;
                          if (reportMatchFailures) {
                            matchFailed("[fF]");
                          }
                        }
                        if (result15 !== null) {
                          if (input.substr(pos, 2) === "\r\n") {
                            var result19 = "\r\n";
                            pos += 2;
                          } else {
                            var result19 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"\\r\\n\"");
                            }
                          }
                          if (result19 !== null) {
                            var result17 = result19;
                          } else {
                            if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                              var result18 = input.charAt(pos);
                              pos++;
                            } else {
                              var result18 = null;
                              if (reportMatchFailures) {
                                matchFailed("[ 	\\r\\n]");
                              }
                            }
                            if (result18 !== null) {
                              var result17 = result18;
                            } else {
                              var result17 = null;;
                            };
                          }
                          var result16 = result17 !== null ? result17 : '';
                          if (result16 !== null) {
                            var result7 = [result9, result10, result11, result12, result13, result14, result15, result16];
                          } else {
                            var result7 = null;
                            pos = savedPos3;
                          }
                        } else {
                          var result7 = null;
                          pos = savedPos3;
                        }
                      } else {
                        var result7 = null;
                        pos = savedPos3;
                      }
                    } else {
                      var result7 = null;
                      pos = savedPos3;
                    }
                  } else {
                    var result7 = null;
                    pos = savedPos3;
                  }
                } else {
                  var result7 = null;
                  pos = savedPos3;
                }
              } else {
                var result7 = null;
                pos = savedPos3;
              }
            } else {
              var result7 = null;
              pos = savedPos3;
            }
            var result8 = result7 !== null
              ? (function() { return "o"; })()
              : null;
            if (result8 !== null) {
              var result6 = result8;
            } else {
              var result6 = null;
              pos = savedPos2;
            }
            if (result6 !== null) {
              var result0 = result6;
            } else {
              var savedPos0 = pos;
              var savedPos1 = pos;
              if (input.substr(pos, 1) === "\\") {
                var result4 = "\\";
                pos += 1;
              } else {
                var result4 = null;
                if (reportMatchFailures) {
                  matchFailed("\"\\\\\"");
                }
              }
              if (result4 !== null) {
                if (input.substr(pos).match(/^[oO]/) !== null) {
                  var result5 = input.charAt(pos);
                  pos++;
                } else {
                  var result5 = null;
                  if (reportMatchFailures) {
                    matchFailed("[oO]");
                  }
                }
                if (result5 !== null) {
                  var result2 = [result4, result5];
                } else {
                  var result2 = null;
                  pos = savedPos1;
                }
              } else {
                var result2 = null;
                pos = savedPos1;
              }
              var result3 = result2 !== null
                ? (function(char_) { return char_; })(result2[1])
                : null;
              if (result3 !== null) {
                var result1 = result3;
              } else {
                var result1 = null;
                pos = savedPos0;
              }
              if (result1 !== null) {
                var result0 = result1;
              } else {
                var result0 = null;;
              };
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_P() {
        var cacheKey = 'P@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        if (input.substr(pos).match(/^[pP]/) !== null) {
          var result40 = input.charAt(pos);
          pos++;
        } else {
          var result40 = null;
          if (reportMatchFailures) {
            matchFailed("[pP]");
          }
        }
        if (result40 !== null) {
          var result0 = result40;
        } else {
          var savedPos4 = pos;
          var savedPos5 = pos;
          if (input.substr(pos, 1) === "\\") {
            var result26 = "\\";
            pos += 1;
          } else {
            var result26 = null;
            if (reportMatchFailures) {
              matchFailed("\"\\\\\"");
            }
          }
          if (result26 !== null) {
            if (input.substr(pos, 1) === "0") {
              var result39 = "0";
              pos += 1;
            } else {
              var result39 = null;
              if (reportMatchFailures) {
                matchFailed("\"0\"");
              }
            }
            var result27 = result39 !== null ? result39 : '';
            if (result27 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result38 = "0";
                pos += 1;
              } else {
                var result38 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result28 = result38 !== null ? result38 : '';
              if (result28 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result37 = "0";
                  pos += 1;
                } else {
                  var result37 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result29 = result37 !== null ? result37 : '';
                if (result29 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result36 = "0";
                    pos += 1;
                  } else {
                    var result36 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result30 = result36 !== null ? result36 : '';
                  if (result30 !== null) {
                    if (input.substr(pos, 2) === "50") {
                      var result31 = "50";
                      pos += 2;
                    } else {
                      var result31 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"50\"");
                      }
                    }
                    if (result31 !== null) {
                      if (input.substr(pos, 2) === "\r\n") {
                        var result35 = "\r\n";
                        pos += 2;
                      } else {
                        var result35 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"\\r\\n\"");
                        }
                      }
                      if (result35 !== null) {
                        var result33 = result35;
                      } else {
                        if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                          var result34 = input.charAt(pos);
                          pos++;
                        } else {
                          var result34 = null;
                          if (reportMatchFailures) {
                            matchFailed("[ 	\\r\\n]");
                          }
                        }
                        if (result34 !== null) {
                          var result33 = result34;
                        } else {
                          var result33 = null;;
                        };
                      }
                      var result32 = result33 !== null ? result33 : '';
                      if (result32 !== null) {
                        var result24 = [result26, result27, result28, result29, result30, result31, result32];
                      } else {
                        var result24 = null;
                        pos = savedPos5;
                      }
                    } else {
                      var result24 = null;
                      pos = savedPos5;
                    }
                  } else {
                    var result24 = null;
                    pos = savedPos5;
                  }
                } else {
                  var result24 = null;
                  pos = savedPos5;
                }
              } else {
                var result24 = null;
                pos = savedPos5;
              }
            } else {
              var result24 = null;
              pos = savedPos5;
            }
          } else {
            var result24 = null;
            pos = savedPos5;
          }
          var result25 = result24 !== null
            ? (function() { return "P"; })()
            : null;
          if (result25 !== null) {
            var result23 = result25;
          } else {
            var result23 = null;
            pos = savedPos4;
          }
          if (result23 !== null) {
            var result0 = result23;
          } else {
            var savedPos2 = pos;
            var savedPos3 = pos;
            if (input.substr(pos, 1) === "\\") {
              var result9 = "\\";
              pos += 1;
            } else {
              var result9 = null;
              if (reportMatchFailures) {
                matchFailed("\"\\\\\"");
              }
            }
            if (result9 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result22 = "0";
                pos += 1;
              } else {
                var result22 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result10 = result22 !== null ? result22 : '';
              if (result10 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result21 = "0";
                  pos += 1;
                } else {
                  var result21 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result11 = result21 !== null ? result21 : '';
                if (result11 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result20 = "0";
                    pos += 1;
                  } else {
                    var result20 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result12 = result20 !== null ? result20 : '';
                  if (result12 !== null) {
                    if (input.substr(pos, 1) === "0") {
                      var result19 = "0";
                      pos += 1;
                    } else {
                      var result19 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"0\"");
                      }
                    }
                    var result13 = result19 !== null ? result19 : '';
                    if (result13 !== null) {
                      if (input.substr(pos, 2) === "70") {
                        var result14 = "70";
                        pos += 2;
                      } else {
                        var result14 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"70\"");
                        }
                      }
                      if (result14 !== null) {
                        if (input.substr(pos, 2) === "\r\n") {
                          var result18 = "\r\n";
                          pos += 2;
                        } else {
                          var result18 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"\\r\\n\"");
                          }
                        }
                        if (result18 !== null) {
                          var result16 = result18;
                        } else {
                          if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                            var result17 = input.charAt(pos);
                            pos++;
                          } else {
                            var result17 = null;
                            if (reportMatchFailures) {
                              matchFailed("[ 	\\r\\n]");
                            }
                          }
                          if (result17 !== null) {
                            var result16 = result17;
                          } else {
                            var result16 = null;;
                          };
                        }
                        var result15 = result16 !== null ? result16 : '';
                        if (result15 !== null) {
                          var result7 = [result9, result10, result11, result12, result13, result14, result15];
                        } else {
                          var result7 = null;
                          pos = savedPos3;
                        }
                      } else {
                        var result7 = null;
                        pos = savedPos3;
                      }
                    } else {
                      var result7 = null;
                      pos = savedPos3;
                    }
                  } else {
                    var result7 = null;
                    pos = savedPos3;
                  }
                } else {
                  var result7 = null;
                  pos = savedPos3;
                }
              } else {
                var result7 = null;
                pos = savedPos3;
              }
            } else {
              var result7 = null;
              pos = savedPos3;
            }
            var result8 = result7 !== null
              ? (function() { return "p"; })()
              : null;
            if (result8 !== null) {
              var result6 = result8;
            } else {
              var result6 = null;
              pos = savedPos2;
            }
            if (result6 !== null) {
              var result0 = result6;
            } else {
              var savedPos0 = pos;
              var savedPos1 = pos;
              if (input.substr(pos, 1) === "\\") {
                var result4 = "\\";
                pos += 1;
              } else {
                var result4 = null;
                if (reportMatchFailures) {
                  matchFailed("\"\\\\\"");
                }
              }
              if (result4 !== null) {
                if (input.substr(pos).match(/^[pP]/) !== null) {
                  var result5 = input.charAt(pos);
                  pos++;
                } else {
                  var result5 = null;
                  if (reportMatchFailures) {
                    matchFailed("[pP]");
                  }
                }
                if (result5 !== null) {
                  var result2 = [result4, result5];
                } else {
                  var result2 = null;
                  pos = savedPos1;
                }
              } else {
                var result2 = null;
                pos = savedPos1;
              }
              var result3 = result2 !== null
                ? (function(char_) { return char_; })(result2[1])
                : null;
              if (result3 !== null) {
                var result1 = result3;
              } else {
                var result1 = null;
                pos = savedPos0;
              }
              if (result1 !== null) {
                var result0 = result1;
              } else {
                var result0 = null;;
              };
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_R() {
        var cacheKey = 'R@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        if (input.substr(pos).match(/^[rR]/) !== null) {
          var result40 = input.charAt(pos);
          pos++;
        } else {
          var result40 = null;
          if (reportMatchFailures) {
            matchFailed("[rR]");
          }
        }
        if (result40 !== null) {
          var result0 = result40;
        } else {
          var savedPos4 = pos;
          var savedPos5 = pos;
          if (input.substr(pos, 1) === "\\") {
            var result26 = "\\";
            pos += 1;
          } else {
            var result26 = null;
            if (reportMatchFailures) {
              matchFailed("\"\\\\\"");
            }
          }
          if (result26 !== null) {
            if (input.substr(pos, 1) === "0") {
              var result39 = "0";
              pos += 1;
            } else {
              var result39 = null;
              if (reportMatchFailures) {
                matchFailed("\"0\"");
              }
            }
            var result27 = result39 !== null ? result39 : '';
            if (result27 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result38 = "0";
                pos += 1;
              } else {
                var result38 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result28 = result38 !== null ? result38 : '';
              if (result28 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result37 = "0";
                  pos += 1;
                } else {
                  var result37 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result29 = result37 !== null ? result37 : '';
                if (result29 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result36 = "0";
                    pos += 1;
                  } else {
                    var result36 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result30 = result36 !== null ? result36 : '';
                  if (result30 !== null) {
                    if (input.substr(pos, 2) === "52") {
                      var result31 = "52";
                      pos += 2;
                    } else {
                      var result31 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"52\"");
                      }
                    }
                    if (result31 !== null) {
                      if (input.substr(pos, 2) === "\r\n") {
                        var result35 = "\r\n";
                        pos += 2;
                      } else {
                        var result35 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"\\r\\n\"");
                        }
                      }
                      if (result35 !== null) {
                        var result33 = result35;
                      } else {
                        if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                          var result34 = input.charAt(pos);
                          pos++;
                        } else {
                          var result34 = null;
                          if (reportMatchFailures) {
                            matchFailed("[ 	\\r\\n]");
                          }
                        }
                        if (result34 !== null) {
                          var result33 = result34;
                        } else {
                          var result33 = null;;
                        };
                      }
                      var result32 = result33 !== null ? result33 : '';
                      if (result32 !== null) {
                        var result24 = [result26, result27, result28, result29, result30, result31, result32];
                      } else {
                        var result24 = null;
                        pos = savedPos5;
                      }
                    } else {
                      var result24 = null;
                      pos = savedPos5;
                    }
                  } else {
                    var result24 = null;
                    pos = savedPos5;
                  }
                } else {
                  var result24 = null;
                  pos = savedPos5;
                }
              } else {
                var result24 = null;
                pos = savedPos5;
              }
            } else {
              var result24 = null;
              pos = savedPos5;
            }
          } else {
            var result24 = null;
            pos = savedPos5;
          }
          var result25 = result24 !== null
            ? (function() { return "R"; })()
            : null;
          if (result25 !== null) {
            var result23 = result25;
          } else {
            var result23 = null;
            pos = savedPos4;
          }
          if (result23 !== null) {
            var result0 = result23;
          } else {
            var savedPos2 = pos;
            var savedPos3 = pos;
            if (input.substr(pos, 1) === "\\") {
              var result9 = "\\";
              pos += 1;
            } else {
              var result9 = null;
              if (reportMatchFailures) {
                matchFailed("\"\\\\\"");
              }
            }
            if (result9 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result22 = "0";
                pos += 1;
              } else {
                var result22 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result10 = result22 !== null ? result22 : '';
              if (result10 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result21 = "0";
                  pos += 1;
                } else {
                  var result21 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result11 = result21 !== null ? result21 : '';
                if (result11 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result20 = "0";
                    pos += 1;
                  } else {
                    var result20 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result12 = result20 !== null ? result20 : '';
                  if (result12 !== null) {
                    if (input.substr(pos, 1) === "0") {
                      var result19 = "0";
                      pos += 1;
                    } else {
                      var result19 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"0\"");
                      }
                    }
                    var result13 = result19 !== null ? result19 : '';
                    if (result13 !== null) {
                      if (input.substr(pos, 2) === "72") {
                        var result14 = "72";
                        pos += 2;
                      } else {
                        var result14 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"72\"");
                        }
                      }
                      if (result14 !== null) {
                        if (input.substr(pos, 2) === "\r\n") {
                          var result18 = "\r\n";
                          pos += 2;
                        } else {
                          var result18 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"\\r\\n\"");
                          }
                        }
                        if (result18 !== null) {
                          var result16 = result18;
                        } else {
                          if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                            var result17 = input.charAt(pos);
                            pos++;
                          } else {
                            var result17 = null;
                            if (reportMatchFailures) {
                              matchFailed("[ 	\\r\\n]");
                            }
                          }
                          if (result17 !== null) {
                            var result16 = result17;
                          } else {
                            var result16 = null;;
                          };
                        }
                        var result15 = result16 !== null ? result16 : '';
                        if (result15 !== null) {
                          var result7 = [result9, result10, result11, result12, result13, result14, result15];
                        } else {
                          var result7 = null;
                          pos = savedPos3;
                        }
                      } else {
                        var result7 = null;
                        pos = savedPos3;
                      }
                    } else {
                      var result7 = null;
                      pos = savedPos3;
                    }
                  } else {
                    var result7 = null;
                    pos = savedPos3;
                  }
                } else {
                  var result7 = null;
                  pos = savedPos3;
                }
              } else {
                var result7 = null;
                pos = savedPos3;
              }
            } else {
              var result7 = null;
              pos = savedPos3;
            }
            var result8 = result7 !== null
              ? (function() { return "r"; })()
              : null;
            if (result8 !== null) {
              var result6 = result8;
            } else {
              var result6 = null;
              pos = savedPos2;
            }
            if (result6 !== null) {
              var result0 = result6;
            } else {
              var savedPos0 = pos;
              var savedPos1 = pos;
              if (input.substr(pos, 1) === "\\") {
                var result4 = "\\";
                pos += 1;
              } else {
                var result4 = null;
                if (reportMatchFailures) {
                  matchFailed("\"\\\\\"");
                }
              }
              if (result4 !== null) {
                if (input.substr(pos).match(/^[rR]/) !== null) {
                  var result5 = input.charAt(pos);
                  pos++;
                } else {
                  var result5 = null;
                  if (reportMatchFailures) {
                    matchFailed("[rR]");
                  }
                }
                if (result5 !== null) {
                  var result2 = [result4, result5];
                } else {
                  var result2 = null;
                  pos = savedPos1;
                }
              } else {
                var result2 = null;
                pos = savedPos1;
              }
              var result3 = result2 !== null
                ? (function(char_) { return char_; })(result2[1])
                : null;
              if (result3 !== null) {
                var result1 = result3;
              } else {
                var result1 = null;
                pos = savedPos0;
              }
              if (result1 !== null) {
                var result0 = result1;
              } else {
                var result0 = null;;
              };
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_S_() {
        var cacheKey = 'S_@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        if (input.substr(pos).match(/^[sS]/) !== null) {
          var result40 = input.charAt(pos);
          pos++;
        } else {
          var result40 = null;
          if (reportMatchFailures) {
            matchFailed("[sS]");
          }
        }
        if (result40 !== null) {
          var result0 = result40;
        } else {
          var savedPos4 = pos;
          var savedPos5 = pos;
          if (input.substr(pos, 1) === "\\") {
            var result26 = "\\";
            pos += 1;
          } else {
            var result26 = null;
            if (reportMatchFailures) {
              matchFailed("\"\\\\\"");
            }
          }
          if (result26 !== null) {
            if (input.substr(pos, 1) === "0") {
              var result39 = "0";
              pos += 1;
            } else {
              var result39 = null;
              if (reportMatchFailures) {
                matchFailed("\"0\"");
              }
            }
            var result27 = result39 !== null ? result39 : '';
            if (result27 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result38 = "0";
                pos += 1;
              } else {
                var result38 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result28 = result38 !== null ? result38 : '';
              if (result28 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result37 = "0";
                  pos += 1;
                } else {
                  var result37 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result29 = result37 !== null ? result37 : '';
                if (result29 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result36 = "0";
                    pos += 1;
                  } else {
                    var result36 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result30 = result36 !== null ? result36 : '';
                  if (result30 !== null) {
                    if (input.substr(pos, 2) === "53") {
                      var result31 = "53";
                      pos += 2;
                    } else {
                      var result31 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"53\"");
                      }
                    }
                    if (result31 !== null) {
                      if (input.substr(pos, 2) === "\r\n") {
                        var result35 = "\r\n";
                        pos += 2;
                      } else {
                        var result35 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"\\r\\n\"");
                        }
                      }
                      if (result35 !== null) {
                        var result33 = result35;
                      } else {
                        if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                          var result34 = input.charAt(pos);
                          pos++;
                        } else {
                          var result34 = null;
                          if (reportMatchFailures) {
                            matchFailed("[ 	\\r\\n]");
                          }
                        }
                        if (result34 !== null) {
                          var result33 = result34;
                        } else {
                          var result33 = null;;
                        };
                      }
                      var result32 = result33 !== null ? result33 : '';
                      if (result32 !== null) {
                        var result24 = [result26, result27, result28, result29, result30, result31, result32];
                      } else {
                        var result24 = null;
                        pos = savedPos5;
                      }
                    } else {
                      var result24 = null;
                      pos = savedPos5;
                    }
                  } else {
                    var result24 = null;
                    pos = savedPos5;
                  }
                } else {
                  var result24 = null;
                  pos = savedPos5;
                }
              } else {
                var result24 = null;
                pos = savedPos5;
              }
            } else {
              var result24 = null;
              pos = savedPos5;
            }
          } else {
            var result24 = null;
            pos = savedPos5;
          }
          var result25 = result24 !== null
            ? (function() { return "S"; })()
            : null;
          if (result25 !== null) {
            var result23 = result25;
          } else {
            var result23 = null;
            pos = savedPos4;
          }
          if (result23 !== null) {
            var result0 = result23;
          } else {
            var savedPos2 = pos;
            var savedPos3 = pos;
            if (input.substr(pos, 1) === "\\") {
              var result9 = "\\";
              pos += 1;
            } else {
              var result9 = null;
              if (reportMatchFailures) {
                matchFailed("\"\\\\\"");
              }
            }
            if (result9 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result22 = "0";
                pos += 1;
              } else {
                var result22 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result10 = result22 !== null ? result22 : '';
              if (result10 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result21 = "0";
                  pos += 1;
                } else {
                  var result21 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result11 = result21 !== null ? result21 : '';
                if (result11 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result20 = "0";
                    pos += 1;
                  } else {
                    var result20 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result12 = result20 !== null ? result20 : '';
                  if (result12 !== null) {
                    if (input.substr(pos, 1) === "0") {
                      var result19 = "0";
                      pos += 1;
                    } else {
                      var result19 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"0\"");
                      }
                    }
                    var result13 = result19 !== null ? result19 : '';
                    if (result13 !== null) {
                      if (input.substr(pos, 2) === "73") {
                        var result14 = "73";
                        pos += 2;
                      } else {
                        var result14 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"73\"");
                        }
                      }
                      if (result14 !== null) {
                        if (input.substr(pos, 2) === "\r\n") {
                          var result18 = "\r\n";
                          pos += 2;
                        } else {
                          var result18 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"\\r\\n\"");
                          }
                        }
                        if (result18 !== null) {
                          var result16 = result18;
                        } else {
                          if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                            var result17 = input.charAt(pos);
                            pos++;
                          } else {
                            var result17 = null;
                            if (reportMatchFailures) {
                              matchFailed("[ 	\\r\\n]");
                            }
                          }
                          if (result17 !== null) {
                            var result16 = result17;
                          } else {
                            var result16 = null;;
                          };
                        }
                        var result15 = result16 !== null ? result16 : '';
                        if (result15 !== null) {
                          var result7 = [result9, result10, result11, result12, result13, result14, result15];
                        } else {
                          var result7 = null;
                          pos = savedPos3;
                        }
                      } else {
                        var result7 = null;
                        pos = savedPos3;
                      }
                    } else {
                      var result7 = null;
                      pos = savedPos3;
                    }
                  } else {
                    var result7 = null;
                    pos = savedPos3;
                  }
                } else {
                  var result7 = null;
                  pos = savedPos3;
                }
              } else {
                var result7 = null;
                pos = savedPos3;
              }
            } else {
              var result7 = null;
              pos = savedPos3;
            }
            var result8 = result7 !== null
              ? (function() { return "s"; })()
              : null;
            if (result8 !== null) {
              var result6 = result8;
            } else {
              var result6 = null;
              pos = savedPos2;
            }
            if (result6 !== null) {
              var result0 = result6;
            } else {
              var savedPos0 = pos;
              var savedPos1 = pos;
              if (input.substr(pos, 1) === "\\") {
                var result4 = "\\";
                pos += 1;
              } else {
                var result4 = null;
                if (reportMatchFailures) {
                  matchFailed("\"\\\\\"");
                }
              }
              if (result4 !== null) {
                if (input.substr(pos).match(/^[sS]/) !== null) {
                  var result5 = input.charAt(pos);
                  pos++;
                } else {
                  var result5 = null;
                  if (reportMatchFailures) {
                    matchFailed("[sS]");
                  }
                }
                if (result5 !== null) {
                  var result2 = [result4, result5];
                } else {
                  var result2 = null;
                  pos = savedPos1;
                }
              } else {
                var result2 = null;
                pos = savedPos1;
              }
              var result3 = result2 !== null
                ? (function(char_) { return char_; })(result2[1])
                : null;
              if (result3 !== null) {
                var result1 = result3;
              } else {
                var result1 = null;
                pos = savedPos0;
              }
              if (result1 !== null) {
                var result0 = result1;
              } else {
                var result0 = null;;
              };
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_T() {
        var cacheKey = 'T@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        if (input.substr(pos).match(/^[tT]/) !== null) {
          var result40 = input.charAt(pos);
          pos++;
        } else {
          var result40 = null;
          if (reportMatchFailures) {
            matchFailed("[tT]");
          }
        }
        if (result40 !== null) {
          var result0 = result40;
        } else {
          var savedPos4 = pos;
          var savedPos5 = pos;
          if (input.substr(pos, 1) === "\\") {
            var result26 = "\\";
            pos += 1;
          } else {
            var result26 = null;
            if (reportMatchFailures) {
              matchFailed("\"\\\\\"");
            }
          }
          if (result26 !== null) {
            if (input.substr(pos, 1) === "0") {
              var result39 = "0";
              pos += 1;
            } else {
              var result39 = null;
              if (reportMatchFailures) {
                matchFailed("\"0\"");
              }
            }
            var result27 = result39 !== null ? result39 : '';
            if (result27 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result38 = "0";
                pos += 1;
              } else {
                var result38 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result28 = result38 !== null ? result38 : '';
              if (result28 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result37 = "0";
                  pos += 1;
                } else {
                  var result37 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result29 = result37 !== null ? result37 : '';
                if (result29 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result36 = "0";
                    pos += 1;
                  } else {
                    var result36 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result30 = result36 !== null ? result36 : '';
                  if (result30 !== null) {
                    if (input.substr(pos, 2) === "54") {
                      var result31 = "54";
                      pos += 2;
                    } else {
                      var result31 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"54\"");
                      }
                    }
                    if (result31 !== null) {
                      if (input.substr(pos, 2) === "\r\n") {
                        var result35 = "\r\n";
                        pos += 2;
                      } else {
                        var result35 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"\\r\\n\"");
                        }
                      }
                      if (result35 !== null) {
                        var result33 = result35;
                      } else {
                        if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                          var result34 = input.charAt(pos);
                          pos++;
                        } else {
                          var result34 = null;
                          if (reportMatchFailures) {
                            matchFailed("[ 	\\r\\n]");
                          }
                        }
                        if (result34 !== null) {
                          var result33 = result34;
                        } else {
                          var result33 = null;;
                        };
                      }
                      var result32 = result33 !== null ? result33 : '';
                      if (result32 !== null) {
                        var result24 = [result26, result27, result28, result29, result30, result31, result32];
                      } else {
                        var result24 = null;
                        pos = savedPos5;
                      }
                    } else {
                      var result24 = null;
                      pos = savedPos5;
                    }
                  } else {
                    var result24 = null;
                    pos = savedPos5;
                  }
                } else {
                  var result24 = null;
                  pos = savedPos5;
                }
              } else {
                var result24 = null;
                pos = savedPos5;
              }
            } else {
              var result24 = null;
              pos = savedPos5;
            }
          } else {
            var result24 = null;
            pos = savedPos5;
          }
          var result25 = result24 !== null
            ? (function() { return "T"; })()
            : null;
          if (result25 !== null) {
            var result23 = result25;
          } else {
            var result23 = null;
            pos = savedPos4;
          }
          if (result23 !== null) {
            var result0 = result23;
          } else {
            var savedPos2 = pos;
            var savedPos3 = pos;
            if (input.substr(pos, 1) === "\\") {
              var result9 = "\\";
              pos += 1;
            } else {
              var result9 = null;
              if (reportMatchFailures) {
                matchFailed("\"\\\\\"");
              }
            }
            if (result9 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result22 = "0";
                pos += 1;
              } else {
                var result22 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result10 = result22 !== null ? result22 : '';
              if (result10 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result21 = "0";
                  pos += 1;
                } else {
                  var result21 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result11 = result21 !== null ? result21 : '';
                if (result11 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result20 = "0";
                    pos += 1;
                  } else {
                    var result20 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result12 = result20 !== null ? result20 : '';
                  if (result12 !== null) {
                    if (input.substr(pos, 1) === "0") {
                      var result19 = "0";
                      pos += 1;
                    } else {
                      var result19 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"0\"");
                      }
                    }
                    var result13 = result19 !== null ? result19 : '';
                    if (result13 !== null) {
                      if (input.substr(pos, 2) === "74") {
                        var result14 = "74";
                        pos += 2;
                      } else {
                        var result14 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"74\"");
                        }
                      }
                      if (result14 !== null) {
                        if (input.substr(pos, 2) === "\r\n") {
                          var result18 = "\r\n";
                          pos += 2;
                        } else {
                          var result18 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"\\r\\n\"");
                          }
                        }
                        if (result18 !== null) {
                          var result16 = result18;
                        } else {
                          if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                            var result17 = input.charAt(pos);
                            pos++;
                          } else {
                            var result17 = null;
                            if (reportMatchFailures) {
                              matchFailed("[ 	\\r\\n]");
                            }
                          }
                          if (result17 !== null) {
                            var result16 = result17;
                          } else {
                            var result16 = null;;
                          };
                        }
                        var result15 = result16 !== null ? result16 : '';
                        if (result15 !== null) {
                          var result7 = [result9, result10, result11, result12, result13, result14, result15];
                        } else {
                          var result7 = null;
                          pos = savedPos3;
                        }
                      } else {
                        var result7 = null;
                        pos = savedPos3;
                      }
                    } else {
                      var result7 = null;
                      pos = savedPos3;
                    }
                  } else {
                    var result7 = null;
                    pos = savedPos3;
                  }
                } else {
                  var result7 = null;
                  pos = savedPos3;
                }
              } else {
                var result7 = null;
                pos = savedPos3;
              }
            } else {
              var result7 = null;
              pos = savedPos3;
            }
            var result8 = result7 !== null
              ? (function() { return "t"; })()
              : null;
            if (result8 !== null) {
              var result6 = result8;
            } else {
              var result6 = null;
              pos = savedPos2;
            }
            if (result6 !== null) {
              var result0 = result6;
            } else {
              var savedPos0 = pos;
              var savedPos1 = pos;
              if (input.substr(pos, 1) === "\\") {
                var result4 = "\\";
                pos += 1;
              } else {
                var result4 = null;
                if (reportMatchFailures) {
                  matchFailed("\"\\\\\"");
                }
              }
              if (result4 !== null) {
                if (input.substr(pos).match(/^[tT]/) !== null) {
                  var result5 = input.charAt(pos);
                  pos++;
                } else {
                  var result5 = null;
                  if (reportMatchFailures) {
                    matchFailed("[tT]");
                  }
                }
                if (result5 !== null) {
                  var result2 = [result4, result5];
                } else {
                  var result2 = null;
                  pos = savedPos1;
                }
              } else {
                var result2 = null;
                pos = savedPos1;
              }
              var result3 = result2 !== null
                ? (function(char_) { return char_; })(result2[1])
                : null;
              if (result3 !== null) {
                var result1 = result3;
              } else {
                var result1 = null;
                pos = savedPos0;
              }
              if (result1 !== null) {
                var result0 = result1;
              } else {
                var result0 = null;;
              };
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_U() {
        var cacheKey = 'U@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        if (input.substr(pos).match(/^[uU]/) !== null) {
          var result40 = input.charAt(pos);
          pos++;
        } else {
          var result40 = null;
          if (reportMatchFailures) {
            matchFailed("[uU]");
          }
        }
        if (result40 !== null) {
          var result0 = result40;
        } else {
          var savedPos4 = pos;
          var savedPos5 = pos;
          if (input.substr(pos, 1) === "\\") {
            var result26 = "\\";
            pos += 1;
          } else {
            var result26 = null;
            if (reportMatchFailures) {
              matchFailed("\"\\\\\"");
            }
          }
          if (result26 !== null) {
            if (input.substr(pos, 1) === "0") {
              var result39 = "0";
              pos += 1;
            } else {
              var result39 = null;
              if (reportMatchFailures) {
                matchFailed("\"0\"");
              }
            }
            var result27 = result39 !== null ? result39 : '';
            if (result27 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result38 = "0";
                pos += 1;
              } else {
                var result38 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result28 = result38 !== null ? result38 : '';
              if (result28 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result37 = "0";
                  pos += 1;
                } else {
                  var result37 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result29 = result37 !== null ? result37 : '';
                if (result29 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result36 = "0";
                    pos += 1;
                  } else {
                    var result36 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result30 = result36 !== null ? result36 : '';
                  if (result30 !== null) {
                    if (input.substr(pos, 2) === "55") {
                      var result31 = "55";
                      pos += 2;
                    } else {
                      var result31 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"55\"");
                      }
                    }
                    if (result31 !== null) {
                      if (input.substr(pos, 2) === "\r\n") {
                        var result35 = "\r\n";
                        pos += 2;
                      } else {
                        var result35 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"\\r\\n\"");
                        }
                      }
                      if (result35 !== null) {
                        var result33 = result35;
                      } else {
                        if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                          var result34 = input.charAt(pos);
                          pos++;
                        } else {
                          var result34 = null;
                          if (reportMatchFailures) {
                            matchFailed("[ 	\\r\\n]");
                          }
                        }
                        if (result34 !== null) {
                          var result33 = result34;
                        } else {
                          var result33 = null;;
                        };
                      }
                      var result32 = result33 !== null ? result33 : '';
                      if (result32 !== null) {
                        var result24 = [result26, result27, result28, result29, result30, result31, result32];
                      } else {
                        var result24 = null;
                        pos = savedPos5;
                      }
                    } else {
                      var result24 = null;
                      pos = savedPos5;
                    }
                  } else {
                    var result24 = null;
                    pos = savedPos5;
                  }
                } else {
                  var result24 = null;
                  pos = savedPos5;
                }
              } else {
                var result24 = null;
                pos = savedPos5;
              }
            } else {
              var result24 = null;
              pos = savedPos5;
            }
          } else {
            var result24 = null;
            pos = savedPos5;
          }
          var result25 = result24 !== null
            ? (function() { return "U"; })()
            : null;
          if (result25 !== null) {
            var result23 = result25;
          } else {
            var result23 = null;
            pos = savedPos4;
          }
          if (result23 !== null) {
            var result0 = result23;
          } else {
            var savedPos2 = pos;
            var savedPos3 = pos;
            if (input.substr(pos, 1) === "\\") {
              var result9 = "\\";
              pos += 1;
            } else {
              var result9 = null;
              if (reportMatchFailures) {
                matchFailed("\"\\\\\"");
              }
            }
            if (result9 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result22 = "0";
                pos += 1;
              } else {
                var result22 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result10 = result22 !== null ? result22 : '';
              if (result10 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result21 = "0";
                  pos += 1;
                } else {
                  var result21 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result11 = result21 !== null ? result21 : '';
                if (result11 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result20 = "0";
                    pos += 1;
                  } else {
                    var result20 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result12 = result20 !== null ? result20 : '';
                  if (result12 !== null) {
                    if (input.substr(pos, 1) === "0") {
                      var result19 = "0";
                      pos += 1;
                    } else {
                      var result19 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"0\"");
                      }
                    }
                    var result13 = result19 !== null ? result19 : '';
                    if (result13 !== null) {
                      if (input.substr(pos, 2) === "75") {
                        var result14 = "75";
                        pos += 2;
                      } else {
                        var result14 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"75\"");
                        }
                      }
                      if (result14 !== null) {
                        if (input.substr(pos, 2) === "\r\n") {
                          var result18 = "\r\n";
                          pos += 2;
                        } else {
                          var result18 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"\\r\\n\"");
                          }
                        }
                        if (result18 !== null) {
                          var result16 = result18;
                        } else {
                          if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                            var result17 = input.charAt(pos);
                            pos++;
                          } else {
                            var result17 = null;
                            if (reportMatchFailures) {
                              matchFailed("[ 	\\r\\n]");
                            }
                          }
                          if (result17 !== null) {
                            var result16 = result17;
                          } else {
                            var result16 = null;;
                          };
                        }
                        var result15 = result16 !== null ? result16 : '';
                        if (result15 !== null) {
                          var result7 = [result9, result10, result11, result12, result13, result14, result15];
                        } else {
                          var result7 = null;
                          pos = savedPos3;
                        }
                      } else {
                        var result7 = null;
                        pos = savedPos3;
                      }
                    } else {
                      var result7 = null;
                      pos = savedPos3;
                    }
                  } else {
                    var result7 = null;
                    pos = savedPos3;
                  }
                } else {
                  var result7 = null;
                  pos = savedPos3;
                }
              } else {
                var result7 = null;
                pos = savedPos3;
              }
            } else {
              var result7 = null;
              pos = savedPos3;
            }
            var result8 = result7 !== null
              ? (function() { return "u"; })()
              : null;
            if (result8 !== null) {
              var result6 = result8;
            } else {
              var result6 = null;
              pos = savedPos2;
            }
            if (result6 !== null) {
              var result0 = result6;
            } else {
              var savedPos0 = pos;
              var savedPos1 = pos;
              if (input.substr(pos, 1) === "\\") {
                var result4 = "\\";
                pos += 1;
              } else {
                var result4 = null;
                if (reportMatchFailures) {
                  matchFailed("\"\\\\\"");
                }
              }
              if (result4 !== null) {
                if (input.substr(pos).match(/^[uU]/) !== null) {
                  var result5 = input.charAt(pos);
                  pos++;
                } else {
                  var result5 = null;
                  if (reportMatchFailures) {
                    matchFailed("[uU]");
                  }
                }
                if (result5 !== null) {
                  var result2 = [result4, result5];
                } else {
                  var result2 = null;
                  pos = savedPos1;
                }
              } else {
                var result2 = null;
                pos = savedPos1;
              }
              var result3 = result2 !== null
                ? (function(char_) { return char_; })(result2[1])
                : null;
              if (result3 !== null) {
                var result1 = result3;
              } else {
                var result1 = null;
                pos = savedPos0;
              }
              if (result1 !== null) {
                var result0 = result1;
              } else {
                var result0 = null;;
              };
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_X() {
        var cacheKey = 'X@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        if (input.substr(pos).match(/^[xX]/) !== null) {
          var result40 = input.charAt(pos);
          pos++;
        } else {
          var result40 = null;
          if (reportMatchFailures) {
            matchFailed("[xX]");
          }
        }
        if (result40 !== null) {
          var result0 = result40;
        } else {
          var savedPos4 = pos;
          var savedPos5 = pos;
          if (input.substr(pos, 1) === "\\") {
            var result26 = "\\";
            pos += 1;
          } else {
            var result26 = null;
            if (reportMatchFailures) {
              matchFailed("\"\\\\\"");
            }
          }
          if (result26 !== null) {
            if (input.substr(pos, 1) === "0") {
              var result39 = "0";
              pos += 1;
            } else {
              var result39 = null;
              if (reportMatchFailures) {
                matchFailed("\"0\"");
              }
            }
            var result27 = result39 !== null ? result39 : '';
            if (result27 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result38 = "0";
                pos += 1;
              } else {
                var result38 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result28 = result38 !== null ? result38 : '';
              if (result28 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result37 = "0";
                  pos += 1;
                } else {
                  var result37 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result29 = result37 !== null ? result37 : '';
                if (result29 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result36 = "0";
                    pos += 1;
                  } else {
                    var result36 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result30 = result36 !== null ? result36 : '';
                  if (result30 !== null) {
                    if (input.substr(pos, 2) === "58") {
                      var result31 = "58";
                      pos += 2;
                    } else {
                      var result31 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"58\"");
                      }
                    }
                    if (result31 !== null) {
                      if (input.substr(pos, 2) === "\r\n") {
                        var result35 = "\r\n";
                        pos += 2;
                      } else {
                        var result35 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"\\r\\n\"");
                        }
                      }
                      if (result35 !== null) {
                        var result33 = result35;
                      } else {
                        if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                          var result34 = input.charAt(pos);
                          pos++;
                        } else {
                          var result34 = null;
                          if (reportMatchFailures) {
                            matchFailed("[ 	\\r\\n]");
                          }
                        }
                        if (result34 !== null) {
                          var result33 = result34;
                        } else {
                          var result33 = null;;
                        };
                      }
                      var result32 = result33 !== null ? result33 : '';
                      if (result32 !== null) {
                        var result24 = [result26, result27, result28, result29, result30, result31, result32];
                      } else {
                        var result24 = null;
                        pos = savedPos5;
                      }
                    } else {
                      var result24 = null;
                      pos = savedPos5;
                    }
                  } else {
                    var result24 = null;
                    pos = savedPos5;
                  }
                } else {
                  var result24 = null;
                  pos = savedPos5;
                }
              } else {
                var result24 = null;
                pos = savedPos5;
              }
            } else {
              var result24 = null;
              pos = savedPos5;
            }
          } else {
            var result24 = null;
            pos = savedPos5;
          }
          var result25 = result24 !== null
            ? (function() { return "X"; })()
            : null;
          if (result25 !== null) {
            var result23 = result25;
          } else {
            var result23 = null;
            pos = savedPos4;
          }
          if (result23 !== null) {
            var result0 = result23;
          } else {
            var savedPos2 = pos;
            var savedPos3 = pos;
            if (input.substr(pos, 1) === "\\") {
              var result9 = "\\";
              pos += 1;
            } else {
              var result9 = null;
              if (reportMatchFailures) {
                matchFailed("\"\\\\\"");
              }
            }
            if (result9 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result22 = "0";
                pos += 1;
              } else {
                var result22 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result10 = result22 !== null ? result22 : '';
              if (result10 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result21 = "0";
                  pos += 1;
                } else {
                  var result21 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result11 = result21 !== null ? result21 : '';
                if (result11 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result20 = "0";
                    pos += 1;
                  } else {
                    var result20 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result12 = result20 !== null ? result20 : '';
                  if (result12 !== null) {
                    if (input.substr(pos, 1) === "0") {
                      var result19 = "0";
                      pos += 1;
                    } else {
                      var result19 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"0\"");
                      }
                    }
                    var result13 = result19 !== null ? result19 : '';
                    if (result13 !== null) {
                      if (input.substr(pos, 2) === "78") {
                        var result14 = "78";
                        pos += 2;
                      } else {
                        var result14 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"78\"");
                        }
                      }
                      if (result14 !== null) {
                        if (input.substr(pos, 2) === "\r\n") {
                          var result18 = "\r\n";
                          pos += 2;
                        } else {
                          var result18 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"\\r\\n\"");
                          }
                        }
                        if (result18 !== null) {
                          var result16 = result18;
                        } else {
                          if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                            var result17 = input.charAt(pos);
                            pos++;
                          } else {
                            var result17 = null;
                            if (reportMatchFailures) {
                              matchFailed("[ 	\\r\\n]");
                            }
                          }
                          if (result17 !== null) {
                            var result16 = result17;
                          } else {
                            var result16 = null;;
                          };
                        }
                        var result15 = result16 !== null ? result16 : '';
                        if (result15 !== null) {
                          var result7 = [result9, result10, result11, result12, result13, result14, result15];
                        } else {
                          var result7 = null;
                          pos = savedPos3;
                        }
                      } else {
                        var result7 = null;
                        pos = savedPos3;
                      }
                    } else {
                      var result7 = null;
                      pos = savedPos3;
                    }
                  } else {
                    var result7 = null;
                    pos = savedPos3;
                  }
                } else {
                  var result7 = null;
                  pos = savedPos3;
                }
              } else {
                var result7 = null;
                pos = savedPos3;
              }
            } else {
              var result7 = null;
              pos = savedPos3;
            }
            var result8 = result7 !== null
              ? (function() { return "x"; })()
              : null;
            if (result8 !== null) {
              var result6 = result8;
            } else {
              var result6 = null;
              pos = savedPos2;
            }
            if (result6 !== null) {
              var result0 = result6;
            } else {
              var savedPos0 = pos;
              var savedPos1 = pos;
              if (input.substr(pos, 1) === "\\") {
                var result4 = "\\";
                pos += 1;
              } else {
                var result4 = null;
                if (reportMatchFailures) {
                  matchFailed("\"\\\\\"");
                }
              }
              if (result4 !== null) {
                if (input.substr(pos).match(/^[xX]/) !== null) {
                  var result5 = input.charAt(pos);
                  pos++;
                } else {
                  var result5 = null;
                  if (reportMatchFailures) {
                    matchFailed("[xX]");
                  }
                }
                if (result5 !== null) {
                  var result2 = [result4, result5];
                } else {
                  var result2 = null;
                  pos = savedPos1;
                }
              } else {
                var result2 = null;
                pos = savedPos1;
              }
              var result3 = result2 !== null
                ? (function(char_) { return char_; })(result2[1])
                : null;
              if (result3 !== null) {
                var result1 = result3;
              } else {
                var result1 = null;
                pos = savedPos0;
              }
              if (result1 !== null) {
                var result0 = result1;
              } else {
                var result0 = null;;
              };
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_Z() {
        var cacheKey = 'Z@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        if (input.substr(pos).match(/^[zZ]/) !== null) {
          var result42 = input.charAt(pos);
          pos++;
        } else {
          var result42 = null;
          if (reportMatchFailures) {
            matchFailed("[zZ]");
          }
        }
        if (result42 !== null) {
          var result0 = result42;
        } else {
          var savedPos4 = pos;
          var savedPos5 = pos;
          if (input.substr(pos, 1) === "\\") {
            var result27 = "\\";
            pos += 1;
          } else {
            var result27 = null;
            if (reportMatchFailures) {
              matchFailed("\"\\\\\"");
            }
          }
          if (result27 !== null) {
            if (input.substr(pos, 1) === "0") {
              var result41 = "0";
              pos += 1;
            } else {
              var result41 = null;
              if (reportMatchFailures) {
                matchFailed("\"0\"");
              }
            }
            var result28 = result41 !== null ? result41 : '';
            if (result28 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result40 = "0";
                pos += 1;
              } else {
                var result40 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result29 = result40 !== null ? result40 : '';
              if (result29 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result39 = "0";
                  pos += 1;
                } else {
                  var result39 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result30 = result39 !== null ? result39 : '';
                if (result30 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result38 = "0";
                    pos += 1;
                  } else {
                    var result38 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result31 = result38 !== null ? result38 : '';
                  if (result31 !== null) {
                    if (input.substr(pos, 1) === "5") {
                      var result32 = "5";
                      pos += 1;
                    } else {
                      var result32 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"5\"");
                      }
                    }
                    if (result32 !== null) {
                      if (input.substr(pos).match(/^[aA]/) !== null) {
                        var result33 = input.charAt(pos);
                        pos++;
                      } else {
                        var result33 = null;
                        if (reportMatchFailures) {
                          matchFailed("[aA]");
                        }
                      }
                      if (result33 !== null) {
                        if (input.substr(pos, 2) === "\r\n") {
                          var result37 = "\r\n";
                          pos += 2;
                        } else {
                          var result37 = null;
                          if (reportMatchFailures) {
                            matchFailed("\"\\r\\n\"");
                          }
                        }
                        if (result37 !== null) {
                          var result35 = result37;
                        } else {
                          if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                            var result36 = input.charAt(pos);
                            pos++;
                          } else {
                            var result36 = null;
                            if (reportMatchFailures) {
                              matchFailed("[ 	\\r\\n]");
                            }
                          }
                          if (result36 !== null) {
                            var result35 = result36;
                          } else {
                            var result35 = null;;
                          };
                        }
                        var result34 = result35 !== null ? result35 : '';
                        if (result34 !== null) {
                          var result25 = [result27, result28, result29, result30, result31, result32, result33, result34];
                        } else {
                          var result25 = null;
                          pos = savedPos5;
                        }
                      } else {
                        var result25 = null;
                        pos = savedPos5;
                      }
                    } else {
                      var result25 = null;
                      pos = savedPos5;
                    }
                  } else {
                    var result25 = null;
                    pos = savedPos5;
                  }
                } else {
                  var result25 = null;
                  pos = savedPos5;
                }
              } else {
                var result25 = null;
                pos = savedPos5;
              }
            } else {
              var result25 = null;
              pos = savedPos5;
            }
          } else {
            var result25 = null;
            pos = savedPos5;
          }
          var result26 = result25 !== null
            ? (function() { return "Z"; })()
            : null;
          if (result26 !== null) {
            var result24 = result26;
          } else {
            var result24 = null;
            pos = savedPos4;
          }
          if (result24 !== null) {
            var result0 = result24;
          } else {
            var savedPos2 = pos;
            var savedPos3 = pos;
            if (input.substr(pos, 1) === "\\") {
              var result9 = "\\";
              pos += 1;
            } else {
              var result9 = null;
              if (reportMatchFailures) {
                matchFailed("\"\\\\\"");
              }
            }
            if (result9 !== null) {
              if (input.substr(pos, 1) === "0") {
                var result23 = "0";
                pos += 1;
              } else {
                var result23 = null;
                if (reportMatchFailures) {
                  matchFailed("\"0\"");
                }
              }
              var result10 = result23 !== null ? result23 : '';
              if (result10 !== null) {
                if (input.substr(pos, 1) === "0") {
                  var result22 = "0";
                  pos += 1;
                } else {
                  var result22 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"0\"");
                  }
                }
                var result11 = result22 !== null ? result22 : '';
                if (result11 !== null) {
                  if (input.substr(pos, 1) === "0") {
                    var result21 = "0";
                    pos += 1;
                  } else {
                    var result21 = null;
                    if (reportMatchFailures) {
                      matchFailed("\"0\"");
                    }
                  }
                  var result12 = result21 !== null ? result21 : '';
                  if (result12 !== null) {
                    if (input.substr(pos, 1) === "0") {
                      var result20 = "0";
                      pos += 1;
                    } else {
                      var result20 = null;
                      if (reportMatchFailures) {
                        matchFailed("\"0\"");
                      }
                    }
                    var result13 = result20 !== null ? result20 : '';
                    if (result13 !== null) {
                      if (input.substr(pos, 1) === "7") {
                        var result14 = "7";
                        pos += 1;
                      } else {
                        var result14 = null;
                        if (reportMatchFailures) {
                          matchFailed("\"7\"");
                        }
                      }
                      if (result14 !== null) {
                        if (input.substr(pos).match(/^[aA]/) !== null) {
                          var result15 = input.charAt(pos);
                          pos++;
                        } else {
                          var result15 = null;
                          if (reportMatchFailures) {
                            matchFailed("[aA]");
                          }
                        }
                        if (result15 !== null) {
                          if (input.substr(pos, 2) === "\r\n") {
                            var result19 = "\r\n";
                            pos += 2;
                          } else {
                            var result19 = null;
                            if (reportMatchFailures) {
                              matchFailed("\"\\r\\n\"");
                            }
                          }
                          if (result19 !== null) {
                            var result17 = result19;
                          } else {
                            if (input.substr(pos).match(/^[ 	\r\n]/) !== null) {
                              var result18 = input.charAt(pos);
                              pos++;
                            } else {
                              var result18 = null;
                              if (reportMatchFailures) {
                                matchFailed("[ 	\\r\\n]");
                              }
                            }
                            if (result18 !== null) {
                              var result17 = result18;
                            } else {
                              var result17 = null;;
                            };
                          }
                          var result16 = result17 !== null ? result17 : '';
                          if (result16 !== null) {
                            var result7 = [result9, result10, result11, result12, result13, result14, result15, result16];
                          } else {
                            var result7 = null;
                            pos = savedPos3;
                          }
                        } else {
                          var result7 = null;
                          pos = savedPos3;
                        }
                      } else {
                        var result7 = null;
                        pos = savedPos3;
                      }
                    } else {
                      var result7 = null;
                      pos = savedPos3;
                    }
                  } else {
                    var result7 = null;
                    pos = savedPos3;
                  }
                } else {
                  var result7 = null;
                  pos = savedPos3;
                }
              } else {
                var result7 = null;
                pos = savedPos3;
              }
            } else {
              var result7 = null;
              pos = savedPos3;
            }
            var result8 = result7 !== null
              ? (function() { return "z"; })()
              : null;
            if (result8 !== null) {
              var result6 = result8;
            } else {
              var result6 = null;
              pos = savedPos2;
            }
            if (result6 !== null) {
              var result0 = result6;
            } else {
              var savedPos0 = pos;
              var savedPos1 = pos;
              if (input.substr(pos, 1) === "\\") {
                var result4 = "\\";
                pos += 1;
              } else {
                var result4 = null;
                if (reportMatchFailures) {
                  matchFailed("\"\\\\\"");
                }
              }
              if (result4 !== null) {
                if (input.substr(pos).match(/^[zZ]/) !== null) {
                  var result5 = input.charAt(pos);
                  pos++;
                } else {
                  var result5 = null;
                  if (reportMatchFailures) {
                    matchFailed("[zZ]");
                  }
                }
                if (result5 !== null) {
                  var result2 = [result4, result5];
                } else {
                  var result2 = null;
                  pos = savedPos1;
                }
              } else {
                var result2 = null;
                pos = savedPos1;
              }
              var result3 = result2 !== null
                ? (function(char_) { return char_; })(result2[1])
                : null;
              if (result3 !== null) {
                var result1 = result3;
              } else {
                var result1 = null;
                pos = savedPos0;
              }
              if (result1 !== null) {
                var result0 = result1;
              } else {
                var result0 = null;;
              };
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_S() {
        var cacheKey = 'S@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var result1 = [];
        var result3 = parse_comment();
        while (result3 !== null) {
          result1.push(result3);
          var result3 = parse_comment();
        }
        if (result1 !== null) {
          var result2 = parse_s();
          if (result2 !== null) {
            var result0 = [result1, result2];
          } else {
            var result0 = null;
            pos = savedPos0;
          }
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("whitespace");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_CDO() {
        var cacheKey = 'CDO@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var result1 = [];
        var result3 = parse_comment();
        while (result3 !== null) {
          result1.push(result3);
          var result3 = parse_comment();
        }
        if (result1 !== null) {
          if (input.substr(pos, 4) === "<!--") {
            var result2 = "<!--";
            pos += 4;
          } else {
            var result2 = null;
            if (reportMatchFailures) {
              matchFailed("\"<!--\"");
            }
          }
          if (result2 !== null) {
            var result0 = [result1, result2];
          } else {
            var result0 = null;
            pos = savedPos0;
          }
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("<!--");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_CDC() {
        var cacheKey = 'CDC@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var result1 = [];
        var result3 = parse_comment();
        while (result3 !== null) {
          result1.push(result3);
          var result3 = parse_comment();
        }
        if (result1 !== null) {
          if (input.substr(pos, 3) === "-->") {
            var result2 = "-->";
            pos += 3;
          } else {
            var result2 = null;
            if (reportMatchFailures) {
              matchFailed("\"-->\"");
            }
          }
          if (result2 !== null) {
            var result0 = [result1, result2];
          } else {
            var result0 = null;
            pos = savedPos0;
          }
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("-->");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_INCLUDES() {
        var cacheKey = 'INCLUDES@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var result1 = [];
        var result3 = parse_comment();
        while (result3 !== null) {
          result1.push(result3);
          var result3 = parse_comment();
        }
        if (result1 !== null) {
          if (input.substr(pos, 2) === "~=") {
            var result2 = "~=";
            pos += 2;
          } else {
            var result2 = null;
            if (reportMatchFailures) {
              matchFailed("\"~=\"");
            }
          }
          if (result2 !== null) {
            var result0 = [result1, result2];
          } else {
            var result0 = null;
            pos = savedPos0;
          }
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("~=");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_DASHMATCH() {
        var cacheKey = 'DASHMATCH@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var result1 = [];
        var result3 = parse_comment();
        while (result3 !== null) {
          result1.push(result3);
          var result3 = parse_comment();
        }
        if (result1 !== null) {
          if (input.substr(pos, 2) === "|=") {
            var result2 = "|=";
            pos += 2;
          } else {
            var result2 = null;
            if (reportMatchFailures) {
              matchFailed("\"|=\"");
            }
          }
          if (result2 !== null) {
            var result0 = [result1, result2];
          } else {
            var result0 = null;
            pos = savedPos0;
          }
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("|=");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_STRING() {
        var cacheKey = 'STRING@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = [];
        var result5 = parse_comment();
        while (result5 !== null) {
          result3.push(result5);
          var result5 = parse_comment();
        }
        if (result3 !== null) {
          var result4 = parse_string();
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(string) { return string; })(result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("string");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_IDENT() {
        var cacheKey = 'IDENT@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = [];
        var result5 = parse_comment();
        while (result5 !== null) {
          result3.push(result5);
          var result5 = parse_comment();
        }
        if (result3 !== null) {
          var result4 = parse_ident();
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(ident) { return {type:'ident', elements: ident}; })(result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("identifier");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_HASH() {
        var cacheKey = 'HASH@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = [];
        var result6 = parse_comment();
        while (result6 !== null) {
          result3.push(result6);
          var result6 = parse_comment();
        }
        if (result3 !== null) {
          if (input.substr(pos, 1) === "#") {
            var result4 = "#";
            pos += 1;
          } else {
            var result4 = null;
            if (reportMatchFailures) {
              matchFailed("\"#\"");
            }
          }
          if (result4 !== null) {
            var result5 = parse_name();
            if (result5 !== null) {
              var result1 = [result3, result4, result5];
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(name) { return "#" + name; })(result1[2])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("hash");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_IMPORT_SYM() {
        var cacheKey = 'IMPORT_SYM@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var result1 = [];
        var result9 = parse_comment();
        while (result9 !== null) {
          result1.push(result9);
          var result9 = parse_comment();
        }
        if (result1 !== null) {
          if (input.substr(pos, 1) === "@") {
            var result2 = "@";
            pos += 1;
          } else {
            var result2 = null;
            if (reportMatchFailures) {
              matchFailed("\"@\"");
            }
          }
          if (result2 !== null) {
            var result3 = parse_I();
            if (result3 !== null) {
              var result4 = parse_M();
              if (result4 !== null) {
                var result5 = parse_P();
                if (result5 !== null) {
                  var result6 = parse_O();
                  if (result6 !== null) {
                    var result7 = parse_R();
                    if (result7 !== null) {
                      var result8 = parse_T();
                      if (result8 !== null) {
                        var result0 = [result1, result2, result3, result4, result5, result6, result7, result8];
                      } else {
                        var result0 = null;
                        pos = savedPos0;
                      }
                    } else {
                      var result0 = null;
                      pos = savedPos0;
                    }
                  } else {
                    var result0 = null;
                    pos = savedPos0;
                  }
                } else {
                  var result0 = null;
                  pos = savedPos0;
                }
              } else {
                var result0 = null;
                pos = savedPos0;
              }
            } else {
              var result0 = null;
              pos = savedPos0;
            }
          } else {
            var result0 = null;
            pos = savedPos0;
          }
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("@import");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_PAGE_SYM() {
        var cacheKey = 'PAGE_SYM@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var result1 = [];
        var result7 = parse_comment();
        while (result7 !== null) {
          result1.push(result7);
          var result7 = parse_comment();
        }
        if (result1 !== null) {
          if (input.substr(pos, 1) === "@") {
            var result2 = "@";
            pos += 1;
          } else {
            var result2 = null;
            if (reportMatchFailures) {
              matchFailed("\"@\"");
            }
          }
          if (result2 !== null) {
            var result3 = parse_P();
            if (result3 !== null) {
              var result4 = parse_A();
              if (result4 !== null) {
                var result5 = parse_G();
                if (result5 !== null) {
                  var result6 = parse_E();
                  if (result6 !== null) {
                    var result0 = [result1, result2, result3, result4, result5, result6];
                  } else {
                    var result0 = null;
                    pos = savedPos0;
                  }
                } else {
                  var result0 = null;
                  pos = savedPos0;
                }
              } else {
                var result0 = null;
                pos = savedPos0;
              }
            } else {
              var result0 = null;
              pos = savedPos0;
            }
          } else {
            var result0 = null;
            pos = savedPos0;
          }
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("@page");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_MEDIA_SYM() {
        var cacheKey = 'MEDIA_SYM@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var result1 = [];
        var result8 = parse_comment();
        while (result8 !== null) {
          result1.push(result8);
          var result8 = parse_comment();
        }
        if (result1 !== null) {
          if (input.substr(pos, 1) === "@") {
            var result2 = "@";
            pos += 1;
          } else {
            var result2 = null;
            if (reportMatchFailures) {
              matchFailed("\"@\"");
            }
          }
          if (result2 !== null) {
            var result3 = parse_M();
            if (result3 !== null) {
              var result4 = parse_E();
              if (result4 !== null) {
                var result5 = parse_D();
                if (result5 !== null) {
                  var result6 = parse_I();
                  if (result6 !== null) {
                    var result7 = parse_A();
                    if (result7 !== null) {
                      var result0 = [result1, result2, result3, result4, result5, result6, result7];
                    } else {
                      var result0 = null;
                      pos = savedPos0;
                    }
                  } else {
                    var result0 = null;
                    pos = savedPos0;
                  }
                } else {
                  var result0 = null;
                  pos = savedPos0;
                }
              } else {
                var result0 = null;
                pos = savedPos0;
              }
            } else {
              var result0 = null;
              pos = savedPos0;
            }
          } else {
            var result0 = null;
            pos = savedPos0;
          }
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("@media");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_CHARSET_SYM() {
        var cacheKey = 'CHARSET_SYM@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var result1 = [];
        var result3 = parse_comment();
        while (result3 !== null) {
          result1.push(result3);
          var result3 = parse_comment();
        }
        if (result1 !== null) {
          if (input.substr(pos, 9) === "@charset ") {
            var result2 = "@charset ";
            pos += 9;
          } else {
            var result2 = null;
            if (reportMatchFailures) {
              matchFailed("\"@charset \"");
            }
          }
          if (result2 !== null) {
            var result0 = [result1, result2];
          } else {
            var result0 = null;
            pos = savedPos0;
          }
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("@charset");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_IMPORTANT_SYM() {
        var cacheKey = 'IMPORTANT_SYM@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = [];
        var result18 = parse_comment();
        while (result18 !== null) {
          result3.push(result18);
          var result18 = parse_comment();
        }
        if (result3 !== null) {
          if (input.substr(pos, 1) === "!") {
            var result4 = "!";
            pos += 1;
          } else {
            var result4 = null;
            if (reportMatchFailures) {
              matchFailed("\"!\"");
            }
          }
          if (result4 !== null) {
            var result5 = [];
            var result17 = parse_s();
            if (result17 !== null) {
              var result15 = result17;
            } else {
              var result16 = parse_comment();
              if (result16 !== null) {
                var result15 = result16;
              } else {
                var result15 = null;;
              };
            }
            while (result15 !== null) {
              result5.push(result15);
              var result17 = parse_s();
              if (result17 !== null) {
                var result15 = result17;
              } else {
                var result16 = parse_comment();
                if (result16 !== null) {
                  var result15 = result16;
                } else {
                  var result15 = null;;
                };
              }
            }
            if (result5 !== null) {
              var result6 = parse_I();
              if (result6 !== null) {
                var result7 = parse_M();
                if (result7 !== null) {
                  var result8 = parse_P();
                  if (result8 !== null) {
                    var result9 = parse_O();
                    if (result9 !== null) {
                      var result10 = parse_R();
                      if (result10 !== null) {
                        var result11 = parse_T();
                        if (result11 !== null) {
                          var result12 = parse_A();
                          if (result12 !== null) {
                            var result13 = parse_N();
                            if (result13 !== null) {
                              var result14 = parse_T();
                              if (result14 !== null) {
                                var result1 = [result3, result4, result5, result6, result7, result8, result9, result10, result11, result12, result13, result14];
                              } else {
                                var result1 = null;
                                pos = savedPos1;
                              }
                            } else {
                              var result1 = null;
                              pos = savedPos1;
                            }
                          } else {
                            var result1 = null;
                            pos = savedPos1;
                          }
                        } else {
                          var result1 = null;
                          pos = savedPos1;
                        }
                      } else {
                        var result1 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function() { return "!important"; })()
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("!important");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_EMS() {
        var cacheKey = 'EMS@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = [];
        var result7 = parse_comment();
        while (result7 !== null) {
          result3.push(result7);
          var result7 = parse_comment();
        }
        if (result3 !== null) {
          var result4 = parse_num();
          if (result4 !== null) {
            var result5 = parse_E();
            if (result5 !== null) {
              var result6 = parse_M();
              if (result6 !== null) {
                var result1 = [result3, result4, result5, result6];
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(num, e, m) { return num + e + m; })(result1[1], result1[2], result1[3])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("length");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_EXS() {
        var cacheKey = 'EXS@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = [];
        var result7 = parse_comment();
        while (result7 !== null) {
          result3.push(result7);
          var result7 = parse_comment();
        }
        if (result3 !== null) {
          var result4 = parse_num();
          if (result4 !== null) {
            var result5 = parse_E();
            if (result5 !== null) {
              var result6 = parse_X();
              if (result6 !== null) {
                var result1 = [result3, result4, result5, result6];
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(num, e, x) { return num + e + x; })(result1[1], result1[2], result1[3])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("length");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_LENGTH() {
        var cacheKey = 'LENGTH@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = [];
        var result24 = parse_comment();
        while (result24 !== null) {
          result3.push(result24);
          var result24 = parse_comment();
        }
        if (result3 !== null) {
          var result4 = parse_num();
          if (result4 !== null) {
            var savedPos7 = pos;
            var result22 = parse_P();
            if (result22 !== null) {
              var result23 = parse_X();
              if (result23 !== null) {
                var result21 = [result22, result23];
              } else {
                var result21 = null;
                pos = savedPos7;
              }
            } else {
              var result21 = null;
              pos = savedPos7;
            }
            if (result21 !== null) {
              var result5 = result21;
            } else {
              var savedPos6 = pos;
              var result19 = parse_C();
              if (result19 !== null) {
                var result20 = parse_M();
                if (result20 !== null) {
                  var result18 = [result19, result20];
                } else {
                  var result18 = null;
                  pos = savedPos6;
                }
              } else {
                var result18 = null;
                pos = savedPos6;
              }
              if (result18 !== null) {
                var result5 = result18;
              } else {
                var savedPos5 = pos;
                var result16 = parse_M();
                if (result16 !== null) {
                  var result17 = parse_M();
                  if (result17 !== null) {
                    var result15 = [result16, result17];
                  } else {
                    var result15 = null;
                    pos = savedPos5;
                  }
                } else {
                  var result15 = null;
                  pos = savedPos5;
                }
                if (result15 !== null) {
                  var result5 = result15;
                } else {
                  var savedPos4 = pos;
                  var result13 = parse_I();
                  if (result13 !== null) {
                    var result14 = parse_N();
                    if (result14 !== null) {
                      var result12 = [result13, result14];
                    } else {
                      var result12 = null;
                      pos = savedPos4;
                    }
                  } else {
                    var result12 = null;
                    pos = savedPos4;
                  }
                  if (result12 !== null) {
                    var result5 = result12;
                  } else {
                    var savedPos3 = pos;
                    var result10 = parse_P();
                    if (result10 !== null) {
                      var result11 = parse_T();
                      if (result11 !== null) {
                        var result9 = [result10, result11];
                      } else {
                        var result9 = null;
                        pos = savedPos3;
                      }
                    } else {
                      var result9 = null;
                      pos = savedPos3;
                    }
                    if (result9 !== null) {
                      var result5 = result9;
                    } else {
                      var savedPos2 = pos;
                      var result7 = parse_P();
                      if (result7 !== null) {
                        var result8 = parse_C();
                        if (result8 !== null) {
                          var result6 = [result7, result8];
                        } else {
                          var result6 = null;
                          pos = savedPos2;
                        }
                      } else {
                        var result6 = null;
                        pos = savedPos2;
                      }
                      if (result6 !== null) {
                        var result5 = result6;
                      } else {
                        var result5 = null;;
                      };
                    };
                  };
                };
              };
            }
            if (result5 !== null) {
              var result1 = [result3, result4, result5];
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(num, unit) {
                return num + unit.join("");
              })(result1[1], result1[2])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("length");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_ANGLE() {
        var cacheKey = 'ANGLE@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = [];
        var result19 = parse_comment();
        while (result19 !== null) {
          result3.push(result19);
          var result19 = parse_comment();
        }
        if (result3 !== null) {
          var result4 = parse_num();
          if (result4 !== null) {
            var savedPos4 = pos;
            var result16 = parse_D();
            if (result16 !== null) {
              var result17 = parse_E();
              if (result17 !== null) {
                var result18 = parse_G();
                if (result18 !== null) {
                  var result15 = [result16, result17, result18];
                } else {
                  var result15 = null;
                  pos = savedPos4;
                }
              } else {
                var result15 = null;
                pos = savedPos4;
              }
            } else {
              var result15 = null;
              pos = savedPos4;
            }
            if (result15 !== null) {
              var result5 = result15;
            } else {
              var savedPos3 = pos;
              var result12 = parse_R();
              if (result12 !== null) {
                var result13 = parse_A();
                if (result13 !== null) {
                  var result14 = parse_D();
                  if (result14 !== null) {
                    var result11 = [result12, result13, result14];
                  } else {
                    var result11 = null;
                    pos = savedPos3;
                  }
                } else {
                  var result11 = null;
                  pos = savedPos3;
                }
              } else {
                var result11 = null;
                pos = savedPos3;
              }
              if (result11 !== null) {
                var result5 = result11;
              } else {
                var savedPos2 = pos;
                var result7 = parse_G();
                if (result7 !== null) {
                  var result8 = parse_R();
                  if (result8 !== null) {
                    var result9 = parse_A();
                    if (result9 !== null) {
                      var result10 = parse_D();
                      if (result10 !== null) {
                        var result6 = [result7, result8, result9, result10];
                      } else {
                        var result6 = null;
                        pos = savedPos2;
                      }
                    } else {
                      var result6 = null;
                      pos = savedPos2;
                    }
                  } else {
                    var result6 = null;
                    pos = savedPos2;
                  }
                } else {
                  var result6 = null;
                  pos = savedPos2;
                }
                if (result6 !== null) {
                  var result5 = result6;
                } else {
                  var result5 = null;;
                };
              };
            }
            if (result5 !== null) {
              var result1 = [result3, result4, result5];
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(num, unit) {
                return num + unit.join("");
              })(result1[1], result1[2])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("angle");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_TIME() {
        var cacheKey = 'TIME@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = [];
        var result12 = parse_comment();
        while (result12 !== null) {
          result3.push(result12);
          var result12 = parse_comment();
        }
        if (result3 !== null) {
          var result4 = parse_num();
          if (result4 !== null) {
            var savedPos2 = pos;
            var savedPos3 = pos;
            var result10 = parse_M();
            if (result10 !== null) {
              var result11 = parse_S_();
              if (result11 !== null) {
                var result8 = [result10, result11];
              } else {
                var result8 = null;
                pos = savedPos3;
              }
            } else {
              var result8 = null;
              pos = savedPos3;
            }
            var result9 = result8 !== null
              ? (function(m, s) { return m + s; })(result8[0], result8[1])
              : null;
            if (result9 !== null) {
              var result7 = result9;
            } else {
              var result7 = null;
              pos = savedPos2;
            }
            if (result7 !== null) {
              var result5 = result7;
            } else {
              var result6 = parse_S_();
              if (result6 !== null) {
                var result5 = result6;
              } else {
                var result5 = null;;
              };
            }
            if (result5 !== null) {
              var result1 = [result3, result4, result5];
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(num, unit) {
                return num + unit;
              })(result1[1], result1[2])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("time");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_FREQ() {
        var cacheKey = 'FREQ@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = [];
        var result13 = parse_comment();
        while (result13 !== null) {
          result3.push(result13);
          var result13 = parse_comment();
        }
        if (result3 !== null) {
          var result4 = parse_num();
          if (result4 !== null) {
            var savedPos3 = pos;
            var result11 = parse_H();
            if (result11 !== null) {
              var result12 = parse_Z();
              if (result12 !== null) {
                var result10 = [result11, result12];
              } else {
                var result10 = null;
                pos = savedPos3;
              }
            } else {
              var result10 = null;
              pos = savedPos3;
            }
            if (result10 !== null) {
              var result5 = result10;
            } else {
              var savedPos2 = pos;
              var result7 = parse_K();
              if (result7 !== null) {
                var result8 = parse_H();
                if (result8 !== null) {
                  var result9 = parse_Z();
                  if (result9 !== null) {
                    var result6 = [result7, result8, result9];
                  } else {
                    var result6 = null;
                    pos = savedPos2;
                  }
                } else {
                  var result6 = null;
                  pos = savedPos2;
                }
              } else {
                var result6 = null;
                pos = savedPos2;
              }
              if (result6 !== null) {
                var result5 = result6;
              } else {
                var result5 = null;;
              };
            }
            if (result5 !== null) {
              var result1 = [result3, result4, result5];
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(num, unit) { return num + unit.join(""); })(result1[1], result1[2])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("frequency");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_DIMENSION() {
        var cacheKey = 'DIMENSION@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = [];
        var result6 = parse_comment();
        while (result6 !== null) {
          result3.push(result6);
          var result6 = parse_comment();
        }
        if (result3 !== null) {
          var result4 = parse_num();
          if (result4 !== null) {
            var result5 = parse_ident();
            if (result5 !== null) {
              var result1 = [result3, result4, result5];
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(num, unit) { return num + unit; })(result1[1], result1[2])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("dimension");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_PERCENTAGE() {
        var cacheKey = 'PERCENTAGE@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = [];
        var result6 = parse_comment();
        while (result6 !== null) {
          result3.push(result6);
          var result6 = parse_comment();
        }
        if (result3 !== null) {
          var result4 = parse_num();
          if (result4 !== null) {
            if (input.substr(pos, 1) === "%") {
              var result5 = "%";
              pos += 1;
            } else {
              var result5 = null;
              if (reportMatchFailures) {
                matchFailed("\"%\"");
              }
            }
            if (result5 !== null) {
              var result1 = [result3, result4, result5];
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(num) { return num + "%"; })(result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("percentage");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_NUMBER() {
        var cacheKey = 'NUMBER@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = [];
        var result5 = parse_comment();
        while (result5 !== null) {
          result3.push(result5);
          var result5 = parse_comment();
        }
        if (result3 !== null) {
          var result4 = parse_num();
          if (result4 !== null) {
            var result1 = [result3, result4];
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(num) { return num; })(result1[1])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("number");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_URI() {
        var cacheKey = 'URI@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = [];
        var result14 = parse_comment();
        while (result14 !== null) {
          result3.push(result14);
          var result14 = parse_comment();
        }
        if (result3 !== null) {
          var result4 = parse_U();
          if (result4 !== null) {
            var result5 = parse_R();
            if (result5 !== null) {
              var result6 = parse_L();
              if (result6 !== null) {
                if (input.substr(pos, 1) === "(") {
                  var result7 = "(";
                  pos += 1;
                } else {
                  var result7 = null;
                  if (reportMatchFailures) {
                    matchFailed("\"(\"");
                  }
                }
                if (result7 !== null) {
                  var result8 = parse_w();
                  if (result8 !== null) {
                    var result13 = parse_string();
                    if (result13 !== null) {
                      var result9 = result13;
                    } else {
                      var result12 = parse_url();
                      if (result12 !== null) {
                        var result9 = result12;
                      } else {
                        var result9 = null;;
                      };
                    }
                    if (result9 !== null) {
                      var result10 = parse_w();
                      if (result10 !== null) {
                        if (input.substr(pos, 1) === ")") {
                          var result11 = ")";
                          pos += 1;
                        } else {
                          var result11 = null;
                          if (reportMatchFailures) {
                            matchFailed("\")\"");
                          }
                        }
                        if (result11 !== null) {
                          var result1 = [result3, result4, result5, result6, result7, result8, result9, result10, result11];
                        } else {
                          var result1 = null;
                          pos = savedPos1;
                        }
                      } else {
                        var result1 = null;
                        pos = savedPos1;
                      }
                    } else {
                      var result1 = null;
                      pos = savedPos1;
                    }
                  } else {
                    var result1 = null;
                    pos = savedPos1;
                  }
                } else {
                  var result1 = null;
                  pos = savedPos1;
                }
              } else {
                var result1 = null;
                pos = savedPos1;
              }
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(elements) {
                  return {
                      type: 'uri',
                      elements: elements
                  }
              })(result1)
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("uri");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_nmcharfunc() {
        var cacheKey = 'nmcharfunc@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        if (input.substr(pos).match(/^[_a-zA-Z0-9\-.]/) !== null) {
          var result3 = input.charAt(pos);
          pos++;
        } else {
          var result3 = null;
          if (reportMatchFailures) {
            matchFailed("[_a-zA-Z0-9\\-.]");
          }
        }
        if (result3 !== null) {
          var result0 = result3;
        } else {
          var result2 = parse_nonascii();
          if (result2 !== null) {
            var result0 = result2;
          } else {
            var result1 = parse_escape();
            if (result1 !== null) {
              var result0 = result1;
            } else {
              var result0 = null;;
            };
          };
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_FUNCIDENT() {
        var cacheKey = 'FUNCIDENT@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        
        var savedPos0 = pos;
        var savedPos1 = pos;
        if (input.substr(pos, 1) === "-") {
          var result7 = "-";
          pos += 1;
        } else {
          var result7 = null;
          if (reportMatchFailures) {
            matchFailed("\"-\"");
          }
        }
        var result3 = result7 !== null ? result7 : '';
        if (result3 !== null) {
          var result4 = parse_nmstart();
          if (result4 !== null) {
            var result5 = [];
            var result6 = parse_nmcharfunc();
            while (result6 !== null) {
              result5.push(result6);
              var result6 = parse_nmcharfunc();
            }
            if (result5 !== null) {
              var result1 = [result3, result4, result5];
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(dash, nmstart, nmchars) {
                return dash + nmstart + nmchars.join("");
              })(result1[0], result1[1], result1[2])
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        
        
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function parse_FUNCTION() {
        var cacheKey = 'FUNCTION@' + pos;
        var cachedResult = cache[cacheKey];
        if (cachedResult) {
          pos = cachedResult.nextPos;
          return cachedResult.result;
        }
        
        var savedReportMatchFailures = reportMatchFailures;
        reportMatchFailures = false;
        var savedPos0 = pos;
        var savedPos1 = pos;
        var result3 = [];
        var result6 = parse_comment();
        while (result6 !== null) {
          result3.push(result6);
          var result6 = parse_comment();
        }
        if (result3 !== null) {
          var result4 = parse_FUNCIDENT();
          if (result4 !== null) {
            if (input.substr(pos, 1) === "(") {
              var result5 = "(";
              pos += 1;
            } else {
              var result5 = null;
              if (reportMatchFailures) {
                matchFailed("\"(\"");
              }
            }
            if (result5 !== null) {
              var result1 = [result3, result4, result5];
            } else {
              var result1 = null;
              pos = savedPos1;
            }
          } else {
            var result1 = null;
            pos = savedPos1;
          }
        } else {
          var result1 = null;
          pos = savedPos1;
        }
        var result2 = result1 !== null
          ? (function(elements) {
                  return {
                      type: 'functionName',
                      elements: elements
                  };
              })(result1)
          : null;
        if (result2 !== null) {
          var result0 = result2;
        } else {
          var result0 = null;
          pos = savedPos0;
        }
        reportMatchFailures = savedReportMatchFailures;
        if (reportMatchFailures && result0 === null) {
          matchFailed("function");
        }
        
        cache[cacheKey] = {
          nextPos: pos,
          result:  result0
        };
        return result0;
      }
      
      function buildErrorMessage() {
        function buildExpected(failuresExpected) {
          failuresExpected.sort();
          
          var lastFailure = null;
          var failuresExpectedUnique = [];
          for (var i = 0; i < failuresExpected.length; i++) {
            if (failuresExpected[i] !== lastFailure) {
              failuresExpectedUnique.push(failuresExpected[i]);
              lastFailure = failuresExpected[i];
            }
          }
          
          switch (failuresExpectedUnique.length) {
            case 0:
              return 'end of input';
            case 1:
              return failuresExpectedUnique[0];
            default:
              return failuresExpectedUnique.slice(0, failuresExpectedUnique.length - 1).join(', ')
                + ' or '
                + failuresExpectedUnique[failuresExpectedUnique.length - 1];
          }
        }
        
        var expected = buildExpected(rightmostMatchFailuresExpected);
        var actualPos = Math.max(pos, rightmostMatchFailuresPos);
        var actual = actualPos < input.length
          ? quote(input.charAt(actualPos))
          : 'end of input';
        
        return 'Expected ' + expected + ' but ' + actual + ' found.';
      }
      
      function computeErrorPosition() {
        /*
         * The first idea was to use |String.split| to break the input up to the
         * error position along newlines and derive the line and column from
         * there. However IE's |split| implementation is so broken that it was
         * enough to prevent it.
         */
        
        var line = 1;
        var column = 1;
        var seenCR = false;
        
        for (var i = 0; i <  rightmostMatchFailuresPos; i++) {
          var ch = input.charAt(i);
          if (ch === '\n') {
            if (!seenCR) { line++; }
            column = 1;
            seenCR = false;
          } else if (ch === '\r' | ch === '\u2028' || ch === '\u2029') {
            line++;
            column = 1;
            seenCR = true;
          } else {
            column++;
            seenCR = false;
          }
        }
        
        return { line: line, column: column };
      }
      
      
      
      var result = parseFunctions[startRule]();
      
      /*
       * The parser is now in one of the following three states:
       *
       * 1. The parser successfully parsed the whole input.
       *
       *    - |result !== null|
       *    - |pos === input.length|
       *    - |rightmostMatchFailuresExpected| may or may not contain something
       *
       * 2. The parser successfully parsed only a part of the input.
       *
       *    - |result !== null|
       *    - |pos < input.length|
       *    - |rightmostMatchFailuresExpected| may or may not contain something
       *
       * 3. The parser did not successfully parse any part of the input.
       *
       *   - |result === null|
       *   - |pos === 0|
       *   - |rightmostMatchFailuresExpected| contains at least one failure
       *
       * All code following this comment (including called functions) must
       * handle these states.
       */
      if (result === null || pos !== input.length) {
        var errorPosition = computeErrorPosition();
        throw new this.SyntaxError(
          buildErrorMessage(),
          errorPosition.line,
          errorPosition.column
        );
      }
      
      return result;
    },
    
    /* Returns the parser source code. */
    toSource: function() { return this._source; }
  };
  
  /* Thrown when a parser encounters a syntax error. */
  
  result.SyntaxError = function(message, line, column) {
    this.name = 'SyntaxError';
    this.message = message;
    this.line = line;
    this.column = column;
  };
  
  result.SyntaxError.prototype = Error.prototype;
  
  return result;
})();
